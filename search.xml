<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[为什么越来越多像知乎这样的知识平台能火起来？]]></title>
    <url>%2Fphilosophy%2Fhow%2F2017%2F11%2F25%2Fa-catalogue-of-the-internet-s-knowledge.html</url>
    <content type="text"><![CDATA[现状知识大爆炸，要想不落后，就要一直学习。但是现在要怎么学习？和以前一样去图书馆，然后按照图书馆的分类索引，找到自己想学习的书本，最后开始学习新知识？当然不，你这样做，也许现在的大部分人会认为：你真落后！ 毕竟在这个网络无处不及的时代，只需随手拿起你的智能手机，就能学习，而且学到的知识还可能比图书馆书本中的更新呢。另外，一个潮流的现代人还可能会问：为什么要看枯燥的文字，直接通过互联网看形象生动的视频不是更好？ 看起来很有道理，但是大部分潮流的现代人又是否真正学习到了知识，还是沉迷在互联网的娱乐之中？ 我不属于大部分！我每天都会查看自己订阅的RSS，每天都会通过社交软件与大家学习交流，每天都会查看像知乎这样的知识平台…… 那你觉得麻烦不？反正懒洋洋的博主觉得太麻烦，太低效了。为什么会这样，难道我们正在被自己创造的技术捆绑？ 知识源定义「知识源」：人类已知知识的存储介质。 要获得知识必须花时间，且首先肯定需要自己花时间去了解知识源，然后取自己所需的知识。 但现在主要知识源是互联网而不是放纸质书的图书馆了，知识也不只是纸质书上的文字，还有视频，图片…… 放纸质书的图书馆——定义下文中的「图书馆」。 多平台的缺陷知识源的表象，图书馆就一个平台——现实中的一个建筑，而互联网则是各种平台，比如：各种网站（包括Github），各种APP（包括Telegram）。这就导致在互联网上，知识可能在不同平台上，甚至一种知识都可能都在不同平台上。 如此，要完整学习一种知识就要不断浏览各种不同平台，而这过程就会有时间浪费，且有不完整的风险，不像在图书馆找几本书就基本OK。 另，互联网上一个平台可能有其它信息，不是自己所需的知识，但也许会消耗你的时间，比如哪个女明星和哪个男明星咋了…… 分类索引图书馆的书本有分类索引，我们可以通过这种分类索引快速了解知识源，这种分类索引也是我们习惯的知识分类，但互联网上没有这种我们熟悉的分类索引，这就意味着很难快速了解知识源，更不用说找到自己所需的知识了。 现在已有的解决方案：建立一个知识平台，由这个知识平台分类，比如知乎。但是互联网才是知识源，而不是一个知识平台，所以这个解决方案不完美，有不完整的风险。 另，此解决方案也没解决多平台的时间浪费问题。 我们需要一个知识平台，也需要一个基于用户定制的知识推送平台，将互联网上不同平台的用户所需知识推送给用户。 questions所以问题是： 现在有没有一种服务，推送各种平台上的自己所需知识？ 互联网这个知识源有没有一种更好的“分类索引”？（对大众有利） 最后，我们不是在被自己创造的技术捆绑，而是在被不完善的技术绊脚。 from Telegram @ 2017-11-09 02:14:15]]></content>
      <categories>
        <category>philosophy</category>
        <category>how</category>
      </categories>
      <tags>
        <tag>philosophy</tag>
        <tag>association</tag>
        <tag>after-physics(形而上学)</tag>
        <tag>synthesis(综合)</tag>
        <tag>questions</tag>
        <tag>想象</tag>
        <tag>真理</tag>
        <tag>沉迷于删删改改</tag>
        <tag>好奇心</tag>
        <tag>critique(批判)</tag>
        <tag>未来</tag>
        <tag>epic</tag>
        <tag>目标</tag>
        <tag>technology</tag>
        <tag>bb-for-fun</tag>
        <tag>practical-science(实践科学)</tag>
        <tag>前额一冷</tag>
        <tag>知识</tag>
        <tag>学习</tag>
        <tag>how</tag>
        <tag>analysis(分析)</tag>
        <tag>假象</tag>
        <tag>internet</tag>
        <tag>知识平台</tag>
        <tag>分类</tag>
        <tag>技术恐惧</tag>
        <tag>图书馆</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Kali Linux安装Peek超简单生成GIF]]></title>
    <url>%2Ftechnology%2Fcomputer%2Fsystem-software%2F2017%2F11%2F05%2Fsimple-gif-recorder-in-linux.html</url>
    <content type="text"><![CDATA[使用一个叫Peek的软件就OK了，Github地址：https://github.com/phw/peek 先贴上我的操作环境： 12root@kali:~# gnome-shell --versionGNOME Shell 3.22.3 其它环境请自行查看README文档的Requirements。 由于Kali是基于Debian的，因此按照文档中Debian的方法，首先安装依赖： 1apt-get install cmake valac libgtk-3-dev libkeybinder-3.0-dev libxml2-utils gettext txt2man 再编译包： 12345git clone https://github.com/phw/peek.gitmkdir peek/buildcd peek/buildcmake -DCMAKE_INSTALL_PREFIX=/usr -DGSETTINGS_COMPILE=OFF ..make package 最后安装包： 1dpkg -i peek-x.y.z-Linux.deb 刚好看到iPhone X开箱视频，录下看看效果233333～ 好不好奇README文档中的那图是怎么录制的，好奇可以自己试试，反正我好奇的试了试，然……]]></content>
      <categories>
        <category>technology</category>
        <category>computer</category>
        <category>system-software</category>
      </categories>
      <tags>
        <tag>questions</tag>
        <tag>system-software</tag>
        <tag>technology</tag>
        <tag>computer</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux + Windows双系统，Grub突然不见了？！]]></title>
    <url>%2Ftechnology%2Fcomputer%2Fsystem-software%2F2017%2F11%2F04%2Fhow-to-reinstall-grub.html</url>
    <content type="text"><![CDATA[电脑一次睡眠未醒死机，强制重启后，长时间的等待给了我一种不好的预感。果然，发现没了熟悉的Grub界面，反而直接进Win10，进BIOS一看，发现没有Grub的启动项了…… 故障描述首先贴出环境，电脑的引导是UEFI+GPT1，系统是Kali Liunx + Windows 10。Linux下笔记本电脑盖上后睡眠，有时候会“醒不来”，打开后电脑CPU风扇狂转，只有长按电源键强制断电。前些天又是这样，长按断电关机重启后，一段长时间的等待给了我一种不好的预感，然后发现Grub界面没了，开机直接进Windows 10，进BIOS发现Grub的启动项没了。 原因分析一开始赶紧拿起手机打开Google，emmmmm……输入什么关键字好呢？大脑一片空白，想着BIOS里的Grub的启动项没了，那就恢复一下呗，就和恢复Windows的启动项一样。但是行动后，发现常用来帮别人重装系统的U盘——微PE的WinPE中的工具好像没办法，它只能恢复Windows的启动项。 行动受挫后才突然开窍，开机后的操作系统启动管理器是Linux下的Grub，进Windows也是通过Grub，应该要在Linux环境下重建Grub，而不是通过WinPE下修复Windows的工具。于是Google重建 Grub U盘，期间阅读分析搜索的结果，多次修改关键字，最后终于搜到有用的文章，并将问题顺利解决。 Google到的有用文章： 重新安装grub-efi How to Repair, Restore, or Reinstall Grub 2 with a Ubuntu Live CD or USB 看了第一篇文章中博主的分析，分析下我的原因：强制断电导致BIOS损坏，于是开机后主板自动从备份BIOS里恢复，EFI启动记录就丢失，然后Grub就消失了。 修复故障综合上面两篇文章。 准备U盘先默默去Windows下载Kali Linux，通过Win32 Disk Imager写进另一个U盘，然后重启狂按ESC启动U盘，进Kali Live系统。 挂载硬盘因为用的是U盘中的系统，所以要先挂载电脑的硬盘到当前系统，先lsblk查看硬盘，再fdisk -l /dev/sda查看硬盘分区，最后挂载Linux系统的根分区，比如我的硬盘是sda，Linux系统的根分区是sda6，则： 1mount /dev/sda6 /mnt Now bind the directories that grub needs access to to detect other operating systems, like so. 1234mount --bind /dev /mnt/devmount --bind /dev/pts /mnt/dev/ptsmount --bind /proc /mnt/procmount --bind /sys /mnt/sys 安装Grub先用chroot命令改变程序执行时所参考的根目录位置： 1chroot /mnt 安装Grub： 123grub-install /dev/sdagrub-install --recheck /dev/sdaupdate-grub 退出后重启： 1exit &amp;&amp; reboot 开机时按ESC应该就可以看到grub的启动项了，如果不是默认，自己进BIOS修改一下启动项顺序就行。 最后终于开机就能看到熟悉的Grub界面了，哈哈哈哈哈～ 1.Linux用户的UEFI固件指南：https://www.linuxdashen.com/linux用户的uefi固件指南 ↩]]></content>
      <categories>
        <category>technology</category>
        <category>computer</category>
        <category>system-software</category>
      </categories>
      <tags>
        <tag>system-software</tag>
        <tag>technology</tag>
        <tag>computer</tag>
        <tag>linux</tag>
        <tag>how</tag>
        <tag>后脑一凉</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[童话]]></title>
    <url>%2Fbeautiful%2Fnotnow%2F2017%2F11%2F04%2Ffairy-tale.html</url>
    <content type="text"><![CDATA[童话般的草绿色门前发生着童话般的故事两只懒洋洋的兔子下面懒洋洋的他努力举高上面懒洋洋的小可爱一起去感受那被封住的信封她童话般的心灵粉红色如是说看似懒洋洋内心却坚强稍微倾斜的的视角如是说2017-10-28 20:31:27]]></content>
      <categories>
        <category>beautiful</category>
        <category>notnow</category>
      </categories>
      <tags>
        <tag>沉迷于删删改改</tag>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>love</tag>
        <tag>开心</tag>
        <tag>诗</tag>
        <tag>童话</tag>
        <tag>bb-for-fun</tag>
        <tag>notnow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Kali Linux安装Fcitx]]></title>
    <url>%2Ftechnology%2Fcomputer%2Fsystem-software%2F2017%2F10%2F03%2Finstall-fcitx-in-kali-linux-to-input-chinese.html</url>
    <content type="text"><![CDATA[安装12apt-get updateapt-get install fcitx fcitx-googlepinyin 配置1.鼠标右键点击托盘键盘图标，选择Configure1。 2.点击左下角的加号，找到最后一项，选中Google Pinyin，确定。 3.更多配置可以自己尝试，或者查看ArchWiki。 美化鼠标右键点击托盘键盘图标，鼠标移到skin，可以看到自带三种皮肤：default，classic，dark。个人觉得就dark还看得过去，特别是Kali默认的暗色主题，用dark很合适。 当然，如果你把Gnome主题换成了雪白雪白的，那么dark估计就不行了，咋整呢？ solution 1安装Gnome shell插件2，Input Method Panel，插件安装方法见这篇文章。 效果超赞的，直接和主题相配。 solution 2博主Google到Github一个漂亮的Material风格的皮肤，首先下载：https://github.com/ootaharuki99/fcitx-skin-material 然后将material文件夹移动到/usr/share/fcitx/skin/目录下，托盘图标右键skin即可换皮肤。 托盘的图标太亮 将/usr/share/fcitx/skin/classic/目录下的active.png和inactive.png复制到/usr/share/fcitx/skin/material/目录，替换即可。 字体太大，输入英文时颜色不好分辨 修改material主题目录下的fcitx_skin.conf文件： 1234FontSize=11MenuFontSize=10TipColor=220 220 220InputColor=170 170 170 solution 3要是你还是觉得不行，有能力可以自己制作皮肤，https://forum.suse.org.cn/viewtopic.php?f=16&amp;t=731 未解决问题Wine QQ无法输入中文，暂时未解决，三种提示： 1.在其它窗口输入，然后复制粘贴。 2.可能有用的解决方法： https://wiki.archlinux.org/index.php/Tencent_QQ_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#Wine_QQ 3.直接用cd到目录下wine命令行启动，查看报错信息。 1.图文教程：https://www.zhihu.com/question/53215310/answer/209703807 ↩2.浏览官网发现的：https://fcitx-im.org/wiki/Fcitx ↩]]></content>
      <categories>
        <category>technology</category>
        <category>computer</category>
        <category>system-software</category>
      </categories>
      <tags>
        <tag>system-software</tag>
        <tag>technology</tag>
        <tag>computer</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux变macOS]]></title>
    <url>%2Ftechnology%2Fcomputer%2Fsystem-software%2F2017%2F10%2F03%2Fmake-linux-looks-like-macos.html</url>
    <content type="text"><![CDATA[苹果的产品对美都有极致追求，macOS更是如此，但作为一个喜欢Linux开源之美，又喜欢苹果之美，且还是个屌丝的我（手动划重点），怎么把Linux变macOS？ (function(){var player = new DPlayer({"container":document.getElementById("dplayer9"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/make-linux-looks-like-macos.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 题外话折腾的原因呢，安装的网易云音乐，有一些歌曲不能播放，很怪，于是Google了一大堆，说要安装gstreamer，于是安装了一大堆gstreamer相关的包。但是，发现问题还是没有解决啊，于是卸载呗，突然想起百度经验上面的apt-get介绍，有个强力推荐，于是然后apt-get autoremove gstreamer* --purge卸载呗。卸载了好久啊，想起了之前的rm悲剧，然后真的又悲剧了…… 产生了三个悲剧： 导致EasyScreenCast没用 在Tweak Tool那显示Error，提到什么Required Gst，无奈只好Google这个插件，找到Github页面，看到依赖gstreamer，恍然大悟，赶紧apt-get install gstreamer*安装，最后终于解决。 导致文件浏览器（Nautilus）无法自动显示图片略缩图（thumbnails） 至今还没解决，只有安装gThumb，点击一个文件夹的图片，然后会自动生成当前文件夹的thumbnails，再重新加载文件夹，便能显示。 已解决，apt-cache search gstreamer，把相关的包全部安装。 悲剧它自己 其中折腾EasyScreenCast时，在Gnome Exitesions看到很多插件，于是Google Top Gnome Exitesions，看Youtube视频，突然发现它的界面好好看啊！然后折腾Theme咯，突然想把自己一直Globe Dark的Gnome界面折腾成macOS风格，于是…… Theme进入正题，先把我的版本贴出来： 12root@kali:~# gnome-shell --versionGNOME Shell 3.22.3 我的是GTK3，如果你的不是这个版本，不要紧，下面的不一定不能装，自己去页面查看说明。 首先打开Tweak Tool，里面的GTK+、Shell theme都可以在gnome-look网站上找到，可以找到自己喜欢的下载，然后放到/usr/share/themes目录下，或者~/.themes/（没有自己创建，并且要安装插件User Themes，gnome shell插件安装方法见这篇文章）目录下即可。 tip：新加个Theme，要关闭Tweak Tool再打开才能看到新加的，如果切换后没有效果，重启Gnome，Alt+F2，输入r回车，再不行就重启系统。 GTK+ &amp; Shell theme下面的三个主题既有GTK+又有Shell的主题，另：有Github地址，且会用Github的，尽量去相应目录直接git clone，这样以后更新就可以直接git pull。 Gnome OSX-III-1.0 https://www.gnome-look.org/p/1171688/ 把Gnome OSX-III-1.0.tar.gz、Gnome-OSX-Shell-themes-1.0.tar.gz、Extra-1.0.tar.gz（里面有壁纸）都下载，然后将Gnome-OSX-Shell-themes-1.0.tar.gz解压的文件夹里面的Gnome-OSX-Light-Shell里面的gnome-shell文件夹复制到Gnome OSX-III-1.0文件夹里。 安装字体，把两个文件复制到/usr/share/fonts/truetype/目录下，然后fc-cache -f -v即可。 OSX Arc White https://www.gnome-look.org/p/1167049/ 下载OSX-Arc-White-v1.4.3.tar.gz，当然这是我现在看到的最新的，如果有新版就下新版。 https://github.com/LinxGem33/OSX-Arc-White macOS Sierra https://www.gnome-look.org/p/1013490/ 下载Description为macOS Sierra Github (latest)的。 Shell theme Human https://www.gnome-look.org/p/1171095/ Icons下载Date最新的，别只看大小，因为压缩方式可能不同。 Shadow https://www.gnome-look.org/p/1012532/ https://github.com/rudrab/Shadow La Capitaine https://www.gnome-look.org/p/1148695/ https://github.com/keeferrourke/la-capitaine-icon-theme macOS https://www.gnome-look.org/p/1102582/ Arc-OSX-Icons https://github.com/LinxGem33/Arc-OSX-Icons 图标安装，gnome-look网站无法直接下载，而是要先安装OCS-Store，然后可以就可以直接安装，OCS-Store会安装到~/.local/share/icons/目录下。 为啥要安装OCS-Store，gnome-look网站页面左上方有个叫Opendesktop的东东，应该就是这个搞的鬼，看起来像是个强大的组织。 当然，有Github页面的，可以直接到/usr/share/icons/目录，或者~/.local/share/icons/目录，然后git clone，以后更新简单。 Terminal主题https://github.com/Mayccoll/Gogh GDM登录界面主题GDM登录界面只有通过替换目录/usr/share/gnome-shell/下的gnome-shell-theme.gresource文件实现更改（替换前务必先备份原文件），壁纸自定义可以通过这种方法重新生成gnome-shell-theme.gresource实现，其它元素自定义困难。 注意：这里的登录界面不是锁屏后的登录界面，锁屏后的登录界面壁纸可以在Tweak Tool中直接自定义。 建议直接Google搜索gnome-shell-theme.gresource，找一个提供这一文件并且合自己口味GTK主题，比如Flat-Plat（下载后，先执行脚本安装主题，然后才会生成这个文件，再去/usr/share/themes/Flat-Plat/gnome-shell/下找这个文件），OSX-Arc-White（直接下载），然后将文件放到上文所提到的目录即可，壁纸可按上文链接中的方法自定义。 博主的配置 类型 主题 GTK+ Gnome OSX-III-1.0 Icons Shadow Shell theme OSX Arc White GDM OSX Arc White Terminal Gogh Aci 为啥GTK+用Gnome OSX-III-1.0？附上页面上该作者的吐槽： This is a gnome-desktop-interpretation of Mac OSX. I’ve tried to implement the feel of OSX on the gnome-applications. In version 3.0 I’ve modernized it in every little detail. There is nothing (not a single item) that is not new. Resulting in a completely rewritten GTK.CSS-file four times bigger than the previous one, while the theme feels more responsive. I’ve also added a dark theme, so Terminal, Photo’s, and Video’s are automatically dark-themed. I’ve spend a great deal of time (3 months) and effort on this theme into fine-tuning it, so I hope you try before you judge ! 的确，这厮用了三个月，界面效果确与其它两个不同，自己对比一下其它两个即能感受出。正如作者所言，细节真的很棒，比如渐变！ 但是，Gnome OSX-III-1.0自带的Shell theme不咋地，所以我用了OSX Arc White的Shell theme，没话说，就是赞！ Icons我用的Shadow，感觉很喜欢这个风格，虽然不太好辨认，但是很合我口味！ Terminal用的Gogh的Aci，然后自己再在Performance&gt;Profiles&gt;Aci&gt;Edit自定义了一下。 GDM用的OSX Arc White自带的（将OSX-Arc-White/gnome-shell/gnome-shell-theme.gresource复制到/usr/share/gnome-shell/下，替换原来的，替换前记得先备份），与Shell theme保持一致吧。 “bugs” 类型 问题 GTK+：Gnome OSX-III-1.0 Gnome的自带应用和其它应用，两种风格的窗口，其它应用的窗口边界控制都有问题。 Shell theme：OSX-Arc-White 右下角Applications按钮后的视图，二级菜单背景色为难看的不透明色，另Dock最右端（屏幕最右）有黑边，鼠标过去可以发现。 细节呐折腾不息！——强迫症患者 顶栏Gnome图标顺序安装了几个插件，弄上顶栏（Top bar），发现网速显示的插件左边空白太大，于是折腾，将它显示在右半部分的最左边。 参考：https://askubuntu.com/questions/453969/how-can-i-order-gnome3-shell-extensions-at-the-top 本来是可以直接更改Simple net speed插件的，但是它的代码看不懂，无奈只好从它左边的两个插件（Openweather，EasyScreenCast）入手。 已安装插件 插件的功能 Topicons plus 将左下脚的托盘图标放在顶栏托盘 Simple net speed 顶栏实时网速显示 Openweather 顶栏显示天气 EasyScreenCast 录屏 首先文件位置取决于你安装插件的方式，apt-get方式安装的在/usr/share/gnome-shell/extensions/，如果是用Firefox网页安装的则是在~/.local/share/gnome-shell/extensions/。 修改Openweather插件，文件位置：/usr/share/gnome-shell/extensions/openweather-extension@jenslody.de/extensions.js Ctrl+F搜索WeatherPosition.RIGHT，搜到3处，改2处： 1Main.panel._rightBox.insert_child_at_index(this.actor, 2); 修改EasyScreenCast插件，文件位置：/usr/share/gnome-shell/extensions/EasyScreenCast@iacopodeenosee.gmail.com/extensions.js 文件最后面，找到这行，添加内容： 1Main.panel.addToStatusArea('EasyScreenCast-indicator', Indicator, 1); 数字依情况而定，可以改后，Alt+F2输入r回车重启Gnome调试。另外，还需在Tweak Tool的Extensions里更改Topicons plus插件的Tray offset的值。 Fcitx输入法皮肤直接查看Kali Linux安装Fcitx。 Ok！(๑•̀ㅂ•́)و✧ 最后，标题就是骗你的233333……]]></content>
      <categories>
        <category>technology</category>
        <category>computer</category>
        <category>system-software</category>
      </categories>
      <tags>
        <tag>video</tag>
        <tag>coldplay</tag>
        <tag>music</tag>
        <tag>system-software</tag>
        <tag>bb-for-bb</tag>
        <tag>technology</tag>
        <tag>computer</tag>
        <tag>linux</tag>
        <tag>后脑一凉</tag>
        <tag>quotes</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何安装GNOME Shell插件？]]></title>
    <url>%2Ftechnology%2Fcomputer%2Fsystem-software%2F2017%2F10%2F02%2Fhow-to-install-gnome-shell-extensions.html</url>
    <content type="text"><![CDATA[首先贴出网站，GNOME Shell Extensions，自己去发现更多来开启更多“外挂”功能。 下载安装包安装安装包解压缩复制到目录/usr/share/gnome-shell/extensions/，或~/.local/share/gnome-shell/extensions/下，然后关闭Tweak Tool再打开，应该就能在Extensions上看到。 浏览器插件安装最好用Firefox，我在Chrome的没用。打开插件网页，会有个提示啥允许好像，然后Allow即可，刷新页面即可安装。 apt-get方式123apt-get updateapt-cache search gnome-shell-extensionapt-get install gnome-shell-extension-插件名 不过只能搜到少部分，另还可以安装下面这个包，里面有一些插件： 1apt-get install gnome-shell-extensions 安装好后，点击按钮打开即可，如果有设置按钮，可以设置，并且如果有错误则会显示报错信息。 安利几个插件 名字 功能 说明 Redshift 护眼模式 安装配置方法见这篇文章，https://extensions.gnome.org/extension/685/redshift/ Topicons plus 将左下脚的托盘图标放在顶栏托盘 https://extensions.gnome.org/extension/1031/topicons/ Simple net speed 顶栏实时网速显示 https://extensions.gnome.org/extension/1085/simple-net-speed/ Openweather 顶栏显示天气 https://extensions.gnome.org/extension/750/openweather/ EasyScreenCast 录屏 https://extensions.gnome.org/extension/690/easyscreencast/ Coverflow alt-tab 效果超赞的alt-tab切换效果 https://extensions.gnome.org/extension/97/coverflow-alt-tab/ Dash to dock 自己试试，突然无法表达 https://extensions.gnome.org/extension/307/dash-to-dock/]]></content>
      <categories>
        <category>technology</category>
        <category>computer</category>
        <category>system-software</category>
      </categories>
      <tags>
        <tag>system-software</tag>
        <tag>technology</tag>
        <tag>computer</tag>
        <tag>linux</tag>
        <tag>how</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux开启护眼模式，降低蓝光伤害]]></title>
    <url>%2Ftechnology%2Fcomputer%2Fsystem-software%2F2017%2F10%2F02%2Fconfigure-redshift-in-linux.html</url>
    <content type="text"><![CDATA[前言现在几乎每部手机都有护眼模式了，减少蓝光，保护眼睛，人人有则，23333～ 现在买的电脑，很多Windows系统也自带了这样的功能，当然还有个大名鼎鼎的软件，f.lux，Windows下很好用，不过Linux下我没试过，因为我用了Redshift。 先贴出我的操作环境，系统是Kali Linux，桌面环境是Gnome3。 安装首先更新包信息： 1apt-get update 然后查找相关包： 12345678root@kali:~# apt-cache search redshiftawscli - Universal Command Line Environment for AWSgnome-shell-extension-redshift - redshift extension for GNOME Shellgtk-redshift - transitional dummy packageplasma-applet-redshift-control - Adjusts the color temperature of your screenredshift - Adjusts the color temperature of your screenredshift-gtk - Adjusts the color temperature of your screen with GTK+ integrationsct - Set screen color temperature 要图形界面，安装redshift-gtk即可： 1apt-get install redshift-gtk 如果没有其它依赖的话，应该会安装redshift-gtk和redshift两个包。 配置图形界面的配置就不说了，要开机自启，在托盘（tray）图标鼠标右键，设置开机启动即可。如果报错，可能是默认要系统开启Location，在Setting&gt;Privacy&gt;Location Services这设置on开启即可。 当然，如果你不想这样，可以换一种模式，自己输入经纬，百度一下经纬，按格式（见下文）填入即可。或者自己写个配置文件手动配置： 首先在目录~/.config/下新建文件redshift.conf，然后写入：1 123[manual]lat=39.90lon=116.38 怎么写，可以输入命令查询： 12345678root@kali:~# redshift -l manual:helpSpecify location manually. lat=N Latitude lon=N LongitudeBoth values are expected to be floating point numbers,negative values representing west / south, respectively. lat就是经度，lon是纬度，必须是浮点值，西经和南纬是负数。比如北京天安门广场，百度到：北纬39°54′，东经116°23′。一度（°）被分为60角分（′），换算一下：39+54/60=39.90，116+23/60≈116.38。2 Gnome Shell插件在user menu会出来一个开关按钮： 可以在Tweak Tool直接配置： 挺方便的，插件地址：https://extensions.gnome.org/extension/685/redshift/ 如果安装了redshift-gtk，建议先卸载。上面查询到有gnome-shell-extension-redshift这个包，故直接apt-get安装： 1apt-get install gnome-shell-extension-redshift 然后打开Tweak Tool开启即可，如果显示error，可能是由于未安装redshift这个包导致的，安装一下即可： 1apt-get install redshift 如果你想安装最新版插件按照方法可以参考这篇文章，另亲测Kali Linux下，不是apt-get方式安装的，按钮开关可能失效。 最后，Gnome3好像已经内置了类似的功能（上图），在Setting&gt;Displays&gt;Night Light。 1.参考：https://wiki.archlinux.org/index.php/redshift#Configuration ↩2.参考：http://www.cnblogs.com/qumao5736/archive/2012/03/10/2389287.html ↩]]></content>
      <categories>
        <category>technology</category>
        <category>computer</category>
        <category>system-software</category>
      </categories>
      <tags>
        <tag>system-software</tag>
        <tag>technology</tag>
        <tag>computer</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[生于战争 死于和平]]></title>
    <url>%2Fphilosophy%2Fhow%2F2017%2F09%2F25%2Fborn-in-war-and-died-in-peace.html</url>
    <content type="text"><![CDATA[生于忧患 死于安乐 没有和平 唯有战争 黑暗中才能看到光芒 战争中才有天堂 和平“天堂”的光芒只有虚假 “天堂”的光芒 - 1娱乐在和平时代兴起 游戏在娱乐市场火热 战争在游戏题材不灭 “光芒”中的人 - 1游戏是因为无聊 娱乐是因为无聊 无聊是因为和平 光芒中的人 - 1兴起是因为和平 火热是因为娱乐 不灭是因为战争 [ar:Klaus Badelt] [ti:Barbossa Is Hungry] [al:Pirates of the Caribbean: The Curse of the Black Pearl] [by:https://reuixiy.github.io] [length:4:06] [00:00.00]Klaus Badelt - Barbossa Is Hungry [00:05.00]纯音乐，请您欣赏 var ap = new APlayer({ element: document.getElementById("aplayer10"), narrow: false, autoplay: false, showlrc: 2, music: { title: "Barbossa Is Hungry", author: "Klaus Badelt", url: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music/Klaus%20Badelt%20-%20Barbossa%20Is%20Hungry.mp3", pic: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music-cover/pirates-of-the-caribbean-the-curse-of-the-black-pearl.jpg", } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);]]></content>
      <categories>
        <category>philosophy</category>
        <category>how</category>
      </categories>
      <tags>
        <tag>philosophy</tag>
        <tag>after-physics(形而上学)</tag>
        <tag>synthesis(综合)</tag>
        <tag>真理</tag>
        <tag>沉迷于删删改改</tag>
        <tag>critique(批判)</tag>
        <tag>星空</tag>
        <tag>未来</tag>
        <tag>epic</tag>
        <tag>music</tag>
        <tag>光</tag>
        <tag>目标</tag>
        <tag>practical-science(实践科学)</tag>
        <tag>前额一冷</tag>
        <tag>how</tag>
        <tag>黑暗</tag>
        <tag>对立</tag>
        <tag>假象</tag>
        <tag>quotes</tag>
        <tag>易</tag>
        <tag>战争</tag>
        <tag>加勒比海盗</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解决更新Kali Linux后网易云音乐歌词乱码的问题]]></title>
    <url>%2Ftechnology%2Fcomputer%2Fsystem-software%2F2017%2F09%2F23%2Flyrics-messy-code-after-dist-upgrade.html</url>
    <content type="text"><![CDATA[前几天apt-get dist-upgrade一下，然后打开网易云音乐发现歌词和一些项目显示乱码了…… 解决方法产生原因据说是Qt5.9造成的1，解决方法： 123wget http://download.qt.io/archive/qt/5.8/5.8.0/qt-opensource-linux-x64-5.8.0.runchmod +x qt-opensource-linux-x64-5.8.0.runsudo ./qt-opensource-linux-x64-5.8.0.run 然后弹出安装界面，一直默认即可，最后： 123vim /usr/share/applications/netease-cloud-music.desktopExec=env LD_LIBRARY_PATH=/opt/Qt5.8.0/5.8/gcc_64/lib netease-cloud-music %U --no-sandbox 1.https://bbs.archlinuxcn.org/viewtopic.php?id=5021 ↩]]></content>
      <categories>
        <category>technology</category>
        <category>computer</category>
        <category>system-software</category>
      </categories>
      <tags>
        <tag>music</tag>
        <tag>system-software</tag>
        <tag>technology</tag>
        <tag>computer</tag>
        <tag>linux</tag>
        <tag>后脑一凉</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一个看到2:40头皮发麻的广告]]></title>
    <url>%2Fbeautiful%2Fshare%2F2017%2F09%2F23%2Fa-touching-tv-commercial.html</url>
    <content type="text"><![CDATA[(function(){var player = new DPlayer({"container":document.getElementById("dplayer11"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/XXL%20-%20Sport%20Unites%20All.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()]]></content>
      <categories>
        <category>beautiful</category>
        <category>share</category>
      </categories>
      <tags>
        <tag>beautiful</tag>
        <tag>share</tag>
        <tag>video</tag>
        <tag>头皮发麻</tag>
        <tag>足球</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Cassini's Grand Finale]]></title>
    <url>%2Fbeautiful%2Fshare%2F2017%2F09%2F22%2Fcassini-s-grand-finale.html</url>
    <content type="text"><![CDATA[关于Cassini“卡西尼”号飞船是耗资39亿美元的国际项目，来自27个国家的科学家参加了这个项目。它以意大利天文学家乔瓦尼·卡西尼的名字来命名，卡西尼在17世纪发现土星有若干卫星。 NASA在1997-10-15年发射，2004年抵达土星的Cassini探测器，是NASA在「经费拮据」前的最后一个「高成本大制作」长程探测器，总花费差不多是Curiosity的两倍。 发射至今，已有20年，而在2017-09-15“卡西尼”号迎来了自己最后的任务——坠入土星大气层。 Cassini详情Cassini有自己的网站（若访问不了请自备梯子），做的非常棒，可以说把Cassini的“一生”完整记录了下来，所以有兴趣自己去探究吧，而且全程走https。 试问天朝哪个科学项目的宣传能做到如此，让普通人能够真实感受到科学家的那种好奇心带来的喜悦，那种科幻小说式的兴奋？ End of Mission(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/Cassini%27s%20Grand%20Finale.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()]]></content>
      <categories>
        <category>beautiful</category>
        <category>share</category>
      </categories>
      <tags>
        <tag>beautiful</tag>
        <tag>share</tag>
        <tag>好奇心</tag>
        <tag>critique(批判)</tag>
        <tag>科幻</tag>
        <tag>星空</tag>
        <tag>video</tag>
        <tag>未来</tag>
        <tag>epic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Now My Feet Won't Touch The Ground]]></title>
    <url>%2Fbeautiful%2Fbb-for-fun%2F2017%2F09%2F09%2FNow-My-Feet-Won-t-Touch-The-Ground.html</url>
    <content type="text"><![CDATA[小时候斜望着夜空中的星光我要到那里去！你这样仰头笑着回答家长的问题——宝宝，你长大后想干什么呢？学会了阅读学会了书写于是你低头学习着那些深奥的知识我会是你的骄傲！你这样对家长许下了承诺学会了说话学会了行走于是你有了一些朋友友谊多么可贵！双手紧握你不学习对得起父母吗？你不努力对得起朋友吗？你不继续对得起那个跨越下面阶梯的自己吗？象牙塔开始质问哭泣的你于是你的双脚从窗户慢慢回缩Let me goPush my boat from the highest cliff to the sea belowRocks awaitingYou wait a lifetime to be foundNow my feet won’t touch the ground… [ar:Coldplay] [ti:Now My Feet Won't Touch The Ground] [al:Prospekt's March EP] [by:https://reuixiy.github.io] [length:2:26] [00:00.00]Coldplay - Now My Feet Won't Touch The Ground [00:08.71] [00:08.72]Let me go [00:11.19]Boys, let me go [00:16.34]Push my boat from the highest cliff [00:20.04]To the sea below [00:24.00]Rocks awaiting [00:26.72]Boys, rocks awaiting [00:32.07]Swoop down from the sky and catch me [00:35.55]Like a bird of prey [00:40.60]Now my feet won't touch the ground [00:48.62]Now my head won't stop [00:56.04]You wait a lifetime [01:00.20]To be found [01:04.12]Now my feet won't touch the ground [01:44.30]Now my feet won't touch the ground [01:52.48]Now my head won't stop [02:00.05]You wait a lifetime [02:04.16]To be found [02:07.89]Now my feet won't touch the ground [02:15.86]Now my feet won't touch the ground var ap = new APlayer({ element: document.getElementById("aplayer3"), narrow: false, autoplay: false, showlrc: 2, music: { title: "Now My Feet Won't Touch The Ground", author: "Coldplay", url: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music/Coldplay%20-%20Now%20My%20Feet%20Won%27t%20Touch%20The%20Ground.mp3", pic: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music-cover/coldplay-prospekt%27s-march-ep.jpg", } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);]]></content>
      <categories>
        <category>beautiful</category>
        <category>bb-for-fun</category>
      </categories>
      <tags>
        <tag>想象</tag>
        <tag>沉迷于删删改改</tag>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>critique(批判)</tag>
        <tag>coldplay</tag>
        <tag>music</tag>
        <tag>诗</tag>
        <tag>目标</tag>
        <tag>bb-for-fun</tag>
        <tag>维</tag>
        <tag>practical-science(实践科学)</tag>
        <tag>前额一冷</tag>
        <tag>知识</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[零网（ZeroNet）初探]]></title>
    <url>%2Ftechnology%2Finternet%2Fzeronet%2F2017%2F09%2F01%2Ffirst-exploration-of-the-zeronet.html</url>
    <content type="text"><![CDATA[体验小视频打开后，首先感觉界面UI很棒，骚气的紫色，加上渐变，让人眼前一亮(๑•̀ㅂ•́)و✧。 网页下拉，很赞有木有，不过最让人眼前一亮的是右上角的小东东，鼠标按住它往左拉，会出现一个侧栏。 最后就是小视频了： (function(){var player = new DPlayer({"container":document.getElementById("dplayer18"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/first-exploration-of-the-zeronet.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 别的不说，光是这UI就值得体验一下。 介绍和安装什么是ZeroNet？ ZeroNet是一个去中心化的类似于Internet的网络，由匈牙利的开发者使用Python制作，完全开源。网站特殊的“ZeroNet URL”可以使用一般的浏览器浏览，就像访问本地主机一样。ZeroNet默认并「不」匿名，但是用户可以通过内置的Tor功能进行匿名化。ZeroNet使用Bitcoin加密算法及BitTorrent网络。 ZeroNet是一个利用比特币加密和BT技术提供不受审查的网络与通信的BT平台，ZeroNet网络功能已经得到完整的种子的支持和加密连接，保证用户通信和文件共享的安全。使用ZeroNet，你可以匿名上网，你可以在自己电脑搭建网站，但即使你关机，你的网站依然在全球存在，别人无法关闭你的网站。 防DMCA Take down 由于ZeroNet去中心化的原因，国外有人制作了一个ZeroNet版本的海盗湾——Play，这个网站可让版权所有者头疼啦……一般的网站服务器都有IP地址，不抗投诉的ISP收到了向IP WHOIS滥用信箱发送的DMCA投诉信的话，你就要和你的网站说再见了……（俗称DMCA Take down）。可用了ZeroNet后，并没有一台服务器是真实的服务器，任何访客都有可能成为服务器，还有些访客使用了Tor，更找不到真正的。 使用ZeroNet的特点 可以建自己的网站，且无需备案，无需审核，无需服务器1。 基于P2P原理，你只要建好并有足够的人浏览过，即使你自己关机，你的网站依然在全球存在，别人想关你站，也没门。 基于P2P原理，支持内网穿透，也就是说你在内网也没关系，手机也没问题。 基于比特币原理，账号很安全，谁也不知道你是谁，谁也盗不去。 不需要域名，任何人访问都使用http://127.0.0.1:43110/字符串来访问。 以上摘改自：ZeroNet搭建全球网站。 如何安装ZeroNet？ 安装很简单，按照网站的说明操作即可： 官网：https://zeronet.io/ Github：https://github.com/hellozeronet/zeronet 官方文档的中文翻译：https://stgapr.github.io/zeronet-Documentation-ZH_CN/ 使用起来也很简单，并且已支持中文了，点界面左上角的┇，点击zh即可。一开始可能有点懵，但是多折腾折腾很快就能上手，里面也有中文论坛，有前辈写了很好的入门介绍。 在你尝试前的温馨提醒 和暗网一样，防审查和匿名带来的一个后果：里面有些内容可能会使你感到不适。我只能说，并不是所有的人都有你那么高尚，并不是所有的人都有和你一样的信仰，所以请保持你的高尚，尊重别人的信仰，相信自己的信仰。 最后附上我的零网博客地址：http://127.0.0.1:43110/yixiuer.bit/ 公网可以通过代理访问：https://fuckcf.cf/yixiuer.bit bb - for - fun去中心化是个很有意思的想法，去中心化的互联网可以通过P2P2架构实现。 自从基于P2P架构的加密货币——比特币火了之后，出现了很多P2P架构的文件传输应用，声称可以取代HTTP的IPFS，文件同步工具Resilio Sync，以及这里所言的零网。 其实，P2P架构的概念在1969年就已提出3，但为什么去中心化的互联网没能发展起来？我觉得主要是： 技术限制 政府限制 版本控制问题，事件处理时间过长，同步的垃圾数据量太多，隐私数据的安全性等等，这些技术问题正在不断被解决（开源有很大功劳），这也是现在去中心化的互联网应用得以迅速发展的主要原因。 然而，随着去中心化的互联网的发展，我觉得技术问题将逐渐变得不那么重要，主要的问题将是与政府的冲突。冲突何在？政府的职责之一就是监管，不知为什么，个人总感觉这是去中心化的死对头。WTF？！这就是你的解答？个人感觉？ 嗯……暂时就是这样了，联想到了很多，比如柏拉图的《理想国》中的讨论，以及自己以前的一些想法，但无奈记不太请，还有看到一篇很好的文章（零网地址），所以先放着，等我多读读书…… 1.参考：https://www.zhihu.com/question/37439960 ↩2.https://en.wikipedia.org/wiki/Peer-to-peer ↩3.https://en.wikipedia.org/wiki/Peer-to-peer#cite_ref-5 ↩]]></content>
      <categories>
        <category>technology</category>
        <category>internet</category>
        <category>zeronet</category>
      </categories>
      <tags>
        <tag>philosophy</tag>
        <tag>questions</tag>
        <tag>沉迷于删删改改</tag>
        <tag>video</tag>
        <tag>未来</tag>
        <tag>music</tag>
        <tag>technology</tag>
        <tag>linux</tag>
        <tag>bb-for-fun</tag>
        <tag>how</tag>
        <tag>看书</tag>
        <tag>internet</tag>
        <tag>补充</tag>
        <tag>bitcoin</tag>
        <tag>去中心化</tag>
        <tag>zeronet</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你有你的freestyle吗？]]></title>
    <url>%2Fbeautiful%2Fnotnow%2F2017%2F08%2F30%2Frobot-do-you-have-your-freestyle.html</url>
    <content type="text"><![CDATA[freestyle(function(){var player = new DPlayer({"container":document.getElementById("dplayer8"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/%E3%80%8A%E7%9C%8B%E8%A7%81%E6%9C%AA%E6%9D%A5%E5%B7%B2%E5%88%B0%E6%9D%A5%E3%80%8B%E7%BA%A2%E6%9D%89-%E7%9C%9F%E6%A0%BC%20AI%E5%8F%8C%E5%9F%8E%E8%AE%B0.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 截改一部分《看见未来已到来》儿时仰望银河星系感受科学万有引力每天痴迷图灵霍金 那么多定理看着 ET 三体 感叹宇宙的神奇思想不会防弹 未来充满契机Dream will be flying 要探寻算法秘密创新维艰一胜九败仍要寻求新含义否则无声无息平淡无奇人生不给力人类简史未来简史都在讲述时间的秘密网络时代智能时代让我思考算法的终极从基础到创新 从地球到星系改变世界就是我们创新的真谛创新是一种勇气长路漫漫求索 一起突破科学边际天地悠悠寻觅 一起解开世界的秘密人工智能突飞猛进 bb - for - bb红杉资本的这段freestyle写的很赞，有种熟悉的情怀，突然想到我的MBTI测试是ENTP，里面说适合投资，也许以后真的可以有233333……]]></content>
      <categories>
        <category>beautiful</category>
        <category>notnow</category>
      </categories>
      <tags>
        <tag>beautiful</tag>
        <tag>share</tag>
        <tag>科幻</tag>
        <tag>video</tag>
        <tag>未来</tag>
        <tag>epic</tag>
        <tag>目标</tag>
        <tag>bb-for-bb</tag>
        <tag>notnow</tag>
        <tag>阿西莫夫</tag>
        <tag>人工智能</tag>
        <tag>性格</tag>
        <tag>freestyle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[突如其来的小壁虎]]></title>
    <url>%2Fbeautiful%2Fnotnow%2F2017%2F08%2F27%2Fa-little-gecko-come-suddenly.html</url>
    <content type="text"><![CDATA[昨天早上上午起床刷完牙洗完脸，一打开门，发现有个可爱的小东东以极其夸张的步伐远离我……噫，好久没见过小动物了～ bb - for - bb看到后，当然赶紧先看看，是只小壁虎，不到我的小拇指大。嘿嘿嘿，赶紧空出个瓶子抓住它。再上图： 这图可以看到皮肤颜色是灰的，看起来比较干燥，不过一会皮肤变黑了，更好看了一点。估计是我在瓶子里倒了点水的原因，我猜它在洗手间门口也许就是为了水而来吧…… 小视频晚上睡觉前，突然想到中午百度的时候，说这小家伙是晚上出来觅食的，于是抓了只小虫子放进去。就在这时，脑阔突然抽搐一下，可以用抽屉里以前折腾过的树莓派1来监控它，晚上偷录个小视频，哈哈哈嗝～ 小视频 - 1(function(){var player = new DPlayer({"container":document.getElementById("dplayer12"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/a-little-gecko-come-suddenly-1.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 第一次出镜，从叶子后面直奔摄像头的这边，无视虫子，应该是被红外灯吸引。 小视频 - 2(function(){var player = new DPlayer({"container":document.getElementById("dplayer13"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/a-little-gecko-come-suddenly-2.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 看起来是要吃左上角的虫子，但是在瓶子顶部内边沿转了一圈。 小视频 - 3(function(){var player = new DPlayer({"container":document.getElementById("dplayer14"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/a-little-gecko-come-suddenly-3.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 欣赏一下这优雅的步伐～ 小视频 - 4(function(){var player = new DPlayer({"container":document.getElementById("dplayer15"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/a-little-gecko-come-suddenly-4.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 看起来都想逃走的两个小家伙。 小视频 - 5(function(){var player = new DPlayer({"container":document.getElementById("dplayer16"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/a-little-gecko-come-suddenly-5.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 这……我没看懂哎…… 其实，晚上一共录了51个视频，这里挑出几个有代表的来。关于视频，这个叫motion的监控软件是捕捉到有动作（画面变化）就开始记录的，然后生成视频，视频右下角有时间，可以看出有时视频的1 s并非真实的1 s。 最后？虫子还在，小壁虎还在……为啥虫子还在？不造…… bb - for - fun看着视频观察一下这个小家伙还是蛮有意思的： 等我走了半个多小时，才开始行动，有耐心。 一开始在意的不是食物，而是新鲜事物（红外灯），对它来说就是最危险。 渴望自由，一直在顶部内边沿尝试逃出去，哈哈哈待会我就给你自由。 一直对小动物感兴趣，蝴蝶、蜜蜂（虽然被蛰过）、鸟、蟋蟀、螳螂、鱼、龟、小鸡、小鸭子和小狗等等。怎么说，感觉有些小家伙很有灵性，有时候不是我接触它们，而是它们主动接触我。当自己的眼睛看着它们时，内心幻想着和它们交流，而它们也仿佛懂得自己似的～ [ar:Coldplay] [ti:Paradise] [al:Mylo Xyloto] [by:https://reuixiy.github.io] [length:4:37] [00:00.00]Coldplay - Paradise [01:01.71] [01:01.72]When she was just a girl [01:04.93]She expected the world [01:08.15]But it flew away from her reach [01:11.30]So she ran away in her sleep [01:14.92]And dreamed of Para- para- paradise, [01:18.73]para- para- paradise, para- para- paradise [01:25.56]Every time she closed her eyes [01:42.98]When she was just a girl [01:46.16]She expected the world [01:49.40]But it flew away from her reach [01:52.55]And the bullets catch in her teeth [01:56.44]Life goes on, it gets so heavy [01:59.82]The wheel breaks the butterfly [02:03.50]Every tear a waterfall [02:06.45]In the night, the stormy night, [02:09.28]she'll close her eyes [02:13.21]In the night, the stormy night, [02:16.22]away she'd fly [02:20.19]And dreams of para- para- paradise [02:24.02]Para- para- paradise [02:27.44]Para- para- paradise [02:30.87]Oh oh oh oh oh oh-oh-oh-oh [02:34.03]She'd dream of para- para- paradise [02:37.75]Para- para- paradise [02:41.18]Para- para- paradise [02:44.61]Oh oh oh oh oh oh-oh-oh-oh [03:01.92]Lalalalalalalalalalala [03:08.23]And so lying underneath those stormy skies [03:14.94]She'd say: "Oh, ohohohoh, [03:18.03]I know the sun must set to rise" [03:21.84]This could be para- para- paradise [03:25.80]Para- para- paradise [03:28.97]Could be para- para- paradise [03:32.60]Oh oh oh oh oh oh-oh-oh [03:35.71]This could be para- para- paradise [03:39.49]Para- para- paradise [03:42.60]Could be para- para- paradise [03:46.35]Oh oh oh oh oh oh-oh-oh [04:03.09]This could be para- para- paradise [04:06.90]Could be para- para- paradise [04:10.05]Could be para- para- paradise [04:13.76]Oh oh oh oh oh oh-oh-oh-oh-oh var ap = new APlayer({ element: document.getElementById("aplayer11"), narrow: false, autoplay: false, showlrc: 2, music: { title: "Paradise", author: "Coldplay", url: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music/Coldplay%20-%20Paradise%20%281%29.mp3", pic: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music-cover/coldplay-paradise.jpg", } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); Yeah, it could be Paradise… 1.Raspberry Pi(中文名为“树莓派”，简写为RPi，或者RasPi / RPI)是为学习计算机编程教育而设计，只有信用卡大小的微型电脑，其系统基于Linux。别看其外表“娇小”，内“心”却很强大，视频、音频等功能通通皆有，可谓是“麻雀虽小，五脏俱全”。 ↩]]></content>
      <categories>
        <category>beautiful</category>
        <category>notnow</category>
      </categories>
      <tags>
        <tag>beautiful</tag>
        <tag>video</tag>
        <tag>coldplay</tag>
        <tag>music</tag>
        <tag>开心</tag>
        <tag>童话</tag>
        <tag>bb-for-bb</tag>
        <tag>bb-for-fun</tag>
        <tag>后脑一凉</tag>
        <tag>shape</tag>
        <tag>notnow</tag>
        <tag>摄影</tag>
        <tag>发呆</tag>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[重建博客 - rm的悲剧]]></title>
    <url>%2Fbeautiful%2Fnotnow%2F2017%2F08%2F21%2Frebuild-this-blog-due-to-rm.html</url>
    <content type="text"><![CDATA[2017.08.07下午，昏昏欲睡的我，还在折腾电脑的驱动。紧张地Google解决方法，直接Copy一条命令回车，没想到这一操作就宣告了我博客的死亡…… 死亡的味道回车后，过了很久，当时也没太在意，继续操作。一会重启系统，感觉画风不对，桌面变了，后脑勺一凉，开终端，ls一看，没了，我的“家”都没了…… 机智的我赶紧敲了一条history命令，看到（别问我为啥还能看到，神特么知道）： 1rm -rf ~/ .local/…… 发现了没，~/后面多了个空格，卧槽！那个网站上贴这行代码的人！￥%×%%&amp;×%&amp;×%&amp;×￥%……#%……&amp;×%&amp;（×……&amp;+）——+（——）（&amp;（×！ 删而后重建之后试着恢复数据，无奈失败。把自己的“家”都给删了，半年多在这系统上的努力都废了，特别是博客文件夹，想到还要从0开始弄，头皮发麻…… 无奈归无奈，还好我电脑双系统，第二天就进Windows下载镜像烧U盘，重装系统，顺便（当然没那么顺便）把引导由BIOS+MBR改为UEFI+GPT。 最后终于进了新Linux系统，更新系统，解决驱动问题，装软件。接下来就是重新搭建Hexo，优化NexT主题，将网站上的38篇文章全部写成Markdown文档。 折腾新成果1.博客方面，规范了Markdown文档，可以更美观的使用emoji，添加404页面，使用插件使音乐支持歌词，视频支持弹幕，等等……更多点击打造个性超赞博客Hexo+NexT+GithubPages的超深度优化查看。 2.系统方面，装了最新的Wine QQ，深刻了解数据的重要性和rm的可怕。 3.其它方面，熟悉了UEFI+GPT，自己重装系统的能力又得到了巨大提升。 那来首歌吧[ar:Oasis] [ti:Live Forever] [al:Live Forever] [by:https://reuixiy.github.io] [length:4:38] [00:00.00]Oasis - Live Forever [00:12.69] [02:28.88][00:12.70]Maybe I don't really want to know [02:32.25][00:17.28]How your garden grows [02:35.49][00:19.87]I just want to fly Lately did you ever feel the pain [02:42.93][00:28.06]In the morning rain [02:45.64][00:30.57]As it soaks it to the bone [02:49.35][00:34.49]Maybe I just want to fly [02:51.96][00:37.21]I wanna live I don't want to die [02:54.55][00:39.63]Maybe I just want to breath [02:57.08][00:42.30]Maybe I just don't believe [02:59.69][00:44.88]Maybe you're the same as me [03:02.25][00:47.48]We see things they'll never see [03:05.13][00:50.27]You and I are gonna live forever [00:57.74]Maybe I don't really want to know [01:02.56]How your garden grows [01:05.13]I just want to fly Lately did you ever feel the pain [01:13.23]In the morning rain [01:15.93]As it soaks it to the bone [01:19.41]Maybe I will never be [01:22.05]All the things that I want to be [01:24.87]But now is not the time to cry [01:27.41]Now's the time to find out why [01:29.99]I think you're the same as me [01:32.56]We see things they'll never see [01:35.28]You and I are gonna live forever [03:37.23][03:31.95][03:27.60][03:21.79][03:16.83][03:14.68]We're gonna live forever var ap = new APlayer({ element: document.getElementById("aplayer13"), narrow: false, autoplay: false, showlrc: 2, music: { title: "Live Forever", author: "Oasis", url: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music/Oasis%20-%20Live%20Forever.mp3", pic: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music-cover/oasis-live-forever.jpg", } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 来个小视频(function(){var player = new DPlayer({"container":document.getElementById("dplayer17"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/Mr.Bean%27s%20Holiday%20%28Crash%20-%20Matt%20Willis%29%20HD.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()]]></content>
      <categories>
        <category>beautiful</category>
        <category>notnow</category>
      </categories>
      <tags>
        <tag>beautiful</tag>
        <tag>video</tag>
        <tag>music</tag>
        <tag>system-software</tag>
        <tag>bb-for-bb</tag>
        <tag>technology</tag>
        <tag>computer</tag>
        <tag>linux</tag>
        <tag>后脑一凉</tag>
        <tag>notnow</tag>
        <tag>易</tag>
        <tag>悲伤</tag>
        <tag>死亡</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那种忘了的感觉]]></title>
    <url>%2Fbeautiful%2Fnotnow%2F2017%2F08%2F02%2Fdisremember-something.html</url>
    <content type="text"><![CDATA[的确啊，忘了一些东西。 学会了低头在地上高效生存，忘了抬头的喜悦。 忘了的时候想抬头就是那种忘了的感觉。 bb日期应该是今年5月左右，清理空间顺带Copy，又是那种忘了的感觉。]]></content>
      <categories>
        <category>beautiful</category>
        <category>notnow</category>
      </categories>
      <tags>
        <tag>沉迷于删删改改</tag>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>coldplay</tag>
        <tag>shape</tag>
        <tag>notnow</tag>
        <tag>quotes</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Coldplay - Paradise]]></title>
    <url>%2Fbeautiful%2Fshare%2F2017%2F08%2F01%2Fcoldplay-paradise.html</url>
    <content type="text"><![CDATA[无论是谁的世界，内心都有一个童话般的神圣天堂 视频(function(){var player = new DPlayer({"container":document.getElementById("dplayer3"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/Coldplay%20-%20Paradise.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 音乐[ar:Coldplay] [ti:Paradise] [al:Mylo Xyloto] [by:https://reuixiy.github.io] [length:4:37] [00:00.00]Coldplay - Paradise [01:01.71] [01:01.72]When she was just a girl [01:04.93]She expected the world [01:08.15]But it flew away from her reach [01:11.30]So she ran away in her sleep [01:14.92]And dreamed of Para- para- paradise, [01:18.73]para- para- paradise, para- para- paradise [01:25.56]Every time she closed her eyes [01:42.98]When she was just a girl [01:46.16]She expected the world [01:49.40]But it flew away from her reach [01:52.55]And the bullets catch in her teeth [01:56.44]Life goes on, it gets so heavy [01:59.82]The wheel breaks the butterfly [02:03.50]Every tear a waterfall [02:06.45]In the night, the stormy night, [02:09.28]she'll close her eyes [02:13.21]In the night, the stormy night, [02:16.22]away she'd fly [02:20.19]And dreams of para- para- paradise [02:24.02]Para- para- paradise [02:27.44]Para- para- paradise [02:30.87]Oh oh oh oh oh oh-oh-oh-oh [02:34.03]She'd dream of para- para- paradise [02:37.75]Para- para- paradise [02:41.18]Para- para- paradise [02:44.61]Oh oh oh oh oh oh-oh-oh-oh [03:01.92]Lalalalalalalalalalala [03:08.23]And so lying underneath those stormy skies [03:14.94]She'd say: "Oh, ohohohoh, [03:18.03]I know the sun must set to rise" [03:21.84]This could be para- para- paradise [03:25.80]Para- para- paradise [03:28.97]Could be para- para- paradise [03:32.60]Oh oh oh oh oh oh-oh-oh [03:35.71]This could be para- para- paradise [03:39.49]Para- para- paradise [03:42.60]Could be para- para- paradise [03:46.35]Oh oh oh oh oh oh-oh-oh [04:03.09]This could be para- para- paradise [04:06.90]Could be para- para- paradise [04:10.05]Could be para- para- paradise [04:13.76]Oh oh oh oh oh oh-oh-oh-oh-oh var ap = new APlayer({ element: document.getElementById("aplayer2"), narrow: false, autoplay: false, showlrc: 2, music: { title: "Paradise", author: "Coldplay", url: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music/Coldplay%20-%20Paradise%20%281%29.mp3", pic: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music-cover/coldplay-paradise.jpg", } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); So lying underneath the stormy skiesShe’d say oh oh oh oh ohI know the sun must set to rise bb - for - bb最早听到的英语歌之一，当时是在电台（HitFM）上听的，听不懂歌词，仅凭旋律和想象力感受。后来有一天看到歌词，看到翻译，看到MV，发现完美契合旋律和想象力的感受～ Yeah, it could be Paradise…]]></content>
      <categories>
        <category>beautiful</category>
        <category>share</category>
      </categories>
      <tags>
        <tag>想象</tag>
        <tag>beautiful</tag>
        <tag>share</tag>
        <tag>video</tag>
        <tag>coldplay</tag>
        <tag>music</tag>
        <tag>童话</tag>
        <tag>bb-for-bb</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[痛苦的死亡]]></title>
    <url>%2Fbeautiful%2Fbb-for-fun%2F2017%2F07%2F19%2Fdie-of-anguished.html</url>
    <content type="text"><![CDATA[害怕当想象自己就在那样一个我们称之血腥的现场时，甚至想象自己就是那个受害者，或者在意受害者的那个人时，内心是什么感受呢？害怕。 analysis | association为什么害怕？因为担心事情发生在自己身上（想象自己），然后自己遭受难以忍受的痛苦。这是不是与同情很像，都是想象一件事发生在自己身上，然后引发某种感受。只是想象痛苦的死亡时，害怕的感受远大于同情的感受。 然而感受取决于自己的控制（意志），原因？对待同一件事，比如社会上发生的某一惨案，有人感到极度震惊，有人则不为所动，这就取决于个人的控制，也可称为意志（shape）。 分析到这结果也很正常，害不害怕取决于自己啊！ synthesis况且，生命本来就极其脆弱，死亡一直离自己很近，痛苦想要自己随时可以制造，为什么不一直害怕呢？因为有思维（shape），有目标（shape），这也是活着的意义。所以害怕的不应该是死亡，而是害怕在没达成自己的目标之前死亡。]]></content>
      <categories>
        <category>beautiful</category>
        <category>bb-for-fun</category>
      </categories>
      <tags>
        <tag>association</tag>
        <tag>synthesis(综合)</tag>
        <tag>questions</tag>
        <tag>沉迷于删删改改</tag>
        <tag>beautiful</tag>
        <tag>目标</tag>
        <tag>bb-for-fun</tag>
        <tag>practical-science(实践科学)</tag>
        <tag>后脑一凉</tag>
        <tag>shape</tag>
        <tag>黑暗</tag>
        <tag>analysis(分析)</tag>
        <tag>why</tag>
        <tag>悲伤</tag>
        <tag>死亡</tag>
        <tag>战争</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[国家地理Genius之Einstein]]></title>
    <url>%2Fbeautiful%2Fnotnow%2F2017%2F07%2F17%2Fintrospection-of-national-geographic-genius-einstein.html</url>
    <content type="text"><![CDATA[bb-1 | 时空Einstein为什么能成功？ 不用说都知道的我就不说了（懒），我觉得最重要的一点是有自己的时空观，也就是说对时间和空间有自己的认识，甚至是视觉体验。 bb-2 | 好奇心为什么Einstein的第一任妻子Mileva在科学上没有显著成就？ 看有人评论说爱因斯坦毁了Mileva的科学事业，然后看到精彩的回复：Einstein对科学的执着是始于好奇心的，这是他在科学上能有如此成就的原因。 的确如此，好奇心才是科学的第一推动力，Mileva献身科学并非纯好奇心，所以她的悲剧只能说是那个科学“重男轻女”时代的悲剧。 链接1.Journeys in Film : Genius 2.这部剧的视频（中英字幕），本来B站上有的，后来被下架了。这里有下载链接，来自人人字幕组，要是打不开请自备梯子。 3.点击下载：《爱因斯坦：生活和宇宙》（美）沃尔特·艾萨克森著.pdf(50.2 MB)]]></content>
      <categories>
        <category>beautiful</category>
        <category>notnow</category>
      </categories>
      <tags>
        <tag>questions</tag>
        <tag>beautiful</tag>
        <tag>好奇心</tag>
        <tag>目标</tag>
        <tag>bb-for-fun</tag>
        <tag>practical-science(实践科学)</tag>
        <tag>shape</tag>
        <tag>下载</tag>
        <tag>notnow</tag>
        <tag>看书</tag>
        <tag>电影</tag>
        <tag>Einstein</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[何为不忘初心]]></title>
    <url>%2Fphilosophy%2Fhow%2F2017%2F07%2F17%2Fon-remember-your-original-intention.html</url>
    <content type="text"><![CDATA[association我看过尼采年轻时写的一首诗： 人生乃是一面镜子，从镜子里认识自己，我要称之为头等大事，也只是我们追求的目的！ 很多时候突然发现自己过去多么颓废，感觉其实就是在新的一段人生之镜中重新认识了自己，然后有了新的目标。 analysis因此「不忘初心」中的初心我觉得应该不是指一个具体的目标，毕竟要说最初的心，还是小时候只想玩和吃糖呢。 世界在变，自己也在变，然后组成了自己的完整人生。既然都在变化，自己的目标自然也要变。不断从镜子里重新认识自己，然后有了新的目标，我感觉这过程才是初心，而不是一个具体的目标。 critique那些口中经常讲「不忘初心，方得始终」的人，其实不如那些经常懊悔自己以前多么颓废的人。 补充搜索「不忘初心」的英语翻译时，看到知乎上的一条回答1，翻译为乔布斯在一场演讲中的： Stay hungry. Stay foolish. 感觉很棒，stay意为保持，这和我上面的理解很契合。 1.https://www.zhihu.com/question/21394540 ↩]]></content>
      <categories>
        <category>philosophy</category>
        <category>how</category>
      </categories>
      <tags>
        <tag>philosophy</tag>
        <tag>association</tag>
        <tag>questions</tag>
        <tag>沉迷于删删改改</tag>
        <tag>critique(批判)</tag>
        <tag>诗</tag>
        <tag>目标</tag>
        <tag>bb-for-fun</tag>
        <tag>practical-science(实践科学)</tag>
        <tag>how</tag>
        <tag>自省</tag>
        <tag>analysis(分析)</tag>
        <tag>尼采</tag>
        <tag>quotes</tag>
        <tag>易</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记《量子夸克》目录]]></title>
    <url>%2Fphilosophy%2Fwhat%2F2017%2F07%2F01%2Ftoc-of-the-quantum-quark.html</url>
    <content type="text"><![CDATA[图片截自维基百科的物理学史 半年多前图书馆借的书，学期结束了，开始看。刚好这博客建好了，于是在这顺便记下目录，供自己日后看看。 力及其相关理论简介无处不在的电亚原子探索揭开弱力的面纱初识强力对称性描述“相同性”的数学正方形的游戏从正方形到圆粒子物理中的对称性量子世界有史以来最优秀的理论量子力学量子世界几率与不确定性薛定谔与氢最短路径当量子力学遇到相对论时空弯曲混为一体的质量与能量再加上量子力学量子力学中的诞生与湮灭量子场粒子聚散感受力bb | 定个小目标看着看着，想搭建一种建立在想象力（直观）而非数学（抽象）上的新物理学 先补充定义：这里的直观是指可以想象到其辞，抽象则相反，就如一句用外星文书写的话。理论怎样能有的突破性进步？首先依赖于科学家的突破性理解，然后再利用数学得出一些解。]]></content>
      <categories>
        <category>philosophy</category>
        <category>what</category>
      </categories>
      <tags>
        <tag>philosophy</tag>
        <tag>what</tag>
        <tag>想象</tag>
        <tag>真理</tag>
        <tag>沉迷于删删改改</tag>
        <tag>目标</tag>
        <tag>bb-for-fun</tag>
        <tag>notnow</tag>
        <tag>看书</tag>
        <tag>量子</tag>
        <tag>辞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《查拉图斯特拉如是说》 - 1]]></title>
    <url>%2Fbeautiful%2Fnotnow%2F2017%2F06%2F20%2FAlso-sprach-Zarathustra-1.html</url>
    <content type="text"><![CDATA[道德的讲座 自省因为这些天，白天睡觉多，晚上总是睡不着，所以一开始看到保持醒觉，是为了睡得好感觉真对，我应该要这样做！ 看到后面，真是大反转，感觉自己触摸到了天，然后发现自己还是在地上。不应该为了睡得更好而白天坚持不睡，应该为了自己的目标奋斗而坚持不睡！ 况且如果坚持做自己喜欢做的事，还用担心自己会睡不着吗？ analysis是不是有很多事也是如此： 符合逻辑 结果满意 但是却是错误（相对，小大之辩）。 association | tips写作的时候，也可以应用此技巧。构造符合逻辑结果满意的小事，然后用大事讽刺之。]]></content>
      <categories>
        <category>beautiful</category>
        <category>notnow</category>
      </categories>
      <tags>
        <tag>philosophy</tag>
        <tag>association</tag>
        <tag>tips</tag>
        <tag>沉迷于删删改改</tag>
        <tag>beautiful</tag>
        <tag>目标</tag>
        <tag>bb-for-fun</tag>
        <tag>practical-science(实践科学)</tag>
        <tag>前额一冷</tag>
        <tag>后脑一凉</tag>
        <tag>notnow</tag>
        <tag>自省</tag>
        <tag>对立</tag>
        <tag>analysis(分析)</tag>
        <tag>尼采</tag>
        <tag>看书</tag>
        <tag>假象</tag>
        <tag>查拉图斯特拉</tag>
        <tag>kindle</tag>
        <tag>quotes</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows Media Player + 音乐可视化 + 音乐倒放]]></title>
    <url>%2Ftechnology%2Fcomputer%2Fcomputer-aided-art%2F2017%2F06%2F18%2Fmusic-visualization.html</url>
    <content type="text"><![CDATA[利用Windows自带的多媒体播放器Windows Media Player，呈现多彩，超强空间感的音乐可视化效果，另外还有音乐倒放～ 前言Windows Media Player是Windows自带的多媒体播放器，虽然长的土里土气，但是支持音乐可视化的插件，有自带的音效插件。用它听歌，还是别有一番风味，特别是自带的SRS(Sound Retrieval System)3D环绕立体声音效听一些歌（比如Taylor Swift的1989里面的歌）超赞，空间感十足。 预览给出自己录的两个视频，先看看效果，戴上耳机哦～渣渣电脑，录的有点卡。视频嘛，Wi-Fi随意，土豪随意。 音效(function(){var player = new DPlayer({"container":document.getElementById("dplayer5"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/Windows%20Media%20Player%202017_6_18%2015_29_24.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() Taylor Swift - Style 原版： [ar:Taylor Swift] [ti:Style] [al:1989] [by:https://reuixiy.github.io] [length:3:51] [00:00.00]Taylor Swift - Style [00:20.44] [00:20.45]Midnight, you come and pick me up [00:25.08]No hidden lights [00:30.25]Long drive [00:33.26]But ending burn in flames or paradise [00:40.22]Fading off you [00:42.87]It's been a while since I have been heard from you [00:51.71]I should just tell you to leave cause I [00:54.00]Know exactly where it leads but I [00:56.33]Watch us go round and round each time [00:59.74]You got that James Dean day dream look in your eye [01:04.96]And I got that red lip classic thing that you like [01:09.79]And when we go crashing down, we come back in every time [01:14.82]Cause we never go out of style [01:17.58]We never go out of style [01:20.04]You got that long hair, slicked back, white t-shirt [01:24.80]And I got that good girl thing and a tight little skirt [01:29.98]And when we go crashing down, we come back in every time [01:35.02]Cause we never go out of style [01:37.54]We never go out of style [01:41.15]So it goes [01:44.25]He can't keep his wild eyes on the road [01:51.04]Takes me home [01:54.27]Lights are off, he's taking off his coat [02:00.98]I say I heard that you been out and about with some other girl [02:08.44]Some other girl [02:12.46]He says, what you've heard it's true but I [02:14.63]Can't stop thinking about you and I [02:17.14]I said I've been there a few times [02:20.66]Cause You got that James Dean day dream look in your eye [02:25.51]And I got that red lip classic thing that you like [02:30.52]And when we go crashing down, we come back in every time [02:35.55]Cause we never go out of style [02:37.95]We never go out of style [02:40.73]You got that long hair, slicked back, white t-shirt [02:45.67]And I got that good girl thing and a tight little skirt [02:50.72]And when we go crashing down, we come back in every time [02:55.82]Cause we never go out of style [02:58.22]We never go out of style [03:01.56]Take me home [03:05.92]Just take me home [03:11.04]Just take me home [03:21.15]You got that James Dean day dream look in your eye [03:26.14]And I got that red lip classic thing that you like [03:31.15]And when we go crashing down, we come back in every time [03:36.22]Cause we never go out of style [03:38.72]We never go out of style var ap = new APlayer({ element: document.getElementById("aplayer4"), narrow: false, autoplay: false, showlrc: 2, music: { title: "Style", author: "Taylor Swift", url: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music/Taylor%20Swift%20-%20Style.mp3", pic: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music-cover/taylor-swift-1989.jpg", } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 倒放(function(){var player = new DPlayer({"container":document.getElementById("dplayer6"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/Windows%20Media%20Player%202017_6_18%2015_39_15.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() Coldplay - True Love 正序： [ar: Coldplay] [ti: True Love] [al: Ghost Stories] [by:https://reuixiy.github.io] [length:4:06] [00:00.00]Coldplay - True Love [00:08.61] [00:08.62]For a second, I was in control [00:11.87]I had it once [00:13.78]I lost it, though [00:15.58]And all along the fire below [00:19.54]Would rise [00:24.58]And I wish you could have let me know [00:27.68]What's really going on below [00:31.43]I‘ve lost you now [00:33.69]You let me go [00:35.77]But one last time [00:42.43]Tell me you love me [00:46.37]If you don't, then lie [00:51.18]Oh, lie to me [01:12.48]remember once upon a time [01:15.84]When I was yours and you were blind [01:19.81]The fire would sparkle in your eyes [01:23.73]And mine [01:29.54]So tell me you love me [01:34.10]If you don't, then lie [01:39.46]Oh, lie to me [01:45.99]Just tell me you love me [01:50.17]If you don't, then lie [01:55.49]Oh, lie to me [02:02.28]If you don't, then lie [02:07.55]Oh, lie to me [02:16.87]Call it true [02:18.82]Call it true love [02:24.99]Call it true [02:26.97]Call it true love var ap = new APlayer({ element: document.getElementById("aplayer5"), narrow: false, autoplay: false, showlrc: 2, music: { title: "True Love", author: "Coldplay", url: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music/Coldplay%20-%20True%20Love.mp3", pic: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music-cover/coldplay-true-love.jpg", } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 可视化要下载的话，官网点这里，如下图，随便点一个下载Free Trial版就行，选Windows Media Player，然后可能要填个表，邮箱年龄啥的，乱填一下就好了。 或者直接下载我压缩好的一个压缩包，里面有Aeon、G-Force和WhiteCap，点击下载音乐可视化.zip(44.5 MB)，要其它请去官网下载。 倒放把一首歌倒着放，感觉很怪，但有时也很赞。接触到这个，是因为Coldplay一首最深情的The Scientist正序版MV，正序的MV，倒序的音乐，却仍是满满的深情。用下面这个软件可以实现把一首歌倒序，当然如果你用其它音频处理的软件也行，只要你会就行。 首先点击下载GoldWaveCN.zip(11.0 MB)，然后解压缩啥的自己鼓捣，双击.exe结尾的程序打开。最后按下图操作： bb - for - fun空间巨浪席卷大脑，nothing but a shape, can you understand it?]]></content>
      <categories>
        <category>technology</category>
        <category>computer</category>
        <category>computer-aided-art</category>
      </categories>
      <tags>
        <tag>想象</tag>
        <tag>空间</tag>
        <tag>beautiful</tag>
        <tag>share</tag>
        <tag>video</tag>
        <tag>coldplay</tag>
        <tag>music</tag>
        <tag>love</tag>
        <tag>system-software</tag>
        <tag>technology</tag>
        <tag>computer</tag>
        <tag>bb-for-fun</tag>
        <tag>computer-aided-art</tag>
        <tag>音乐可视化</tag>
        <tag>shape</tag>
        <tag>下载</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[打造个性超赞博客Hexo+NexT+GithubPages的超深度优化]]></title>
    <url>%2Ftechnology%2Fcomputer%2Fcomputer-aided-art%2F2017%2F06%2F09%2Fhexo-next-optimization.html</url>
    <content type="text"><![CDATA[为庆祝这篇文章浏览量 1000+ (๑•̀ㅂ•́)و✧，懒洋洋的博主最后终于决定：对这篇已经写了几个月的文章也来次超深度优化！Todo list： 优化博客整体效果 Colorful! [2017.11.11] 完善 第4节 的F12调试说明 [2017.11.13] 重写 6.5. 好玩的写作样式 [2017.11.14] 重写 5.4. 博客推广及谷歌搜索优化（必读） [2017.11.15] 用上新的写作样式重写本文 [2017.11.15] 升级主题到 5.1.3 [2017.11.16] 升级主题后修改本文 [2017.11.18] 听取读者意见（@蝉时雨、@zhuzhuyule.xyz、@胡维），修改博客颜色和文章背景，优化阅读文章的体验，再次感谢这些读者的反馈！ [2017.11.19] 再次修改本文！ [2017.11.20] 增加 5.14. 文章摘要图片 [2017.12.03] 增加 5.15. 文章置顶 [2017.12.03] 重新修改博客样式，更改博客背景的显示方式，更改字体大小和行间距，排除过多颜色的干扰，突出文章内容，使文章阅读起来更舒适，顺便优化移动端的阅读体验…… [2017.12.05] 再次修改本文，!important …… 更多细节 ……如博主不慎改出bugs，欢迎大家评论指出，完成更新后，本行文字将消失ヾ(≧O≦)〃~2017-11-13 05:06:052017-11-15 06:45:35&lt; &gt; with @ 2017-12-05 21:41:30 必读 写在前面本文主要内容是NexT主题的个性化定制和一些细节的优化。搭建的过程，已有的优化，Markdown的使用，都直接贴出大佬的文章链接。 bb和目录首先肯定是感谢各位大佬的文章，我一个小白，没学HTML，没学CSS，没学JavaScript，连C也还没学会……如果你是一个和我一样的小白，且对本博客感觉还蛮满意，恭喜你！看完这篇文章，你自己也可以拥有一个这样的博客啦！ 给小白（像我一样，也许还有完美主义和强迫症）却想搭建个性化博客提供参考，是我写这篇文章的主要目的，所以如果本文有幸被大佬读到，文中的不足还请大佬见谅。 本文参考的文章都会直接给出原文链接或者以注脚的形式标记出处，但Google参考了实在太多太多了，有些我当时没做记录，如有遗漏，欢迎指出。 tip：有一些优化的很好的博客，有很多很酷的功能，我当时没收藏，后来非常后悔，提醒大家如果看到很赞的博客，一定要马上收藏。 因为目录默认全展开不美观，而不展开又不能让读者对文章内容迅速了解，故在开头加上。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869701. 必读 写在前面 1.1. bb和目录 1.2. 重要的定义 1.3. 我操作的环境（2017.12.03更新）2. 开始 搭建博客 2.1. 在本地安装Hexo 2.2. 部署博客到Github Pages 2.3. 更新提示（可以最后看）（2017.11.18更新）3. 优化 基本功能配置 3.1. 选择主题 3.2. 站点配置文件（2017.11.14更新） 3.3. 主题配置文件（2017.12.03更新） 3.4. 动态背景 3.5. 注脚4. 优化 网页样式布局 4.1. 怎么更改？ 4.1.1. bb - for - bb 4.1.2. 快速由懵逼到熟悉 4.1.3. bb - for - fun 4.2. 附上我的custom.styl（2017.12.03更新） 4.3. 修改字体（2017.11.20更新）5. 进阶 高级功能配置 5.1. 大佬的文章 5.2. 更改上一篇，下一篇的顺序 5.3. 移动端显示back-to-top按钮和侧栏 5.4. 博客推广及谷歌搜索优化（必读）（2017.12.03更新） 5.4.1. 博客推广 5.4.2. 搜索引擎 5.4.3. 间接影响 5.4.4. 知识平台 5.4.5. 谷歌分析 5.5. 某一category和tag的页面年份分割（2017.07.18更新） 5.5.1. category的修改 5.5.2. tag的修改 5.5.3. 说明 5.6. 文章底部加上评分小星星（2017.08.23更新） 5.7. 侧栏加入已运行的时间（2017.08.27更新） 5.8. 添加TopX页面（2017.11.18更新） 5.9. 利用gulp压缩代码（2017.08.27更新） 5.10. 让页脚的心跳动起来（2017.11.18更新） 5.11. 页脚加上微信二维码（2017.08.29更新） 5.12. 更改标签云（tagcloud）的颜色（2017.08.31更新） 5.13. 点击侧栏头像回到博客首页（2017.11.16更新） 5.14. 文章摘要图片（2017.12.03更新） 5.15. 文章置顶（2017.12.03更新）6. 进阶 写出优雅文章 6.1. 文章的模版文件（必读）（2017.12.04更新） 6.2. 使用Markdown 6.2.1. Markdown简介 6.2.2. Markdown教程 6.2.3. 我个人的总结（2017.11.15更新） 6.3. 如何使用emoji（2017.11.20更新） 6.4. 插入音乐和视频 6.4.1. 音乐（2017.08.20更新） 6.4.2. 视频（2017.11.18更新） 6.5. 好玩的写作样式（2017.11.13更新） 6.5.1. 主题自带样式 FontAwesome图标 6.5.2. 主题自带样式 代码块高亮（2017.11.20更新） 6.5.3. 主题自带样式 文本居中引用 6.5.4. 主题自带样式 note标签 6.5.5. 主题自带样式 label标签 6.5.6. 主题自带样式 tabs标签 6.5.7. 自定义样式 文字背景色块（2017.12.03更新） 6.5.8. 自定义样式 文字引用边框 6.5.9. 自定义样式 下载框（按钮） 6.5.10. 自定义样式 数字块7. 结尾 求大佬和结尾 7.1. 移动端顶部菜单 7.2. 替换fancybox（2017.11.18更新） 7.3. 最后的结束小语 重要的定义了解这些定义，防止懵逼和大脑混乱。 站点配置文件和主题配置文件，名字都叫_config.yml，容易乱。 1.站点配置文件，位于站点文件夹根目录内： 1~/blog/_config.yml 2.主题配置文件，位于主题文件夹根目录内： 1~/blog/themes/next/_config.yml 我操作的环境留这个，是因为有时我Google教程，发现按流程走，却达不到应有的效果。故当按照这篇的某流程却达不到预期效果，可以考虑考虑这个，然后自己灵活点去Google解决方案。 tip：由于众所周知的原因Google无法访问，推荐一下老D的hosts，不过估计能看到这篇文章的人，都已具备这种能力。 [2017.12.03更新]12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061/* 调试浏览器 */Google Chrome Version 62.0.3202.94 (Official Build) (64-bit)/* 版本信息 */root@kali:~/blog# hexo version(node:6675) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.hexo: 3.4.1hexo-cli: 1.0.4os: Linux 4.13.0-kali1-amd64 linux x64http_parser: 2.7.0node: 8.3.0v8: 6.0.286.52uv: 1.13.1zlib: 1.2.11ares: 1.10.1-DEVmodules: 57openssl: 1.0.2licu: 59.1unicode: 9.0cldr: 31.0.1tz: 2017b/* 依赖包 */root@kali:~/blog# cat package.json&#123; "name": "hexo-site", "version": "0.0.0", "private": true, "hexo": &#123; "version": "3.4.1" &#125;, "dependencies": &#123; "gulp": "^3.9.1", /* 压缩代码 */ "gulp-htmlclean": "^2.7.15", /* 压缩代码 */ "gulp-htmlmin": "^3.0.0", /* 压缩代码 */ "gulp-minify-css": "^1.2.4", /* 压缩代码 */ "hexo": "^3.4.1", /* 默认安装 */ "hexo-deployer-git": "^0.3.1", /* Git部署工具 */ "hexo-footnotes": "^1.0.1", /* 注脚 */ "hexo-generator-archive": "^0.1.5", /* 默认安装 */ "hexo-generator-category": "^0.1.3", /* 默认安装 */ "hexo-generator-feed": "^1.2.2", /* RSS */ "hexo-generator-index-pin-top": "^0.2.2", /* 替代默认安装的，支持文章置顶 */ "hexo-generator-searchdb": "^1.0.8", /* 本地搜索 */ "hexo-generator-sitemap": "^1.2.0", /* 生成sitemap.xml，利于SEO */ "hexo-generator-tag": "^0.2.0", /* 默认安装 */ "hexo-renderer-ejs": "^0.3.0", /* 默认安装 */ "hexo-renderer-marked": "^0.3.0", /* 默认安装 */ "hexo-renderer-stylus": "^0.3.1", /* 默认安装 */ "hexo-server": "^0.2.0", /* 默认安装 */ "hexo-tag-aplayer": "^2.0.5", /* 音乐播放插件，支持歌词 */ "hexo-tag-dplayer": "^0.2.1", /* 视频播放插件，支持弹幕 */ "hexo-wordcount": "^3.0.2" /* 字数统计 */ &#125;&#125;/* 主题NexT版本 */version: 5.1.3/* 优化主题NexT的设计版式 */scheme: Muse 开始 搭建博客终于进入正文了！但是这个我却不打算写，因为看到了一些很好的文章，这里直接给出这些文章的链接～ 在本地安装Hexo1.建议先把Hexo官方文档过一遍，毕竟是官方文档。 2.在Linux服务器上搭建Hexo：OS X、Windows与Linux本地环境，有选择的查看，因为此大佬直接部署在了自己的Linux服务器上，而不是部署到Github Pages，所以对于萌新查看到安装好Hexo就行了。 安装好Hexo后，先任意目录新建个文件夹，名字可以为blog，然后进入这个文件夹，输入命令： 所在目录：~/blog/1hexo init 等一会，如果出现橙色的WARN没关系，只要不出现红色的ERROR就行。好了后，输入命令： 所在目录：~/blog/123hexo ghexo s 然后点开http://localhost:4000/，恭喜你！已经在本地搭建好博客了(๑•̀ㅂ•́)و✧！距离成功只差下一步——部署博客到Github Pages了～ 部署博客到Github PagesGithub Pages是开源协作社区Github的一个服务，将博客部署到它上面再合适不过了。 问题 解答 为什么要部署到Github Pages上？ 首先免费，其次省心，最后可以学习使用Github。 Github Pages有容量限制吗？ 有，由What is GitHub Pages?可知：大小限制为1 GB，一个月100 GB流量。 超出限制的容量怎么办？ 讲真，如果图片音乐视频等大文件都放在七牛云KODO、阿里云OSS或其它云存储上，那么压根不用担心，因为我的博客现在[2017.11.17]也才用了6.73 MB，所以无需担心。 国内访问速度行不行，有必要同时部署在Coding上吗？ 个人感觉完全没必要，自己不用梯子时，感觉访问速度可以，毕竟站点的大文件都是放在了云存储上。 我可以用自己的域名吗？ 可以，在~/blog/source/目录下添加CNAME文件即可，教程自己Google。 注册Github帐号和创建Repository请查看这篇文章：基于Hexo+github+coding搭建个人博客——基础篇(从菜鸟到放弃)，之后在站点文件夹根目录，安装Git部署插件（以后安装插件都先到这个目录），输入下面命令回车： 所在目录：~/blog/1npm install hexo-deployer-git --save 然后，打开站点文件夹根目录下的站点配置文件，编辑： 文件位置：~/blog/_config.yml1234567891011121314# URLurl: https://reuixiy.github.io/...省略……..# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:- type:+ type: git+ repository: https://github.com/reuixiy/reuixiy.github.io.git+ branch: master 将其中的reuixiy改成你的Github注册的帐号名就行，然后执行下面的命令： 所在目录：~/blog/12345hexo cleanhexo ghexo d 输入你的Github的用户名和密码，成功后复制https://帐号名.github.io/浏览器打开就行。看！这就是你的博客了，只要能连接到互联网，就能随时查看它(๑•̀ㅂ•́)و✧！ 当然，如果你不想每次都输入用户名和密码，不想每次更新时，在Github上显示invalid-email-address，可以按上面所提的那篇文章操作。 更新提示（可以最后看）更新会有不确定因素，即讨厌又麻烦，但是不更新又怎么能享受新功能呢。 1.npm更新全局安装的包： 1npm update -g 2.npm更新站点文件夹根目录下安装的依赖包： 所在目录：~/blog/1npm update 3.更新npm它自己： 1npm install npm -g 4.更新Node.js到最新版： 123npm install n -gn latest 5.更新主题：进入主题文件夹根目录，然后git pull，发现报错，怎么解决呢？可以先浏览这篇文章，然后参考我的操作。 先到主题文件夹根目录： 所在目录：~/blog/themes/next/1git pull 会发现报错，由于我们更改了相关文件，更新不成功，所以要将本地的所有修改先暂时存储起来： 所在目录：~/blog/themes/next/1git stash 然后再试一下： 所在目录：~/blog/themes/next/1git pull 可以了吧，接下来还原暂时存储的内容（即保存我们的所有修改）： 所在目录：~/blog/themes/next/1git stash pop 如果报CONFLICT，是因为Git无法确定一些改动，所以要我们手动解决文件中冲突的部分，这个比较麻烦，可以参考我下面的流程。 首先打开报CONFLICT的文件，Ctrl + F搜索&gt;&gt;&gt;&gt;&gt;&gt;&gt; Stashed changes，查看从此处到=======之间保存的代码，回忆一下自己当时更改了什么，是为了达到什么功能。 然后查看=======到&lt;&lt;&lt;&lt;&lt;&lt;&lt; Updated upstream之间更新的代码，与下面保存的代码进行对比（也请浏览下所标出代码前后的代码）： 如果改动较大，可能是主题增加了新功能，建议保留更新的代码，然后更改一下，达到自己想要在保存的代码中实现的功能，最后删除保存的代码。 如果改动较小，建议还是保留更新的代码，然后更改一下，最后删除保存的代码。 要是自己不确定，一定记得将&lt;&lt;&lt;&lt;&lt;&lt;&lt; Updated upstream到&gt;&gt;&gt;&gt;&gt;&gt;&gt; Stashed changes之间的代码另存备份，然后进行调试，直到最后确定没有问题。 最后： 所在目录：~/blog/themes/next/12345root@kali:~/blog/themes/next# git pullerror: Pulling is not possible because you have unmerged files.hint: Fix them up in the work tree, and then use 'git add/rm &lt;file&gt;'hint: as appropriate to mark resolution and make a commit.fatal: Exiting because of an unresolved conflict. 哇，又报错了，咋办？ 先查看： 所在目录：~/blog/themes/next/12345678910111213141516171819202122232425262728293031323334353637root@kali:~/blog/themes/next# git statusOn branch masterYour branch is up to date with 'origin/master'.Changes to be committed: (use "git reset HEAD &lt;file&gt;..." to unstage) modified: layout/_custom/header.swig modified: layout/_custom/sidebar.swig modified: layout/_layout.swig modified: layout/category.swig modified: layout/tag.swig modified: source/css/_common/components/post/post-meta.styl modified: source/css/_common/components/post/post-nav.styl modified: source/css/_common/scaffolding/base.styl modified: source/css/_custom/custom.styl deleted: source/images/avatar.gif modified: source/lib/Han/dist/han.min.cssUnmerged paths: (use "git reset HEAD &lt;file&gt;..." to unstage) (use "git add &lt;file&gt;..." to mark resolution) both modified: _config.yml both modified: languages/zh-Hans.yml both modified: layout/_macro/post-copyright.swig both modified: layout/_macro/post.swig both modified: layout/_macro/sidebar.swig both modified: layout/_partials/footer.swig both modified: layout/page.swig both modified: source/css/_variables/base.stylUntracked files: (use "git add &lt;file&gt;..." to include in what will be committed) layout/_macro/passage-end-tag.swig source/js/src/love.js 看下面Unmerged paths，说git reset HEAD &lt;file&gt;...来取消修改（大概），git add &lt;file&gt;...来mark决定（大概），我们当然要保存这些文件的更改，所以： 所在目录：~/blog/themes/next/1root@kali:~/blog/themes/next# git add _config.yml languages/zh-Hans.yml layout/_macro/post-copyright.swig layout/_macro/post.swig layout/_macro/sidebar.swig layout/_partials/footer.swig layout/page.swig source/css/_variables/base.styl layout/_macro/passage-end-tag.swig source/js/src/love.js 顺便把新加的passage-end-tag.swig和love.js也加进去，最后再来试一下吧： 所在目录：~/blog/themes/next/12root@kali:~/blog/themes/next# git pullAlready up to date. 哇，成功更新主题！ 注意：更新有风险，一定要谨慎处理文件中冲突的部分！ 另外：如果更新NexT主题后，配置文件有些新功能不会配置，可以查看Releases页面，去里面找说明。 优化 基本功能配置通过上面的学习，你应该能够在自己的Github Pages上看到自己的博客了，接下来就是配置和增加功能，如阅读统计、加上评论和安装插件啥的，还有就是添加一些博客的基本信息，这些配置建议在写文章之前先折腾好。 配置大部分就是改两个文件，都叫_config.yml，文章的开头位置已告诉大家。 我觉得与其将两个文件中的每点都分开来解释，倒不如直接将这两个文件贴出来，然后通过注释的方式告诉大家配置的方法，所以下面我会贴出这两个文件，怎么配置看注释就好了。 选择主题不过还有一件事要先说一说，就是合适自己的主题，这是搭建好博客后最重要的一件事。 默认的主题功能少，而且不太好看（个人感觉），而一些主题则有很多功能，也比较美观。 我选择的是NexT，简洁且功能不少，也是在Github上被Star最多[2017.11.17]的一个Hexo主题。 第二多的是hexo-theme-yilia，第三多的是hexo-theme-material（还有一个很棒的Material Design风格主题hexo-theme-material-indigo），还有一个我感觉比较有特色的，叫Cactus Dark，这几个我感觉都不错，可以点开链接看看长啥样。 要是我上面说的还是没有和你胃口的，咋办？去Hexo Themes慢慢找。 至于换主题，很简单，我拿NexT主题举个栗子。 首先在这个主题的Github页面的右上方复制链接，如下图： 然后： 所在目录：~/blog/themes/1git clone https://github.com/iissnan/hexo-theme-next.git 把hexo-theme-next改名为next，再在站点配置文件中修改成如下即可： 文件位置：~/blog/_config.yml12## Themes: https://hexo.io/themes/theme: next 站点配置文件请先查看Hexo官方文档，再查看下面我贴出的，如果这样后你还是对有些地方比较懵，可以自行Google。 如果你的文件中没有相关内容，请勿直接添加，且所有的:都为英文字符，它后面都有一个空格。 [2017.11.14更新] 文件位置：~/blog/_config.yml123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: reuixiysubtitle: Viva La Vidadescription: 易 象 辞author: reuixiylanguage: zh-Hanstimezone:# URLurl: https://reuixiy.github.io/root: /# 博客文章的URL结构，请务必写文章之前就想好！# 详细参数请查看：https://hexo.io/docs/permalinks.html# 当然最好不要参考我的，我的太不利于SEO了，除非……permalink: :category/:year/:month/:day/:title.htmlpermalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: true# 代码高亮设置highlight: enable: true line_number: true# 代码自动高亮 auto_detect: true tab_replace:# 关于代码高亮的更多知识，可以查看本文6.5.2节# Home page setting# path: Root path for your blogs index page. (default = '')# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: '' per_page: 10 order_by: -date# Category &amp; Tagdefault_category: uncategorized# 分类和标签的路径设置成英文# 见：https://github.com/hexojs/hexo/issues/1162category_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable pagination# 这个我有点懵，上面不是有啊……per_page: 10pagination_dir: page## 修改归档页面、某一分类页面、某一标签页面的显示篇数## 参考：http://theme-next.iissnan.com/faqs.html#setting-page-sizearchive_generator: per_page: 0 yearly: false monthly: false daily: falsecategory_generator: per_page: 0tag_generator: per_page: 0# Extensions## Plugins: https://hexo.io/plugins/# RSS，要先进入站点文件夹根目录安装插件# npm install hexo-generator-feed --save即可# 无需更多配置# 参数说明查看README：https://github.com/hexojs/hexo-generator-feedfeed: type: atom path: atom.xml# 文章数，0为全部 limit: 0 hub:# 是否包含文章内容 content: true## Themes: https://hexo.io/themes/# 主题配置theme: next# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: https://github.com/reuixiy/reuixiy.github.io.git branch: master 主题配置文件如果你的主题不是NexT，那么请另Google。建议先查看NexT官方文档，写的很好，多逗留会没坏处。 为了保证阅读效果，我把我没有配置的差不多都删了，有问题可以多Google。如果你觉得里面有必要告诉大家，但我却没写，欢迎评论告诉我，我会及时加上滴～ [2017.12.03更新] 文件位置：~/blog/themes/next/_config.yml123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453454455456457458459460461462463464465466467468469470471472473474475476477478479480481482483484485486487488489490491492493494495496497498499500501502503504505506507508509510511512513514515516517518519520521522523524525526527528529530531532533534535536537538539540541542543544545546547548549550551552553554555556557558559560561562563564565566567568569570571572573574575576577578579580581582583584585586587588589590591592593594595596597598599600601602603604605606607608609610611612613614615616617618619620621622623624625626627628629630631632633634635636# ---------------------------------------------------------------# Theme Core Configuration Settings# ---------------------------------------------------------------# 更新相关，参考：# https://github.com/iissnan/hexo-theme-next/issues/328# 博主没有使用，更新主题你可以使用本文2.3节的方法override: false# ---------------------------------------------------------------# Site Information Settings# ---------------------------------------------------------------# 站点图标啦，直接去https://realfavicongenerator.net# 选项弄好后，下载压缩包，解压复制粘贴# 建议放在hexo-site/source/images/里（没有自己建）# 这样可以避免更新NexT主题的时候遇到麻烦# 最后记得要稍微改下文件名，与下面的保持一致favicon: small: /images/favicon-16x16.png medium: /images/favicon-32x32.png apple_touch_icon: /images/apple-touch-icon.png safari_pinned_tab: /images/safari-pinned-tab.svg android_manifest: /images/manifest.json ms_browserconfig: /images/browserconfig.xml# Set default keywords (Use a comma to separate)# 站点关键字，利于SEO大概，记得用英文逗号分隔keywords: reuixiy,哲学,Hexo,博客,Coldplay# Set rss to false to disable feed link.# Leave rss as empty to use site's feed link.# Set rss to specific value if you have burned your feed already.# RSS，若参考上文3.2节站点配置文件里面的注释配置# 则无需在这添加任何东西rss:footer:# 页脚配置 # Specify the date when the site was setup. # If not defined, current year will be used. # 建站年份 since: 2017 # Icon between year and copyright info. # 年份后面的图标，为Font Awesome图标 # 自己去纠结http://fontawesome.io/icons/ # 然后更改名字就行，下面的有关icon的设置都一样 icon: heart # If not defined, will be used `author` from Hexo main config. # 如果不定义，默认用站点配置文件的author名 copyright: # ------------------------------------------------------------- # Hexo link (Powered by Hexo). # Hexo的链接 powered: false theme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false # Version info of NexT after scheme info (vX.X.X). version: false # ------------------------------------------------------------- # Any custom text can be defined here. # 自定义内容，要加记得把前面的#去掉 #custom_text:# ---------------------------------------------------------------# SEO Settings# ---------------------------------------------------------------canonical: trueseo: false# If true, will add site-subtitle to index page, added in main hexo config.# subtitle: Subtitleindex_with_subtitle: false# ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------# 菜单设置 || 菜单图标设置（上面说了，不重复）# 项目换行可以更改显示顺序# 如果这个项前会显示.menu# 解决方法：编辑~/blog/themes/next/languages下的相应文件# 比如添加一个“留言”菜单，站点配置文件的language是zh-Hans# 则编辑zh-Hans.yml，在menu:项内添加一行 留言: 留言# 注意空格，且符号:为英文字符！menu: home: / || home archives: /archives/ || archive categories: /categories/ || th tags: /tags/ || tags top: /top/ || signal about: /about/ || futbol-o #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat# Enable/Disable menu icons.# 是否开启菜单图标menu_icons: enable: true# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemes# 设计板式，都长啥样，去README里面的链接里看看# https://github.com/iissnan/hexo-theme-next#live-previewscheme: Muse#scheme: Mist#scheme: Pisces#scheme: Gemini# ---------------------------------------------------------------# Sidebar Settings# ---------------------------------------------------------------# 侧栏社交链接设置，与上面菜单差不多，要生效记得把前面的#去掉#social: #GitHub: https://github.com/yourname || github #E-Mail: mailto:yourname@gmail.com || envelope #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skype# 侧栏社交链接图标设置social_icons: enable: true icons_only: false transition: false# Blog rolls# 侧栏友链设置links_icon: globelinks_title: 神奇的链接#links_layout: blocklinks_layout: inlinelinks: 😆 网易云音乐 😆: https://music.163.com/#/user/home?id=86590096 Coldplay Official Website: http://coldplay.com/ 获取Elon Musk的新闻: https://elonmusknews.org/ 尼古拉·特斯拉：发明了现代世界的人: http://www.bilibili.com/video/av6211226/ 关于此博客: https://reuixiy.github.io/about/# Sidebar Avatar# in theme directory(source/images): /images/avatar.gif# in site directory(source/uploads): /uploads/avatar.gif# 侧栏头像设置# 圆形以及旋转效果在本文4.2节的代码里# 点击回到博客首页教程见本文5.13节# 建议放在hexo-site/source/uploads/里（没有自己建）# 这样可以避免更新NexT主题的时候遇到麻烦avatar: /uploads/avatar.gif# Table Of Contents in the Sidebar# 侧栏文章目录设置（前提是Markdown书写正确）# Markdown教程见本文6.2节toc: enable: true # Automatically add list number to toc. # 自动加数字序号 number: true # 如果标题太长，则放到下一行继续显示 # 开启后可能要在custom.styl里加代码，本文4.2节有 wrap: true# Creative Commons 4.0 International License.# http://creativecommons.org/# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero#creative_commons: by-nc-sa#creative_commons:sidebar: # Sidebar Position, available value: left | right (only for Pisces | Gemini). # 侧栏位置设置，可用值：左 | 右（只对 Pisces 和 Gemini 设计版式有效！） position: left #position: right # Sidebar Display, available value (only for Muse | Mist): # 侧栏显示方式，post代表只有点进一篇文章内 # 且文章有目录，侧栏才会弹出显示 display: post #display: always #display: hide #display: remove # Sidebar offset from top menubar in pixels (only for Pisces | Gemini). # 只对 Pisces 和 Gemini 设计版式有效！ offset: 12 # Back to top in sidebar (only for Pisces | Gemini). # 只对 Pisces 和 Gemini 设计版式有效！ b2t: false # Scroll percent label in b2t button. # 在回到顶部按钮里显示阅读百分比 scrollpercent: true # Enable sidebar on narrow view (only for Muse | Mist). # 移动端显示侧栏，只对 Muse 和 Mist 设计版式有效！ onmobile: true# ---------------------------------------------------------------# Post Settings# ---------------------------------------------------------------# Automatically scroll page to section which is under &lt;!-- more --&gt; mark.# 点击[Read More]，页面自动滚动到&lt;!-- more --&gt;标记处scroll_to_more: false# Automatically saving scroll position on each post/page in cookies.# 用cookies保存浏览的位置信息，意味着重新打开这个页面后# 页面就会自动滚动到上次的位置，除非读者清理浏览器cookiessave_scroll: false# Automatically excerpt description in homepage as preamble text.# 自动将每篇文章Front-matter里description的文字作为页面显示的文章摘要excerpt_description: false# Automatically Excerpt. Not recommend.# Please use &lt;!-- more --&gt; in the post to control excerpt accurately.# 按字数自动加入[Read More]，不建议！# 建议在文章中加入&lt;!-- more --&gt;# 自定义[Read More]按钮之前要显示的内容！auto_excerpt: enable: false length: 150# Post meta display settings# 文章顶部显示的文章元数据设置post_meta: item_text: true created_at: true updated_at: false categories: true# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcount# 显示统计字数和估计阅读时长# 注意：这个要安装插件，先进入站点文件夹根目录# 然后：npm install hexo-wordcount --savepost_wordcount: item_text: true wordcount: true min2read: false totalcount: false separated_meta: false# Wechat Subscriber# Reward# Declare license on postspost_copyright: enable: true license: CC BY-NC-SA 3.0 license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/# ---------------------------------------------------------------# Misc Theme Settings# ---------------------------------------------------------------# Reduce padding / margin indents on devices with narrow width.# 移动段把页面两边留白去除，个人不建议mobile_layout_economy: false# Android Chrome header panel color ($black-deep).# Android上Chrome浏览器顶部颜色设置android_chrome_color: "#fff"# Custom Logo.# !!Only available for Default Scheme currently.# Options:# enabled: [true/false] - Replace with specific image# image: url-of-image - Images's urlcustom_logo: enabled: false image:# Code Highlight theme# Available value:# normal | night | night eighties | night blue | night bright# https://github.com/chriskempson/tomorrow-theme# 代码高亮主题设置# 都长啥样自己点开上面的链接查看highlight_theme: normal# 注意要先在站点配置文件中设置# 怎么设置参考上文3.2节# ---------------------------------------------------------------# Font Settings# - Find fonts on Google Fonts (https://www.google.com/fonts)# - All fonts set here will have the following styles:# light, light italic, normal, normal italic, bold, bold italic# - Be aware that setting too much fonts will cause site running slowly# - Introduce in 5.0.1# ---------------------------------------------------------------# 字体设置，见本文4.3节font: enable: true # Uri of fonts host. E.g. //fonts.googleapis.com (Default) host: https://fonts.cat.net # Font options: # `external: true` will load this font family from `host` above. # `family: Times New Roman`. Without any quotes. # `size: xx`. Use `px` as unit. # Global font settings used on &lt;body&gt; element. global: external: true family: Lato size: # Font settings for Headlines (h1, h2, h3, h4, h5, h6). # Fallback to `global` font settings. headings: external: true family: size: # Font settings for posts. # Fallback to `global` font settings. posts: external: true family: # Font settings for Logo. # Fallback to `global` font settings. logo: external: true family: Lato size: # Font settings for &lt;code&gt; and code blocks. codes: external: true family: "Source Code Pro" size:# ---------------------------------------------------------------# Third Party Services Settings# ---------------------------------------------------------------# MathJax Supportmathjax: enable: false per_page: false cdn: //cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML# Han Support docs: https://hanzi.pro/# 汉字标准格式，没用过暂时不了解han: false# Swiftype Search API Key# Baidu Analytics ID# Duoshuo ShortName# Disqus# Hypercomments# 我用的就是这种，特点是可以匿名评论，暂时还没有加入GFW名单# https://www.hypercomments.com/# 自己去网站用Google邮箱注册，有啥不懂请留言评论# 建议你把Quote（管理台右上角的Settings按钮，然后Widget里）关了# 鼠标在一些段落上时，这个Quote会在后面显示一个图标# 或者选中一段文字，会有……hypercomments_id:# changyan# Valine.# Support for youyan comments system.# Support for LiveRe comments system.# 来必力评论# 参见教程：https://linan.blog/2017/LiveReCommentsSystem/#livere_uid: your uid# Gitment# Baidu Share# Share# Google Webmaster tools verification setting# See: https://www.google.com/webmasters/# Google站长工具校验# 可以不用这种验证方式，直接先添加下面的Google Analytics# 然后用Google Analytics校验#google_site_verification:# Webmaster是用来提交自己的文章链接给Google# 然后别人就有可能通过Google搜索到自己的博客# 这个必须做，如果你的文章想被别人看到的话# 教程查看本文5.4节# Google Analytics# 去https://analytics.google.com注册，自备梯子# 教程查看本文5.4节google_analytics:# Bing Webmaster tools verification setting# Yandex Webmaster tools verification setting# CNZZ count# Application Insights# Make duoshuo show UA# Post widgets &amp; FB/VK comments settings.# ---------------------------------------------------------------# Facebook SDK Support.# Facebook comments plugin# VKontakte API Support.# Star rating support to each article.# To get your ID visit https://widgetpack.com# 评分，教程见本文5.6节rating: enable: true id: color: f79533# ---------------------------------------------------------------# Show number of visitors to each article.# You can visit https://leancloud.cn get AppID and AppKey.# 可以显示每篇文章的阅读量# 然后可以通过阅读量建立TopX页面，教程链接：# https://notes.wanghao.work/2015-10-21-为NexT主题添加文章阅读量统计功能.htmlleancloud_visitors: enable: true app_id: app_key:# Another tool to show number of visitors to each article.# Show PV/UV of the website/page with busuanzi.# Get more information on http://ibruce.info/2015/04/04/busuanzi/# 不蒜子统计，用于在页脚显示总访客数和总浏览量，将false改为true就能直接使用busuanzi_count: # count values only if the other configs are false enable: true # custom uv span for the whole site site_uv: true site_uv_header: &lt;i class="fa fa-user-circle-o"&gt;&lt;/i&gt; site_uv_footer: # custom pv span for the whole site site_pv: true site_pv_header: site_pv_footer: &lt;i class="fa fa-eye"&gt;&lt;/i&gt; # custom pv span for one page only # 页面浏览量，不建议开启，建议用上面的leancloud_visitors # 首先leancloud更稳定，其次leancloud便于管理 # 最后，可以利用leancloud的api建立TopX页面 page_pv: false page_pv_header: &lt;i class="fa fa-file-o"&gt;&lt;/i&gt; page_pv_footer:# Tencent analytics ID# Tencent MTA IDbaidu_push: false# Google Calendar# Algolia Search# Local search# Dependencies: https://github.com/flashlab/hexo-generator-search# 要安装插件才能使用，先进入站点文件夹根目录# 然后：npm install hexo-generator-searchdb --savelocal_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1# ---------------------------------------------------------------# Tags Settings# ---------------------------------------------------------------# External URL with BASE64 encrypt &amp; decrypt.# Usage: &#123;% exturl text url "title" %&#125;# Alias: &#123;% extlink text url "title" %&#125;# 用法见：# https://github.com/iissnan/hexo-theme-next/pull/1438exturl: false# Note tag (bs-callout).# 主题的标签样式，有note、label、tabs三种# 说明请查看本文6.5节note: style: flat icons: true border_radius: 3 light_bg_offset: 0# Label tag.label: true# Tabs tag.tabs: enable: true transition: tabs: true labels: true border_radius: 0#! ---------------------------------------------------------------#! DO NOT EDIT THE FOLLOWING SETTINGS#! UNLESS YOU KNOW WHAT YOU ARE DOING#! ---------------------------------------------------------------# Use velocity to animate everything.# 动态渐入渐出显示效果# 会对视频播放插件（教程本文6.4.2节）# hexo-tag-dplayer产生网页全屏的bug# 之前可以通过在custom.styl中加代码解决# 见本文4.2节，issue页面：# https://github.com/MoePlayer/hexo-tag-dplayer/issues/11# 更新主题后失效，所以我暂时关了[2017.11.16]motion: enable: false async: false transition: post_block: fadeIn post_header: slideDownIn post_body: slideDownIn coll_header: slideLeftIn # Only for Pisces | Gemini. sidebar: slideUpIn# Fancybox# 查看图片的fancybox: true# [2017.08.27]# 效果太差了，没能力自己造轮子，先关了# [2017.11.17]# 原因是版本太低，已有大佬提交Pr：# https://github.com/iissnan/hexo-theme-next/pull/1989# 目前还未被Merge，博主跟进中，实在不行手动更新# 暂时的解决方法：# 下面的Script Vendors的fancybox那# 加上新版本的CDN地址# Progress bar in the top during page loading.# 页面顶部加载条pace: truepace_theme: pace-theme-flash# Canvas-nest# 动态背景，见本文3.4节# 被我关了[2017.07.01]canvas_nest: false# three_wavesthree_waves: false# canvas_linescanvas_lines: false# canvas_spherecanvas_sphere: false# Only fit scheme Pisces# Canvas-ribbon# size: The width of the ribbon.# alpha: The transparency of the ribbon.# zIndex: The display level of the ribbon.canvas_ribbon: enable: false size: 300 alpha: 0.6 zIndex: -1# Script Vendors.# Set a CDN address for the vendor you want to customize.vendors: # Internal path prefix. Please do not edit it. _internal: lib # Internal version: 2.1.5 # See: http://fancyapps.com/fancybox/ # 自定义fancybox（暂时） fancybox: https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.2.1/jquery.fancybox.min.js fancybox_css: https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.2.1/jquery.fancybox.min.css# Assetscss: cssjs: jsimages: images# Theme versionversion: 5.1.3# 文章末尾添加“本文结束”标记，请勿直接添加，教程链接：# http://shenzekun.cn/hexo的next主题个性化配置教程.html# 见第7节，在每篇文章末尾统一添加“本文结束”标记passage_end_tag: enabled: true 如果里面有些设置你还想进一步自定义，比如进一步自定义页脚文字的顺序，折腾完本文第5节你就会了。 动态背景效果图： 1.在主题配置文件中，靠后面，改canvas_nest: true。 2.修改颜色和数量，修改文件： 文件位置1~/blog/themes/next/source/lib/canvas-nest/canvas-nest.min.js 怎么修改？参考README。 注脚在Hexo插件搜索footnotes，发现目前有两种插件，右边的可以实现鼠标放在上面悬浮显示注释的功能，但是亲测有一个Bug，有时对页面宽度有影响，强迫症难以忍受。 tip：Hexo插件页面有很多不同功能的插件，可以自行尝试，说不定有惊喜。 我安装的是左边的，先进入站点文件夹根目录，然后： 所在目录：~/blog/1npm install hexo-footnotes --save 安装后按README的方法书写，应该就可以了。 注意：注脚的内容一定要放在Markdown文档的最后面，否则可能会有错误。 优化 网页样式布局发现页面有大量留白？颜色不合自己口味？那就F12开始吧，大换装开始！空白区？颜色？背景？圆角矩形？阴影？透明度？超链接样式？侧栏头像圆形并旋转？文章标题前面的竖线和颜色？只需按下F12，改到自己想要的样式，然后Copy到custom.styl文件即可。 文件位置：~/blog/themes/next/source/css/_custom/custom.styl 怎么知道要修改这个文件呢？强烈推荐阅读2017年最新基于hexo搭建个人免费博客——自定义页面样式一。 感觉这是NexT主题非常棒的设计，因为这让我们能够很方便自定义博客的样式。 怎么更改？浏览器按F12即可，建议用Google Chrome浏览器（有梯子的直接去Google下载），或者火狐浏览器。如果你按下F12后简直特么一脸懵逼，那么别急，硬着头皮慢慢折腾吧哈哈哈嗝～ bb - for - bb不管你信不信，其实博主就是这样直接折腾过来的，我之前没学过HTML和CSS，所以当时按下F12真是一脸懵逼。 我一开始是Google（关键字：Hexo NexT 自定义）到上面那篇文章，一点进去，卧槽！侧栏终于不是清一色的默认黑色，激动！这为大佬怎么改的啊？这篇文章一定有吧！？然后看下去，果然有！ 然后眼睛先盯着贴的custom.styl，久久看着少数的注释，Copy一段到自己的custom.styl，保存，然后hexo clean、hexo g、hexo s（当时我还不知道可以hexo s后可以直接本地调试），再去浏览器刷新自己的本地调试页面，看看效果。效果是有了，但是不是我想要的效果啊……于是去百度其中一行CSS代码，再回去慢慢删改调试…… tip：hexo s后可以直接本地调试，也就是更改文件保存后，Hexo后台会自动重新渲染文件，所以只要稍等片刻，浏览器刷新一下就能看到效果。 博主由懵逼到熟悉花了不少时间，但是我写这篇文章就是为了减少像我这样的小白折腾的时间，所以下面详细说明下按下F12后怎么快速由懵逼到熟悉！ 快速由懵逼到熟悉首先按下F12后的操作流程图，就是这篇文章中的三步骤，点小箭头定位元素，调试CSS代码，最后Copy到custom.styl。 然后懵逼的地方，应该有下面两点： 按下F12后弹出的界面是什么鬼？！ 界面中的{}前面的和里面的英文是什么鬼？！ 第一点：弹出的界面是为调试设计的，如果你知道调试的是啥，也许就自然了解弹出的界面，所以我不多说，不过还是给一份Google官方的资料——Chrome 开发者工具。 第二点：{}前面的是HTML的元素名，{}里面的是这个元素的CSS样式。 社交要先有自己原则，一段代码要先声明变量，一个数学问题有前提，一篇论文要先定义名词，到这里我们也必须要先了解一些HTML和CSS的基本语法知识了，才能继续折腾下去。 建议先浏览下这篇文章，但没必要记住里面的每一个语法知识，因为这样的记忆是不够深刻也并不高效的，只要浏览下留个印象（为了能找准元素）就行，而记忆是要在实践中记忆的。 bb - for - fun实践？对！就是打开自己的本地调试页面，然后用你挑剔的眼光看看，哪里让你不爽，就按F12，定位元素，最后调试，直到改到自己满意。这不是与一开始说的三步骤一样吗，为啥现在又说一遍？ 不不不，想想如果你点开一个俄文网站，然后我给你个这页面上的一个俄文链接的中文翻译，让你点开这个链接，你会不会懵逼呢……一样的，如果我没有让先你浏览HTML和CSS的基本语法知识，那么对网页中出现的东东大脑压根就“翻译”不成HTML和CSS代码（反之一样）。 对HTML和CSS的语法定义不明，就可能会找不准元素，而找不准元素不仅可能达不到预期效果，还可能会产生一些新的bug，所以要先浏览上面那篇文章。 这也是我这个小白走过的坑中，最大的一个了，花费了我不少时间在无意义的搜索上，想达到一个效果，但是不知道输入什么搜索关键字…… 最后，要熟练还是要多折腾，给你右边这张图慢慢体会……喵？！多折腾，说好的快速呢！？快速是要有对比的，我填了定义不明这个大坑，你按我说的操作，与我的慢折腾经历相比，你的折腾当然是快速。 诡辩？好吧说实话也算是谎言，不过是个善意的谎言，只为给你一种神奇的能量——Hope，这种谎言在生活中很常见，但我的缺少一个目的——钱。 附上我的custom.styl一定是先F12找到要自定义的元素，调试成自己喜欢的值，然后再复制到custom.styl，而不是直接复制我给出的，我给出的仅供参考。 请先找对元素，不然可能会制造出新bug，建议大家修改一个，就加个注释，方便以后调试修改。 [2017.12.03更新] 文件位置：~/blog/themes/next/source/css/_custom/custom.stylustom styles// 页面整体设置（字体颜色、行间距）body &#123; color: rgba(0, 0, 0, 0.95); line-height: 1.5;&#125;// 页面背景，CSS代码copy自https://chanshiyu.combody::before &#123; content: ''; position: fixed; width: 100%; height: 100%; top: 0; left: 0; will-change: transform; z-index: -1; background-image: url(https://背景图.png); background-repeat: no-repeat; background-position: top right; background-size: cover;&#125;// 页面留白更改.header-inner &#123; padding-top: 0px; padding-bottom: 0px;&#125;.posts-expand &#123; padding-top: 0px;&#125;.posts-expand .post-meta &#123; margin: 3px 0px 0px 0px;&#125;.post-button &#123; margin-top: 0px;&#125;.main &#123; padding-bottom: 125px;&#125;// 最顶部加载条.headband &#123; height: 1.5px; background-image: linear-gradient(90deg, #F79533 0%, #F37055 15%, #EF4E7B 30%, #A166AB 44%, #5073B8 58%, #1098AD 72%, #07B39B 86%, #6DBA82 100%);&#125;// 顶栏宽度.container .header-inner &#123; width: 100%;&#125;// 渐变菜带，CSS代码copy自https://githubuniverse.com.site-meta &#123; background-image: linear-gradient(90deg, #F79533 0%, #F37055 15%, #EF4E7B 30%, #A166AB 44%, #5073B8 58%, #1098AD 72%, #07B39B 86%, #6DBA82 100%);&#125;// 站点名背景.brand&#123; background-color: rgba(255, 255, 255, 0);&#125;// 站点名字体.site-title &#123; font-size: 70px; font-weight: bold; color: rgb(255, 255, 255); line-height: 80px;&#125;// 站点子标题.site-subtitle&#123; margin: 0px; font-size: 15px; color: rgb(255, 255, 255); border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: rgb(161, 102, 171); box-shadow: 0px 10px 10px 0px rgba(0, 0, 0, 0.15);&#125;// 菜单.menu &#123; text-align: center; margin-top: 0px; margin-bottom: 0px; padding: 10px; background-color: rgba(255, 255, 255, 0.75); box-shadow: 0px 10px 10px 0px rgba(0, 0, 0, 0.15);&#125;.site-nav &#123; position: relative;&#125;// 菜单超链接字体大小.menu .menu-item a &#123; font-size: 15px;&#125;// 菜单超链接样式.menu .menu-item a:hover &#123; border-bottom-color: rgba(161, 102, 171, 0);&#125;// 移动端左上角菜单按钮.site-nav-toggle &#123; top: 20px; left: 10px;&#125;.btn-bar &#123; background-color: rgb(255, 255, 255);&#125;// 移动端菜单@media (max-width: 767px) &#123; .menu &#123; text-align: center; &#125; .site-nav &#123; top: initial; background-color: rgba(255, 255, 255, 0.75); border-top: none; border-bottom: none; &#125;&#125;// 页面文章标题颜色.posts-expand .post-title-link &#123; color: rgb(0, 0, 0);&#125;// 文章标题字体大小.posts-expand .post-title &#123; font-size: 26px; color: rgb(255, 255, 255);&#125;// 文章标题动态效果.posts-expand .post-title-link::before &#123; background-image: linear-gradient(90deg, #a166ab 0%, #ef4e7b 25%, #f37055 50%, #ef4e7b 75%, #a166ab 100%);&#125;// 文章元数据（site-meta）字体.posts-expand .post-meta &#123; font-size: 11px; color: rgba(0, 0, 0, 0.5);&#125;// 文章的描述description.posts-expand .post-meta .post-description &#123; color: rgba(0, 0, 0, 0.75); font-style: italic;&#125;// 主页文章添加阴影效果.post &#123; margin-top: 50px; padding-top: 15px; padding-bottom: 15px; padding-right: 15px; padding-left: 15px; border-radius: 3px; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5); background-color: rgb(109, 186, 130);&#125;// 阅读更多按钮样式.post-button .btn &#123; color: rgb(0, 0, 0); background-color: rgba(255, 255, 255, 0.15); margin: 3px; border-radius: 3px; font-size: 15px; text-decoration: none; border: 1.5px solid rgb(80, 115, 184); box-shadow: inset 0px 0px 10px 0px rgba(0, 0, 0, 0.35);&#125;.post-button .btn:hover &#123; color: rgb(255, 255, 255); background-color: rgba(255, 255, 255, 0.15); margin: 3px; border-radius: 3px; font-size: 15px; text-decoration: none; border: 1.5px solid rgb(161, 102, 171); box-shadow: inset 0px 0px 10px 0px rgba(0, 0, 0, 0.35); background-image: linear-gradient(90deg, #a166ab 0%, #ef4e7b 25%, #f37055 50%, #ef4e7b 75%, #a166ab 100%);&#125;// 去除文章之间的分割线.posts-expand .post-eof &#123; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; background-color: rgba(255, 255, 255, 0);&#125;// 页面底部横线.pagination &#123; border: none; margin: 15px 0px;&#125;// 页面底部页码.pagination .page-number.current &#123; border-radius: 100%; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5); background-color: rgba(255, 255, 255, 0.35);&#125;.pagination .prev, .pagination .next, .pagination .page-number &#123; margin-bottom: 10px; border: none;&#125;// 页脚.footer &#123; background-color: rgba(255, 255, 255, 0.75); font-size: 15px; color: rgb(0, 0, 0); border-top-width: 3px; border-top-style: solid; border-top-color: rgb(161, 102, 171); padding-top: 0px; position: absolute; left: 0; bottom: 0; box-shadow: 0px -10px 10px 0px rgba(0, 0, 0, 0.15);&#125;// 超链接样式a &#123; color: rgb(80, 115, 184); border-bottom-color: rgb(80, 115, 184);&#125;a:hover &#123; color: rgb(161, 102, 171); border-bottom-color: rgb(161, 102, 171);&#125;// 引用样式blockquote &#123; padding-top: 3px; padding-right: 25px; padding-bottom: 3px; padding-left: 25px; color: rgba(0, 0, 0, 0.75); border-left: 5px solid rgb(0, 0, 0);&#125;// 分割线样式hr &#123; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; background-color: rgb(0, 0, 0); background-image: repeating-linear-gradient(-45deg, rgb(96, 125, 139), rgba(255, 255, 255, 0.5) 4px, transparent 4px, transparent 8px); height: 3px;&#125;// 表格样式table &#123; background-color: rgba(255, 255, 255, 0.9); color: rgba(0, 0, 0, 0.9); border: 1px solid rgba(221, 221, 221, 0.9);&#125;table&gt;tbody&gt;tr:nth-of-type(odd) &#123; background-color: rgba(249, 249, 249, 0.9);&#125;table&gt;tbody&gt;tr:hover &#123; background-color: rgba(245, 245, 245, 0.9);&#125;th, td &#123; border-bottom: 3px solid rgba(221, 221, 221, 0.9); border-right: 1px solid rgba(238, 238, 238, 0.9);&#125;// 文章首行缩进.post-body p &#123; text-indent: 2em;&#125;/*下面三个是修上面文章首行缩进的“bug”加不加取决于你用Markdown的两种不同列表的方式*/// “1.2.3.”这样的有序列表ol &#123; padding-left: 75px;&#125;/* “-”这样的无序列表ul &#123; padding-left: 75px;&#125;*/// 文章“-”无序列表的样式.posts-expand .post-body ul li &#123; list-style: outside; margin-left: 8px;&#125;// 文章内标题样式（左边的竖线）.post-body h2, h3, h4, h5, h6 &#123; border-left: 5px solid rgb(161, 102, 171); margin-left: -15px; padding-left: 10px;&#125;// 文章图片样式.posts-expand .post-body img &#123; border-radius: 3px; border: none; padding: 0px; box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);&#125;.post .post-body .group-picture img &#123; box-shadow: none;&#125;.post-gallery .post-gallery-img img &#123; box-shadow: none; border-radius: unset; padding: 3px;&#125;// 文章``代码块的自定义样式code &#123; color: rgba(255, 255, 255, 0.95); background-color: rgba(0, 0, 0, 0.5); margin: 1px 3px; padding: 1px 3px;&#125;// 文章```代码块样式.highlight .gutter pre &#123; color: #BDBDBD; background-color: #455A64;&#125;.highlight, .highlight .code pre, .highlight td &#123; background-color: #F0F4C3;&#125;// 文章```代码块顶部样式.highlight figcaption &#123; margin: 0.5em; color: #455A64;&#125;.highlight figcaption a &#123; color: rgb(80, 115, 184);&#125;// 文章```代码块diff样式pre .addition &#123; background: #4CAF50;&#125;pre .deletion &#123; background: #F44336;&#125;// 文章底部Copyright.post-copyright &#123; margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; background-color: rgba(255, 255, 255, 0.35);&#125;// 文章底部的tags.posts-expand .post-tags &#123; margin-top: 10px;&#125;.posts-expand .post-tags a &#123; border-bottom: none;&#125;// 评分rating.post-widgets &#123; padding-top: 0px; margin-top: 15px; margin-bottom: 30px; border-top: 1px solid rgba(0, 0, 0, 0.75);&#125;.wp_rating &#123; margin-right: 0px; padding-top: 10px;&#125;.post-nav &#123; border-top: 1px solid rgba(0, 0, 0, 0.75);&#125;// 文章底部页面跳转.post-nav-item a &#123; position: relative; display: block; line-height: 25px; color: rgb(80, 115, 184); font-weight: bold;&#125;.post-nav-item a:hover &#123; position: relative; display: block; line-height: 25px; color: rgb(161, 102, 171); font-weight: bold;&#125;// 底部评论.comments &#123; margin-top: 50px; margin-right: 20px; margin-bottom: 20px; margin-left: 20px; border-radius: 3px; background-color: rgb(96, 125, 139); box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.35);&#125;// 侧栏.sidebar &#123; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5); background-color: rgba(0, 0, 0, 0.75); border-top-left-radius: 5px; border-bottom-left-radius: 5px;&#125;// 移动端侧栏区域之外的透明度.sidebar-active #sidebar-dimmer &#123; opacity: 0;&#125;// 侧栏顶部文字.sidebar-nav li &#123; font-size: 15px; font-weight: bold; color: rgb(7, 179, 155);&#125;.sidebar-nav li:hover &#123; color: rgb(161, 102, 171);&#125;.sidebar-nav .sidebar-nav-active &#123; color: rgb(7, 179, 155); border-bottom-color: rgb(161, 102, 171); border-bottom-width: 1.5px;&#125;.sidebar-nav .sidebar-nav-active:hover &#123; color: rgb(7, 179, 155);&#125;// 侧栏头像（圆形以及旋转效果）.site-author-image &#123; border: 2px solid rgb(255, 255, 255); border-radius: 100%; transition: transform 1.0s ease-out;&#125;img:hover &#123; transform: rotateZ(360deg);&#125;.posts-expand .post-body img:hover &#123; transform: initial;&#125;// 侧栏站点作者名.site-author-name &#123; margin: 5px 0px; text-align: center; color: rgb(255, 255, 255); font-weight: bold; font-size: 35px;&#125;// 侧栏站点描述.site-description &#123; letter-spacing: 5px; font-size: 15px; color: rgb(243, 112, 85); font-weight: bold;&#125;// 侧栏站点文章、分类、标签.site-state &#123; margin-right: 3px;&#125;.site-state-item &#123; padding: 0px 15px; border-left: 1.5px solid rgb(161, 102, 171);&#125;// 侧栏RSS按钮样式.feed-link &#123; margin-right: 5px;&#125;.feed-link a &#123; color: rgb(255, 255, 255); border: 1px solid rgb(158, 158, 158) !important; border-radius: 15px;&#125;.feed-link a:hover &#123; background-color: rgb(161, 102, 171);&#125;.feed-link a i &#123; color: rgb(255, 255, 255);&#125;// 侧栏友链标题.links-of-blogroll-title &#123; color: rgba(7, 179, 155, 0.75); margin-right: 5px; font-size: 15px; font-weight: bold;&#125;// 侧栏超链接样式（友链的样式）.sidebar a &#123; color: #ccc; border-bottom: none;&#125;.sidebar a:hover &#123; color: rgb(255, 255, 255);&#125;// 侧栏目录链接样式.post-toc ol a &#123; color: rgb(7, 179, 155); border-bottom: 1px solid rgb(96, 125, 139);&#125;.post-toc ol a:hover &#123; color: rgb(161, 102, 171); border-bottom-color: rgb(161, 102, 171);&#125;// 侧栏目录链接样式之当前目录.post-toc .nav .active &gt; a &#123; color: rgb(161, 102, 171); border-bottom-color: rgb(161, 102, 171);&#125;.post-toc .nav .active &gt; a:hover &#123; color: rgb(161, 102, 171); border-bottom-color: rgb(161, 102, 171);&#125;/* 修侧栏目录bug，如果主题配置文件_config.yml的toc是wrap: true */.post-toc ol &#123; padding: 0px 10px 5px 10px;&#125;/* 侧栏目录默认全展开，已注释.post-toc .nav .nav-child &#123; display: block;&#125;*/// 右下角侧栏按钮样式.sidebar-toggle &#123; right: 10px; bottom: 43px; background-color: rgba(247, 149, 51, 0.75); border-radius: 5px; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.35);&#125;.page-post-detail .sidebar-toggle-line &#123; background: rgb(7, 179, 155);&#125;// 右下角返回顶部按钮样式.back-to-top &#123; right: 10px; padding-right: 5px; padding-left: 5px; padding-top: 2.5px; padding-bottom: 2.5px; background-color: rgba(247, 149, 51, 0.75); border-radius: 5px; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.35);&#125;.back-to-top.back-to-top-on &#123; bottom: 10px;&#125;// 修archives页面移动端菜单下拉的bug.posts-collapse &#123; z-index: initial;&#125;// archives页面顶部文字.page-archive .archive-page-counter &#123; color: rgb(255, 255, 255);&#125;// archives页面时间轴左边线条第一个圆点颜色.page-archive .posts-collapse .archive-move-on &#123; top: 10px; opacity: 1; background-color: rgb(255, 255, 255); box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);&#125;// 分类页面.category-all-page .category-all-title &#123; color: rgb(0, 0, 0);&#125;.category-all-page &#123; margin: 10px 50px; border-radius: 3px; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5); background-color: rgb(109, 186, 130); padding: 30px;&#125;@media (max-width: 767px) &#123; .category-all-page &#123; margin: 10px 10px; &#125;&#125;// 分类页面数字颜色.category-all-page .category-list-count &#123; color: rgb(0, 0, 0);&#125;// 标签云页面.tag-cloud-title &#123; color: rgb(0, 0, 0);&#125;.tag-cloud &#123; text-align: center; margin: 10px 50px; border-radius: 3px; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5); background-color: rgb(109, 186, 130); padding: 15px;&#125;@media (max-width: 767px) &#123; .tag-cloud &#123; margin: 10px 10px; &#125;&#125;// 时间轴样式.posts-collapse &#123; margin: 50px 0px;&#125;@media (max-width: 767px) &#123; .posts-collapse &#123; margin: 50px 20px; &#125;&#125;// 时间轴左边线条.posts-collapse::after &#123; margin-left: -2px; background-image: linear-gradient(180deg,#f79533 0,#f37055 15%,#ef4e7b 30%,#a166ab 44%,#5073b8 58%,#1098ad 72%,#07b39b 86%,#6dba82 100%);&#125;// 时间轴左边线条圆点颜色.posts-collapse .collection-title::before &#123; background-color: rgb(255, 255, 255);&#125;// 时间轴文章标题左边圆点颜色.posts-collapse .post-header::before &#123; background-color: rgb(255, 255, 255);&#125;.posts-collapse .post-header:hover::before &#123; background-color: rgb(161, 102, 171);&#125;// 时间轴年份.posts-collapse .collection-title h1, .posts-collapse .collection-title h2 &#123; color: rgb(255, 255, 255);&#125;// 时间轴文章标题.posts-collapse .post-title a &#123; color: rgb(80, 115, 184);&#125;.posts-collapse .post-title a:hover &#123; color: rgb(161, 102, 171);&#125;// 时间轴文章标题底部虚线.posts-collapse .post-header:hover &#123; border-bottom-color: rgb(161, 102, 171);&#125;// 本地搜索框.local-search-popup .search-icon, .local-search-popup .popup-btn-close &#123; color: rgb(247, 149, 51); margin-top: 7px;&#125;.local-search-popup .local-search-input-wrapper input &#123; padding: 9px 0px; height: 21px; background-color: rgb(255, 255, 255);&#125;.local-search-popup .popup-btn-close &#123; border-left: none;&#125;// 图标FontAwesome样式.fa &#123; display: inline;&#125;// 选中文字部分的样式::selection &#123; background-color: rgb(239, 78, 123); color: rgb(255, 255, 255);&#125;*::-moz-selection &#123; background-color: rgb(239, 78, 123); color: rgb(255, 255, 255);&#125;/* 设置滚动条的样式 *//* 参考https://segmentfault.com/a/1190000003708894 */::-webkit-scrollbar &#123; width: 5px; height: 5px;&#125;/* 滚动槽 */::-webkit-scrollbar-track &#123; background: #ccc;&#125;/* 滚动条滑块 */::-webkit-scrollbar-thumb &#123; border-radius: 5px; background-color: rgba(255, 255, 255, 0.9);&#125;::-webkit-scrollbar-thumb:hover &#123; background-color: rgb(247, 149, 51);&#125;// 音乐播放器aplayer.aplayer &#123; font-family: "Lato", "PingFang SC", "Microsoft YaHei", sans-serif !important; border-radius: 3px !important;&#125;.aplayer-withlrc.aplayer .aplayer-info &#123; background-color: rgb(255, 255, 255); color: rgba(0, 0, 0, 0.9);&#125;// 音乐播放器aplayer歌单.aplayer .aplayer-list ol &#123; background-color: rgb(255, 255, 255); color: rgba(0, 0, 0, 0.9);&#125;// 视频播放器dplayer.dplayer &#123; border-radius: 3px !important; box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12) !important;&#125;.dplayer.dplayer-fulled &#123; border-radius: initial !important;&#125;/*升级主题到5.1.3后已失效**只有在主题配置文件_config.yml**关闭motion才能解决// 修视频播放器dplayer网页全屏的bug.post.post-type-normal &#123; transform: inherit !important;&#125;*/// 自定义emoji样式img#github-emoji &#123; margin: 0px; padding: 0px; display: inline !important; vertical-align: text-bottom; border: none; cursor: text; box-shadow: none;&#125;// 文章超链接样式（为emoji特设）.post-body a &#123; color: rgb(80, 115, 184); border-bottom: none; text-decoration: underline;&#125;.post-body a:hover &#123; color: rgb(161, 102, 171); border-bottom: none; text-decoration: underline;&#125;// 标签云页面超链接样式（为emoji特设）.tag-cloud a &#123; color: rgb(80, 115, 184); border-bottom: 1px solid rgb(80, 115, 184); text-decoration: none;&#125;.tag-cloud a:hover &#123; color: rgb(161, 102, 171); border-bottom: 1px solid rgb(161, 102, 171); text-decoration: none;&#125;// 自定义文章元数据中categories的样式（为emoji特设）a.categories &#123; color: rgb(80, 115, 184); border-bottom: none; text-decoration: underline;&#125;a.categories:hover &#123; color: rgb(161, 102, 171); border-bottom: none; text-decoration: underline;&#125;// tabs标签（为emoji特设）.post-body .tabs ul.nav-tabs li.tab a &#123; text-decoration: none;&#125;// 自定义的侧栏时间样式#days &#123; display: block; color: rgb(7, 179, 155); font-size: 13px; margin-top: 15px;&#125;// 自定义的TopX页面样式#top &#123; display: block; text-align: center; margin: 10px 50px; border-radius: 3px; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5); background-color: rgb(109, 186, 130); padding: 30px;&#125;@media (max-width: 767px) &#123; #top &#123; margin: 10px 10px; &#125;&#125;// 自定义的页脚微信订阅号样式.weixin-box &#123; position: absolute; bottom: 43px; left: 10px; border-radius: 5px; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.35);&#125;.weixin-menu &#123; position: relative; height: 24px; width: 24px; cursor: pointer; background: url(https://微信的logo.svg); background-size: 24px 24px;&#125;.weixin-hover &#123; position: absolute; bottom: 0; left: 0; height: 0px; width: 0px; border-radius: 3px; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.35); background: url(https://二维码.svg); background-size: 150px 150px; transition: all 0.35s ease-in-out;&#125;.weixin-menu:hover .weixin-hover &#123; bottom: 24px; left: 24px; height: 150px; width: 150px; background: url(https://二维码.svg); background-size: 150px 150px;&#125;// 自定义页脚跳动的心样式@keyframes heartAnimate &#123; 0%,100%&#123;transform:scale(1);&#125; 10%,30%&#123;transform:scale(0.9);&#125; 20%,40%,60%,80%&#123;transform:scale(1.1);&#125; 50%,70%&#123;transform:scale(1.1);&#125;&#125;#heart &#123; animation: heartAnimate 1.33s ease-in-out infinite;&#125;.with-love &#123; color: rgb(255, 113, 168);&#125;// 自定义特别的样式h2.love &#123; border-left: none; color: rgb(255, 113, 168); -webkit-text-fill-color: unset;&#125;// 自定义文字背景色块span#inline-red &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #FF0000;&#125;span#inline-yellow &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #FFFF00;&#125;span#inline-blue &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #0000FF;&#125;span#inline-green &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #008000;&#125;span#inline-cyan &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #00FFFF;&#125;span#inline-orange &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #FFA500;&#125;span#inline-purple &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #800080;&#125;span#inline-gray &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #808080;&#125;span#inline-white &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #FFFFFF;&#125;span#inline-brown &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #A52A2A;&#125;span#inline-pink &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #FFC0CB;&#125;// 自定义文字引用边框p#border-left-red &#123; color: #FF0000; background-color: rgb(255, 255, 255); padding: 10px; border: 1px solid #ccc; border-left-width: 5px; border-radius: 3px; border-left-color: #FF0000; text-indent: 0em;&#125;p#border-right-red &#123; color: #FF0000; background-color: rgb(255, 255, 255); padding: 10px; border: 1px solid #ccc; border-right-width: 5px; border-radius: 3px; border-right-color: #FF0000; text-indent: 0em;&#125;p#border-top-red &#123; color: #FF0000; background-color: rgb(255, 255, 255); padding: 10px; border: 1px solid #ccc; border-top-width: 5px; border-radius: 3px; border-top-color: #FF0000; text-indent: 0em;&#125;p#border-bottom-red &#123; color: #FF0000; background-color: rgb(255, 255, 255); padding: 10px; border: 1px solid #ccc; border-bottom-width: 5px; border-radius: 3px; border-bottom-color: #FF0000; text-indent: 0em;&#125;// 自定义的引用样式blockquote.question &#123; color: rgba(0, 0, 0, 0.75); padding-left: 25px; border-left: 5px solid rgb(16, 152, 173); background-color: rgba(255, 255, 255, 0.75); border-top-right-radius: 3px; border-bottom-right-radius: 3px;&#125;// 自定义的下载框a#download &#123; padding: 3px 10px; margin: 3px; color: #ffffff; background-color: #000000; border: 2px solid #ffffff; border-radius: 3px; transition: all 0.5s ease; font-weight: bold; text-decoration: none;&#125;a#download:hover &#123; background: #ffffff; color: #000000;&#125;// 自定义的数字块span#inline-toc &#123; display: inline-block; border-radius: 80% 100% 90% 20%; background-color: #ffffff; color: #000000; padding: 0.05em 0.4em; margin: 2px 5px 2px 0px; text-indent: 0em;&#125;// 默认按钮bug.btn &#123; cursor: pointer;&#125;// 自定义ABOUT页面的样式h2.about &#123; background-image: linear-gradient(90deg, #a166ab 0%, #a166ab 40%, #ef4e7b 45%, #f37055 50%, #ef4e7b 55%, #a166ab 60%, #a166ab 100%); background-size: cover; -webkit-background-clip: text; -webkit-text-fill-color: transparent;&#125;// 自定义的文章摘要图片样式img.img-topic &#123; width: 100%;&#125;// 自定义的文章置顶样式.post-sticky-flag &#123; font-size: inherit; float: left; color: rgb(255, 255, 255); cursor: help;&#125;.post-sticky-flag:hover &#123; color: rgb(0, 0, 0);&#125; 修改字体优化了这么多，但还有一个最影响博客形象和阅读体验的项没有优化，瓦特？字体！ 文章字体大小可以编辑： 文件位置：～blog/themes/next/source/css/_variables/base.styl12$font-size-base = 15px/* 我写15是单纯是因为：我喜欢5这个数字 */ 如果你是一个和我一样对字体一脸懵逼的人，推荐阅读： 1.Web中文字体排版指南 2.Web字体的选择和运用 3.如何优雅的选择默认字体(font-family) 4.中文字体网页开发指南 5.在Web内容中使用系统字体 首先对于汉字来说，因为其字体库太大，通常都是调用本地中文字体库。而不同设备有不同默认中文字体和中文字体库，想要尽可能在不同设备上有较好的显示效果，就要在调用不同设备的本地字体库中显示效果较好的中文字体。 中文字体的设置一般无需更改，NexT主题默认的已经够了，如果你想自定义，编辑上面所说的base.styl即可。 注意：要想NexT主题的简体中文字体配置生效，站点配置文件中的language必须为zh-Hans。 然后对于英文字体，因为其字体库很小，所以想要个性化就简单多了。首先编辑主题配置文件，可以查看一下NexT官方文档。 字体自己选，下面附上我的供大家参考： 文件位置：~/blog/themes/next/_config.yml1234567891011121314151617181920212223242526272829303132333435363738font: enable: true # Uri of fonts host. E.g. //fonts.googleapis.com (Default) # 亲测这个可用，如果不可用，自己搜索[Google字体 国内镜像]，找个能用的就行 host: https://fonts.cat.net # Global font settings used on &lt;body&gt; element. global: # external: true will load this font family from host. external: true family: Lato # Font settings for Headlines (h1, h2, h3, h4, h5, h6) # Fallback to `global` font settings. headings: external: true family: # Font settings for posts # Fallback to `global` font settings. posts: external: true family: # Font settings for Logo # Fallback to `global` font settings. # The `size` option use `px` as unit logo: external: true family: Lato size: # Font settings for &lt;code&gt; and code blocks. codes: external: true family: "Source Code Pro" size: 进阶 高级功能配置这些功能的配置，大部分都要修改NexT主题的一些文件，所以git pull升级主题的时候，会比较麻烦，解决方法见本文2.3节。 大佬的文章更多如外挂一样的功能配置，就直接贴大佬的文章了，哪些功能自己喜欢，按照大佬的教程来配置就行。不过也有坑，比如有些功能（超链接样式、侧栏头像圆形并旋转）可以直接通过在custom.styl添加CSS代码实现，无需更改其它文件。 1.hexo高阶教程next主题优化之加入网易云音乐、网易云跟帖、动态背景、自定义主题、统计功能（内有NexT主题的文件目录注释，这对自己自定义博客有很大帮助） 2.hexo的next主题个性化教程:打造炫酷网站 3.Hexo搭建博客的个性化设置 tip：大佬的博客可不仅仅有一篇文章，多在上面逗留会，也许会有甜品。 更改上一篇，下一篇的顺序进入一篇文章，在文章底部，有上下篇的链接（&lt; &gt;），但是点 &gt; 发现进入的是页面中的的上面那篇文章，与操作习惯不符，别扭。 我猜这是从时间角度设计的，&gt; 英语叫next ，而next是更新的。不过别扭就改成习惯的好了，从空间位置角度设计。1 方法就是修改文件： 文件位置：~/blog/themes/next/layout/_macro/post.swig123456789101112131415161718192021222324252627&#123;% if not is_index and (post.prev or post.next) %&#125; &lt;div class="post-nav"&gt; &lt;div class="post-nav-next post-nav-item"&gt;- &#123;% if post.next %&#125;+ &#123;% if post.prev %&#125;- &lt;a href="&#123;&#123; url_for(post.next.path) &#125;&#125;" rel="next" title="&#123;&#123; post.next.title &#125;&#125;"&gt;+ &lt;a href="&#123;&#123; url_for(post.prev.path) &#125;&#125;" rel="prev" title="&#123;&#123; post.prev.title &#125;&#125;"&gt;- &lt;i class="fa fa-chevron-left"&gt;&lt;/i&gt; &#123;&#123; post.next.title &#125;&#125;+ &lt;i class="fa fa-chevron-left"&gt;&lt;/i&gt; &#123;&#123; post.prev.title &#125;&#125; &lt;/a&gt; &#123;% endif %&#125; &lt;/div&gt; &lt;span class="post-nav-divider"&gt;&lt;/span&gt; &lt;div class="post-nav-prev post-nav-item"&gt;- &#123;% if post.prev %&#125;+ &#123;% if post.next %&#125;- &lt;a href="&#123;&#123; url_for(post.prev.path) &#125;&#125;" rel="prev" title="&#123;&#123; post.prev.title &#125;&#125;"&gt;+ &lt;a href="&#123;&#123; url_for(post.next.path) &#125;&#125;" rel="next" title="&#123;&#123; post.next.title &#125;&#125;"&gt;- &#123;&#123; post.prev.title &#125;&#125; &lt;i class="fa fa-chevron-right"&gt;&lt;/i&gt;+ &#123;&#123; post.next.title &#125;&#125; &lt;i class="fa fa-chevron-right"&gt;&lt;/i&gt; &lt;/a&gt; &#123;% endif %&#125; &lt;/div&gt; &lt;/div&gt;&#123;% endif %&#125; 自己改单词请注意：是prev不是perv，之前自己搞错了，然后盯着电脑屏幕尴尬半天，不停想特么老子哪里错了，怎么特么就是达不到效果！？？？ 移动端显示back-to-top按钮和侧栏[2017.07.22更新] 今天更新一下NexT主题，发现已经添加这功能，可以直接在主题配置文件中配置： 12# Enable sidebar on narrow viewonmobile: true 如果你发现你的主题配置文件_config.yml中没有这段内容，可以尝试按本文2.3节的方法更新主题，或者按下面的方法。 [原方法] 个人感觉在移动端显示侧栏，有利于阅读，我的博客已经改了，你可以将浏览器窗口宽度缩小试试。还好Google到了一篇大佬的博客，想改的点击查看吧。 提示：最好还是更新主题，因为这样在移动端点击侧栏之外，侧栏会自动弹回，而按照上面的链接中的文章更改则无法实现。 博客推广及谷歌搜索优化（必读）想自己写的文章被别人看到？希望得到别人的评论肯定？渴望用自己写的文章照亮他人，给整个文明光能？那么这个就不可或缺了。你能看到这篇文章，很大程度上也是因为这个。 博客推广博客推广第一步，手动推广。 你可以多浏览别人的博客并留下你的爪印（博客地址），比如评论本文；你可以去README.md中提到的这个issue留下你的爪印；你可以去Issues页面试着回答下大家的问题并留下你的爪印。 博客推广第二步，SEO（Search Engine Optimization）。 搜索引擎搜索引擎是互联网上寻找资源的重要手段，而要让别人能够在搜索结果中看到自己的博客文章链接，就必须让搜索引擎收录，怎么操作呢？ 直接参考这篇文章，学会使用站长工具抓取自己的网页，然后请求搜索引擎收录。博主也是刚接触不久，不太懂，但推荐提交次数尽量多，而且每天尽量都提交一次。 我没有弄百度的，只弄了Google的，但是前几天百度hexo next 优化（其它关键字没试），发现第一页就有自己文章，而且文章图片也在上面，很显眼，让我非常惊喜！ 看到链接是segmentfault的，恍然大悟，原来是评论里的大佬推荐的，不仅帮我把此文推到了掘金，还有segmentfault，在此再次感谢大佬！这也给了一个启示，除了直接向搜索引擎提交自己的链接，还可以通过这种途径优化博客的SEO。 间接影响另外，SEO固然重要，但不要小看另一种影响，相比搜索引擎，这种可以称之为间接影响。 这篇文章是一篇技术性的文章，而技术人员经常会用Google，所以对这篇文章的浏览量，搜索引擎的功劳较大。但是，如果是其他的文章，比如一首诗，那么直接通过Google访问的读者几乎没有，那读者哪来？从其它文章上的读者“流”过来的。因为读者浏览着的不是一篇文章，而是一个博客。 而想让博客上的几乎不可能被Google的一首诗被浏览，就要这样间接拉读者了，可以称之“引流”。首先对博客上的每篇文章来说，肯定是读者花在自己博客的时间越长，被读到的可能性越大。这就意味着你要尽可能把用户留在自己的博客上，怎么留？ 博客要装饰好 文章质量要高 读者的第二印象是博客的界面，如果界面够特别，也许马上就被加入了书签。第三印象是文章内容，这其实更加重要，如果文章质量很高，那么读者肯定不会让这么好的一篇文章消失在自己的记忆中，即使界面不咋地。第一印象？加载速度，试想点开半天还是空白，那么肯定马上关了。 如果做到上面三点，那么就算好不容易“骗”到一个Google浏览量，但是这个读者马上被博客和文章惊呆了，看完文章后，这读者心里美滋滋，认为这么好的文章（博客）必须分享啊（如上面的大佬推荐），于是可能马上来了一大批满怀期待的读者，然后这批读者又……这时文章的读者数（博客的访问量）就不是简单的加法了～ 知识平台直接或间接因为Google这样的搜索引擎而来的读者，绝大部分都是技术人员，而他们只希望尽快解决自己的技术问题，这也是他们的目的，这就意味着博客上的一首诗还是很难被欣赏。 而要想照亮他人，他人必须要能懂自己的文章，这样也才可能有更强的交互——评论。所以为了不浪费自己的光能，能把自己的光能完完整整的贡献给文明，那就必须也让一首诗也有评论，怎么做呢？让读者的类型多样化，不限于技术人员。 还好现在大部分读者也不用搜索引擎了，谁在吞食搜索引擎的用户？移动端。智能手机的迅速普及导致搜索引擎已经不是人们获取知识的主要途径，大部分人已经将手机APP上的知识平台作为自己获取知识的主要途径，比如：知乎、简书、微信订阅号……所以，你还可以将自己的文章发布在这些知识平台上的相应分类上，然后留个博客链接，吸引更多类型的读者。 谷歌分析你怎么知道自己推广的效果？你怎么知道有没有人看了自己的博客？哪篇文章最受欢迎？此时有没有人正浏览着自己的博客？自己的文章有没有被引用？这时最常用的就是强大免费的Google Analytics，推荐博客建好后，就立即使用。 如何使用？请务必自备梯子查看Google官方的教程，开始使用后一定要按照里面的设置，先添加多份view（数据视图）。 ATTENTION 虽然有个复制view选项，但由Google Analytics（分析）帮助中的具体复制内容再加上我的实践，发现（用我这个外行人的话来说）：复制view时只会复制它的相关配置，不会复制数据！所以请使用后立即按照官方教程中的方式添加view！ 博客刚起步，博客的大部分访客都是自己，所以必须添加一个filter（过滤器），过滤掉自己的访问（比如过滤IP）。 ATTENTION 由Google Analytics（分析）的工作原理可知，filter是在数据处理时生效的（如上图），也就是说添加filter后只能过滤添加它之后的数据，而无法过滤添加它之前的数据（处理后），而view是利用处理后的数据生成的，所以要想去除自己访问的影响（在view中看不到自己的访问），请添加view之后就立即添加filter！ 某一category和tag的页面年份分割在Archives页面，有年份分割，而某一category和tag的页面却没有。怎么办呢？修改两个文件，加代码即可。 category的修改文件位置：~/blog/themes/next/layout/category.swig。 1.加到哪？要加两个位置： 文件位置：~/blog/themes/next/layout/category.swig12345678910 &#123;% for post in page.posts %&#125; 位置A &#123;&#123; post_template.render(post) &#125;&#125; &#123;% endfor %&#125;...（省略好多行）..位置B（没错最后面） 2.加什么？绿色的自己看着加： 文件位置：~/blog/themes/next/layout/category.swig我不要 + 号！12345678910111213141516171819202122232425262728 &#123;% for post in page.posts %&#125;++ &#123;# Show year #&#125;+ &#123;% set year %&#125;+ &#123;% set post.year = date(post.date, 'YYYY') %&#125;++ &#123;% if post.year !== year %&#125;+ &#123;% set year = post.year %&#125;+ &lt;div class="collection-title"&gt;+ &lt;h2 class="archive-year motion-element" id="archive-year-&#123;&#123; year &#125;&#125;"&gt;&#123;&#123; year &#125;&#125;&lt;/h2&gt;+ &lt;/div&gt;+ &#123;% endif %&#125;+ &#123;# endshow #&#125;+ &#123;&#123; post_template.render(post) &#125;&#125; &#123;% endfor %&#125;...（省略好多行）..+&#123;% block script_extra %&#125;+ &#123;% if theme.use_motion %&#125;+ &lt;script type="text/javascript" id="motion.page.archive"&gt;+ $('.archive-year').velocity('transition.slideLeftIn');+ &lt;/script&gt;+ &#123;% endif %&#125;+&#123;% endblock %&#125; tag的修改文件位置：~/blog/themes/next/layout/tag.swig，与的category修改完全一样。 说明两段代码直接Copy同目录下的archive.swig文件里面的，而且tag.swig和category.swig好像都预留了位置似的，不知道写代码的大佬怎么想的=_=!。 代码小白的我折腾了半天，才改好。 文章底部加上评分小星星淘宝买东西，作为消费者的我们，看评价很重要。现在作为博主，写了一篇文章，很期待读者的反馈。而与淘宝一样，确认收货后，相比评论，更愿意五星好评。那么博客文章怎么加上呢？ 首先打开主题配置文件： 文件位置：~/blog/themes/next/_config.yml123456# Star rating support to each article.# To get your ID visit https://widgetpack.comrating: enable: true id: color: f79533 先去注释中的网站，首页点Rating，然后注册个帐号，填一下自己博客的信息，左上角有个ID，填进主题配置文件中就行，color改成自己喜欢的即可。另： 可以配置评分方式，侧栏 &gt; Rating &gt; Setting，建议用IP address或Device(cookie)，免登录，毕竟Socials里面的选项几乎都被墙，不适合国内网络环境。 建议侧栏 &gt; Site &gt; Setting中勾选Private选项。 上面两步勾选后别忘了点击页面右下方的SAVE SETTING绿色按钮保存。 如果感觉上下留白太多，咋整？浏览器F12找元素，调成自己喜欢的值，然后Copy到custom.styl即可： 文件位置：~/blog/themes/next/source/css/_custom/custom.styl12345678910// 评分rating.post-widgets &#123; padding-top: 0px; margin-top: 15px; margin-bottom: 30px;&#125;.wp_rating &#123; margin-right: 0px; padding-top: 10px;&#125; 经过上面的配置，默认最下面只会显示5颗小星星，简洁但不明了。怎么加上文字说明呢？ 首先打开文件： 文件位置：~/blog/themes/next/layout/_macro/post.swig123456 &#123;% if theme.rating.enable %&#125; &lt;div class="wp_rating"&gt;+ &lt;div style="color: rgba(0, 0, 0, 0.75); font-size:13px; letter-spacing:3px"&gt;看完记得五星好评哦亲～&lt;/div&gt; &lt;div id="wpac-rating"&gt;&lt;/div&gt; &lt;/div&gt; &#123;% endif %&#125; 然后Ctrl + F搜索rating，找到这段，对比我给出的，在绿色这行所示的位置，加上自己想要的说明和样式即可。 最后，记得点这里给我 好评哦亲～ 侧栏加入已运行的时间我们都有自己的生日，都知道自己的岁数，那为什么不给博客加上，让读者知道博客的年纪呢？操作很简单，而且不是精确到年而是精确到秒，233333～ 首先要加入下面代码：2 文件位置：~/blog/themes/next/layout/_custom/sidebar.swig123456789101112131415161718192021222324252627&lt;div id="days"&gt;&lt;/div&gt;&lt;/script&gt;&lt;script language="javascript"&gt;function show_date_time()&#123;window.setTimeout("show_date_time()", 1000);BirthDay=new Date("05/27/2017 15:00:00");today=new Date();timeold=(today.getTime()-BirthDay.getTime());sectimeold=timeold/1000secondsold=Math.floor(sectimeold);msPerDay=24*60*60*1000e_daysold=timeold/msPerDaydaysold=Math.floor(e_daysold);e_hrsold=(e_daysold-daysold)*24;hrsold=setzero(Math.floor(e_hrsold));e_minsold=(e_hrsold-hrsold)*60;minsold=setzero(Math.floor((e_hrsold-hrsold)*60));seconds=setzero(Math.floor((e_minsold-minsold)*60));document.getElementById('days').innerHTML="已运行"+daysold+"天"+hrsold+"小时"+minsold+"分"+seconds+"秒";&#125;function setzero(i)&#123;if (i&lt;10)&#123;i="0" + i&#125;;return i;&#125;show_date_time();&lt;/script&gt; 上面Date的值记得改为你自己的，且按上面格式，然后修改： 文件位置：~/blog/themes/next/layout/_macro/sidebar.swig1234567891011121314151617181920 &#123;# Blogroll #&#125; &#123;% if theme.links %&#125; &lt;div class="links-of-blogroll motion-element &#123;&#123; "links-of-blogroll-" + theme.links_layout | default('inline') &#125;&#125;"&gt; &lt;div class="links-of-blogroll-title"&gt; &lt;i class="fa fa-fw fa-&#123;&#123; theme.links_icon | default('globe') | lower &#125;&#125;"&gt;&lt;/i&gt; &#123;&#123; theme.links_title &#125;&#125;&amp;nbsp; &lt;i class="fa fa-fw fa-&#123;&#123; theme.links_icon | default('globe') | lower &#125;&#125;"&gt;&lt;/i&gt; &lt;/div&gt; &lt;ul class="links-of-blogroll-list"&gt; &#123;% for name, link in theme.links %&#125; &lt;li class="links-of-blogroll-item"&gt; &lt;a href="&#123;&#123; link &#125;&#125;" title="&#123;&#123; name &#125;&#125;" target="_blank"&gt;&#123;&#123; name &#125;&#125;&lt;/a&gt; &lt;/li&gt; &#123;% endfor %&#125; &lt;/ul&gt;+ &#123;% include '../_custom/sidebar.swig' %&#125; &lt;/div&gt; &#123;% endif %&#125;- &#123;% include '../_custom/sidebar.swig' %&#125; 这样就可以了！当然，要是不喜欢颜色，感觉不好看，就可以在上文所提的custom.styl加入： 文件位置：~/blog/themes/next/source/css/_custom/custom.styl1234567// 自定义的侧栏时间样式#days &#123; display: block; color: rgb(7, 179, 155); font-size: 13px; margin-top: 15px;&#125; 里面的值F12调成自己喜欢的，然后更改即可。要是不想放在侧栏，想放在页脚，自己应该能折腾吧～ 添加TopX页面博客已有的分类，如categories和tags，都是基于博主的，那么有没有一种分类是基于读者的呢？有，一种是搜索，另一种就是这里的文章阅读量排行榜。 前提是在主题配置文件中开启了leancloud_visitors，开启方法见本文3.3节中我的主题配置文件中的教程链接。 首先新建页面： 所在目录：~/blog/1hexo new page &quot;top&quot; 然后在主题配置文件中加上菜单top和它的icon： 文件位置：~/blog/themes/next/_config.yml12menu: top: /top/ || signal 接着在语言翻译文件中加上菜单top： 注意：如果你的站点配置文件中的languages写的不是zh-Hans，那么这里请更改相应语言配置文件 文件位置：~/blog/themes/next/languages/zh_Hans.yml1234567891011menu: home: 首页 archives: 归档 categories: 分类 tags: 标签 about: 关于 search: 搜索 schedule: 日程表 sitemap: 站点地图 commonweal: 公益404 top: TopX /* 可以不为TopX，随便取 */ 最后，编辑第一步新建页面生成的文件：3 文件位置：~/blog/source/top/index.md1234567891011121314151617181920212223242526272829---title: TopX /* 可以不为TopX，随便取 */comments: falsekeywords: top,文章阅读量排行榜---&lt;div id="top"&gt;&lt;/div&gt;&lt;script src="https://cdn1.lncld.net/static/js/av-core-mini-0.6.4.js"&gt;&lt;/script&gt;&lt;script&gt;AV.initialize("app_id", "app_key");&lt;/script&gt;&lt;script type="text/javascript"&gt; var time=0 var title="" var url="" var query = new AV.Query('Counter'); query.notEqualTo('id',0); query.descending('time'); query.limit(1000); query.find().then(function (todo) &#123; for (var i=0;i&lt;1000;i++)&#123; var result=todo[i].attributes; time=result.time; title=result.title; url=result.url; var content="&lt;a href='"+"https://reuixiy.github.io"+url+"'&gt;"+title+"&lt;/a&gt;"+"&lt;br&gt;"+"&lt;font color='#fff'&gt;"+"阅读次数："+time+"&lt;/font&gt;"+"&lt;br&gt;&lt;br&gt;"; document.getElementById("top").innerHTML+=content &#125; &#125;, function (error) &#123; console.log("error"); &#125;);&lt;/script&gt; 必须将里面的里面的app_id和app_key替换为你的主题配置文件中的值，1000是显示文章的数量，其它可以自己看情况更改。 最后，修改样式可以在custom.styl中加入自定义代码： 文件位置：~/blog/themes/next/source/css/_custom/custom.styl123456789101112131415// 自定义的TopX页面样式#top &#123; display: block; text-align: center; margin: 10px 50px; border-radius: 3px; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5); background-color: rgb(109, 186, 130); padding: 30px;&#125;@media (max-width: 767px) &#123; #top &#123; margin: 10px 10px; &#125;&#125; Okay! 完成了！不过还有几点需要注意： 如果你在设置 &gt; 安全中心中，设置了Web安全域名，但没有将http://localhost:4000加入，那么本地调试将看不到，可以先将之加入，调试完后删除。 如果你发现文章标题显示不对，这是由于之前你更改过文章标题导致的，在存储 &gt; Counter更改title即可。 另外，应该也可以按类似的方式，利用JS代码，将评分（rating）高/多的文章，评论（HyperComments）多的文章，也加入这个页面，不过现在博客的阅读量还不多，我暂时没折腾（其实也不太会）。如果你实现了，麻烦告诉我哦～ 利用gulp压缩代码右键查看网页源代码发现有大量留白，咋整？利用gulp。 首先任意目录全局安装：4 1npm install gulp -g 然后到站点文件夹根目录： 所在目录：~/blog/1npm install gulp gulp-minify-css gulp-htmlmin gulp-htmlclean --save 接着在站点文件夹根目录新建gulpfile.js： 文件位置：~/blog/gulpfile.js123456789101112131415161718192021222324var gulp = require('gulp');var minifycss = require('gulp-minify-css');var htmlmin = require('gulp-htmlmin');var htmlclean = require('gulp-htmlclean');// 压缩 public 目录 cssgulp.task('minify-css', function() &#123; return gulp.src('./public/**/*.css') .pipe(minifycss()) .pipe(gulp.dest('./public'));&#125;);// 压缩 public 目录 htmlgulp.task('minify-html', function() &#123; return gulp.src('./public/**/*.html') .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, &#125;)) .pipe(gulp.dest('./public'))&#125;);// 执行 gulp 命令时执行的任务gulp.task('default', ['minify-html', 'minify-css']); 最后部署到Github Pages上查看效果： 所在目录：~/blog/1234567hexo cleanhexo ggulphexo d 我没有压缩JavaScript，因为我发现会报错，实际也并不需要，因为大部分JavaScript都已压缩过。 这里的这段代码执行gulp后不支持hexo s本地调试，且必须deploy到Github Pages上才能查看到效果，记得在哪看过有人有解决方法，需要的自己Google。 另外，可能会产生一些奇怪的bugs，没看到最好，要是看到了的话就自己解决吧～[逃……] 让页脚的心跳动起来世界上有一种伟大的力量，它的名字无人不晓，就是……爱～ 更新NexT主题后，发现默认的icon变成了 （user），不过这可阻挡不了爱的力量！ 效果，首先编辑主题配置文件： 文件位置：~/blog/themes/next/_config.yml123footer:- icon: user+ icon: heart 然后编辑： 文件位置：~/blog/themes/next/layout/_partials/footer.swig12- &lt;span class="with-love"&gt;+ &lt;span class="with-love" id="heart"&gt; 接着编辑custom.styl，加入： 文件位置：~/blog/themes/next/source/css/_custom/custom.styl12345678910111213// 自定义页脚跳动的心样式@keyframes heartAnimate &#123; 0%,100%&#123;transform:scale(1);&#125; 10%,30%&#123;transform:scale(0.9);&#125; 20%,40%,60%,80%&#123;transform:scale(1.1);&#125; 50%,70%&#123;transform:scale(1.1);&#125;&#125;#heart &#123; animation: heartAnimate 1.33s ease-in-out infinite;&#125;.with-love &#123; color: rgb(255, 113, 168);&#125; color的值可以改成你自己喜欢的，灵感来自DIYgod大佬的博客，CSS代码参考这篇文章。 页脚加上微信二维码主题默认的微信订阅个人感觉不美观，看到很多网站都是在页脚有个微信的logo，然后鼠标移动到上面便会显示二维码，这样感觉很棒。 首先编辑文件，在文件最后加上下面代码： 文件位置：~/blog/themes/next/layout/_partials/footer.swig12345&lt;div class="weixin-box"&gt; &lt;div class="weixin-menu"&gt; &lt;div class="weixin-hover"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 然后编辑custom.styl，加入： 文件位置：~/blog/themes/next/source/css/_custom/custom.styl123456789101112131415161718192021222324252627282930313233343536// 自定义的页脚微信订阅号样式.weixin-box &#123; position: absolute; bottom: 43px; left: 10px; border-radius: 5px; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.35);&#125;.weixin-menu &#123; position: relative; height: 24px; width: 24px; cursor: pointer; background: url(https://微信的logo.svg); background-size: 24px 24px;&#125;.weixin-hover &#123; position: absolute; bottom: 0; left: 0; height: 0px; width: 0px; border-radius: 3px; box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.35); background: url(https://二维码.svg); background-size: 150px 150px; transition: all 0.35s ease-in-out;&#125;.weixin-menu:hover .weixin-hover &#123; bottom: 24px; left: 24px; height: 150px; width: 150px; background: url(https://二维码.svg); background-size: 150px 150px;&#125; 图片务必用矢量图svg格式，否则手机上显示效果很差，其它的自己看情况更改。 微信logo的图片我准备好了，点击下载wechat.svg(1.6 KB)。二维码怎么弄成svg格式呢，安利个网站，下载svg格式的就行。 改好后效果超赞有木有？我参考了这个代码。 更改标签云（tagcloud）的颜色如果你和我一样个性化了博客的整体布局颜色，那么默认的标签云页面可能看起来很丑，怎么更改？ 修改下文件： 文件位置：~/blog/themes/next/layout/page.swig1&#123;&#123; tagcloud(&#123;min_font: 13, max_font: 31, amount: 1000, color: true, start_color: &apos;#9733EE&apos;, end_color: &apos;#FF512F&apos;&#125;) &#125;&#125; 修改对应参数值即可，参数说明见Hexo官方文档，颜色可以参考这个网站，自己去纠结…… 点击侧栏头像回到博客首页不知道为什么，我看到侧栏头像的第一反应是点击，然后心理预期会跳到博客首页，可惜也仅是预期，那么开始动手吧～ 首先要在主题配置文件中配置好侧栏头像，比如我把头像avatar.gif放到了~/blog/source/avatar.gif，则： 文件位置：~/blog/themes/next/_config.yml12345# Sidebar Avatar# in theme directory(source/images): /images/avatar.gif# in site directory(source/uploads): /uploads/avatar.gif-#avatar: /images/avatar.gif+avatar: /uploads/avatar.gif 然后编辑文件： 文件位置：~/blog/themes/next/layout/_macro/sidebar.swig12345+ &lt;a href="/" class="site-author-image" rel="start" style="border:none"&gt; &lt;img class="site-author-image" itemprop="image" src="&#123;&#123; url_for( theme.avatar | default(theme.images + '/avatar.gif') ) &#125;&#125;" alt="&#123;&#123; theme.author &#125;&#125;" /&gt;+ &lt;/a&gt; 最后就OK了～ 文章摘要图片俗话说：“图文并茂”，现实中用笔书写文章实现起来比较困难，但在博客上可以很轻松实现。 首先，文章摘要（excerpt）是指每篇文章在页面（page）上显示的那部分内容，也就是[Read More]之前的文章内容。由于它会展示在页面，因此在每篇文章的文章摘要中加一张图片，页面看起来就很美观。 但是有时候可能会出现一个问题：你想从文章中选一张图片作为文章摘要图片，而这张图片由于写作要求，必须添加在文章的末尾，这样点[Read More]查看文章时，这张图片就会重复出现了。咋办？ 首先加代码： 文件位置：~/blog/themes/next/layout/_macro/post.swig1234567891011121314151617181920212223242526 &#123;% if is_index %&#125; &#123;% if post.description and theme.excerpt_description %&#125; &#123;&#123; post.description &#125;&#125; &lt;!--noindex--&gt; &lt;div class="post-button text-center"&gt; &lt;a class="btn" href="&#123;&#123; url_for(post.path) &#125;&#125;"&gt; &#123;&#123; __('post.read_more') &#125;&#125; &amp;raquo; &lt;/a&gt; &lt;/div&gt; &lt;!--/noindex--&gt; &#123;% elif post.excerpt %&#125; &#123;&#123; post.excerpt &#125;&#125;+ + &#123;% if post.image %&#125;+ &lt;div class="out-img-topic"&gt;+ &lt;img src=&#123;&#123; post.image &#125;&#125; class="img-topic" /&gt;+ &lt;/div&gt;+ &#123;% endif %&#125;+ &lt;!--noindex--&gt; &lt;div class="post-button text-center"&gt; &lt;a class="btn" href="&#123;&#123; url_for(post.path) &#125;&#125;&#123;% if theme.scroll_to_more %&#125;#&#123;&#123; __('post.more') &#125;&#125;&#123;% endif %&#125;" rel="contents"&gt; &#123;&#123; __('post.read_more') &#125;&#125; &amp;raquo; &lt;/a&gt; &lt;/div&gt; &lt;!--/noindex--&gt; 为了防止有的图片宽度不够导致风格不够统一，页面不美观，需要在custom.styl中加入： 文件位置：~/blog/themes/next/source/css/_custom/custom.styl1234// 自定义的文章摘要图片样式img.img-topic &#123; width: 100%;&#125; 最后编辑有这需求的相关文章时，在Front-matter（文件最上方以---分隔的区域）加上一行： 1image: url url即图片的链接地址，效果可以见博客首页置顶文章bb-for-fun。 参考： issue：https://github.com/iissnan/hexo-theme-next/issues/1190 文章：http://wellliu.com/2016/12/30/【转】Blog摘要配图/ 文章置顶由于博客的首页可能是被浏览最多的页面，所以首页的前几篇文章被阅读的可能性比较大。可以利用这个特点，通过将自己认为重要的文章放在首页，从而让重要的文章被阅读的可能性增大。 但是，默认的排序只有一个维度——时间，两种选择——正序和倒序，这就造成自己的得意之作被“埋没”了，怎么办呢，如何实现文章的置顶？ NexT主题以前有过这个功能，然而由于一些bugs（issue）被去掉了。不过在这个丰富的issue中，我自己摸索出了一种解决方法，参考了issue中的那篇文章。 首先移除默认安装的插件： 所在目录：~/blog/1npm uninstall hexo-generator-index --save 然后安装新插件： 所在目录：~/blog/1npm install hexo-generator-index-pin-top --save 最后编辑有这需求的相关文章时，在Front-matter（文件最上方以---分隔的区域）加上一行： 1top: true 然后就行了，如果你置顶了多篇，怎么控制顺序呢？设置top的值（大的在前面），比如： 1234567# Post a.mdtitle: atop: 1# Post b.mdtitle: btop: 10 那么文章b便会显示在文章a的前面。 可是，没有任何标记啊，读者怎么知道文章置顶了。 还好NexT原有的置顶功能有考虑到这个，且置顶的样式没有被移除，所以可以直接利用。编辑文件： 文件位置：~/blog/node_modules/hexo-generator-index-pin-top/lib/generator.js12345678910111213141516171819202122232425262728'use strict';var pagination = require('hexo-pagination');module.exports = function(locals)&#123; var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) &#123; if(a.sticky &amp;&amp; b.sticky) &#123; // 两篇文章sticky都有定义 if(a.sticky == b.sticky) return b.date - a.date; // 若sticky值一样则按照文章日期降序排 else return b.sticky - a.sticky; // 否则按照sticky值降序排 &#125; else if(a.sticky &amp;&amp; !b.sticky) &#123; // 以下是只有一篇文章sticky有定义，那么将有sticky的排在前面（这里用异或操作居然不行233） return -1; &#125; else if(!a.sticky &amp;&amp; b.sticky) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排 &#125;); var paginationDir = config.pagination_dir || 'page'; return pagination('', posts, &#123; perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: &#123; __index: true &#125; &#125;);&#125;; 也就是将插件的top全部替换为NexT原有的sticky，然后将Front-matter中的top替换为sticky，就能调用NexT主题原有的置顶样式了～ 最后可以自定义一下样式： 文件位置：~/blog/themes/next/source/css/_custom/custom.styl12345678910// 自定义的文章置顶样式.post-sticky-flag &#123; font-size: inherit; float: left; color: rgb(255, 255, 255); cursor: help;&#125;.post-sticky-flag:hover &#123; color: rgb(0, 0, 0);&#125; 已发现的bug：新安装的插件无法实现站点配置文件中order_by: date，即文章按时间从旧到新排列的配置，也就意味着文章只能按默认的时间从新到旧排列。 进阶 写出优雅文章博客搭好了，只能说有个漂亮的外壳，内容丰富且颜值高的文章才是真正的精华。文章内容只能靠自己，不过这里教你几招提高文章颜值的方法。 写文章前请先查看Hexo官方文档之写作，写的很棒！然后再来细细讲讲文章（post）的模版文件，因为文章模版文件的个性化会直接影响文章（post）的主要布局，甚至是页面（page）的主要布局。 文章的模版文件（必读）如果你是用hexo new post &lt;title&gt;新建的文章，那么其实它就是将文章的模版文件post.md“复制”了一份到~/blog/source/_posts/下，所以这也意味着： 你可以直接通过在~/blog/source/_posts/下新建.md结尾的文件来写新的文章。 你可以通过自定义文章的模版文件，从而每次命令行新建的文章都会有你自定义的内容。 注意：如果自己直接新建文件，一定要记得加上文件最上方的参数，即下面的相关内容，还有编码请用UTF-8。 关于文件最上方的参数，参见Hexo官方文档的Front-matter和页面变量，下面是我的总结： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107/* ！！！！！！！！！！** 每一项的 : 后面均有一个空格** 且 : 为英文符号** ！！！！！！！！！！*/title:/* 文章标题，可以为中文 */date:/* 建立日期，如果自己手动添加，请按固定格式** 就算不写，页面每篇文章顶部的发表于……也能显示** 只要在主题配置文件中，开启了created_at就行** 那为什么还要自己加上？** 自定义文章发布的时间*/updated:/* 更新日期，其它与上面的建立日期类似** 不过在页面每篇文章顶部，是更新于……** 在主题配置文件中，是updated_at*/permalink:/* 若站点配置文件下的permalink配置了title** 则可以替换文章URL里面的title（文章标题）*/categories:/* 分类，支持多级，比如：- technology- computer- computer-aided-art则为technology/computer/computer-aided-art（不适用于layout: page）*/tags:/* 标签** 多个可以这样写[标签1,标签2,标签3]** （不适用于layout: page）*/description:/* 文章的描述，在每篇文章标题下方显示** 并且作为网页的description元数据** 如果不写，则自动取&lt;!-- more --&gt;** 之前的文字作为网页的description元数据** 建议每篇文章都务必加上！*/keywords:/* 关键字，并且作为网页的keywords元数据** 如果不写，则自动取tags里的项** 作为网页的keywords元数据*/comments:/* 是否开启评论** 默认值是true** 要关闭写false*/layout:/* 页面布局，默认值是post，默认值可以在** 站点配置文件中修改default_layout** 另：404页面可能用到，将其值改为false*/type:/* categories，目录页面** tags，标签页面** picture，用来生成group-pictures** quote？** https://reuixiy.github.io/uncategorized/2010/01/01/test.html*/photos:/* Gallery support，用来支持画廊/相册，用法如下：- photo_url_1- photo_url_2- photo_url_3https://reuixiy.github.io/uncategorized/2010/01/01/test.html*/link:/* 文章的外部链接** https://reuixiy.github.io/uncategorized/2010/01/01/test.html*/image:/* 自定义的文章摘要图片，只在页面展示，文章内消失** 此项只有参考本文5.14节配置好，否则请勿添加！*/sticky:/* 文章置顶** 此项只有参考本文5.15节配置好，否则请勿添加！*/password:/* 文章密码，此项只有参考教程：** http://shenzekun.cn/hexo的next主题个性化配置教程.html** 第24节，配置好，否则请勿添加！** 发现还是有bug的，就是右键在新标签中打开** 然后无论是否输入密码，都能看到内容*/ tip：灵活利用permalink，如果你是一个和我一样希望文章URL中不会出现中文的人。 为什么一定要添加文章的描述（description）呢？回答之前，先反问一句：为什么你的文章一定要加标题？吸引读者，为了让读者快速了解文章内容。对了，这就是答案。但由于文章的标题非常短，很多时候读者看完标题后，仍然对文章内容不了解，这时就要用到文章的描述。什么？你只是写给自己看的？！那请你也务必添加文章的描述，因为你自己也是读者啊，这对自己以后回顾文章很有作用！ 基于你自己博客的功能需求，以及自己对页面布局和文章布局的理解（审美观），将上面这些自己需要的加到自己的文章模版文件中即可，最后贴出我的文章模版文件： 文件位置：~/blog/scaffolds/post.md123456789101112131415161718192021222324---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;permalink:categories:tags: []description:image:---&lt;hr /&gt;&lt;p&gt;&lt;blockquote&gt;&lt;/blockquote&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://" alt="" style="width:100%" /&gt;&lt;/p&gt;&lt;!-- more --&gt;######&lt;hr /&gt; 但为什么说文章模版文件的个性化会直接影响文章（post）的主要布局，甚至是页面（page）的主要布局呢？哈哈哈，让我来解释一番我的文章模版文件，你就知道了～ 1. Front-matter 先起好文章的title（中文），然后补上permalink（英文），这是因为我在站点配置文件将title加进了文章的URL中，然而我不希望文章的URL中出现中文，相当于将URL中的中文翻译成英文。 date可以方便自定义文章的发布时间，接下来是两种不同的分类方式——categories和tags（分类和标签），description是文章的描述，建议务必写上！原因上面说了～ image的话，暂时保密～ 2. hr 前后加上&lt;hr /&gt;作为分隔线，前面加上可以将文章标题+文章元数据+文章的描述与文章内容分隔开来，后面加上可以将文章内容与它下面的非文章内容分隔开来，且前后配合可以将文章主要内容包裹住，感觉美观～ 3. 图片 由于&lt;!-- more --&gt;之前的文章内容会作为文章摘要（excerpt）显示在页面（page）中，会影响页面的主要布局，所以我在它前面加上了图片，为显示在页面的每篇文章的文章摘要配一张图片，保证博客页面的美观。有的图片宽度不够导致风格不够统一，页面不美观咋办？加上width:100%。 但是，有些情况下，也许你会从文章中选一张图片作为文章摘要图片，而这张图片由于写作要求，必须添加在文章的末尾，这样点[Read More]查看文章时，这张图片就会重复出现了，那怎么办？用文章摘要图片image～ 4. blockquote 由于文章的描述（description）有时候并不能满足我的需求（比如分段（本文）、加个emoji），所以有时候我需要将“文章的描述”写在文章中，并放在&lt;!-- more --&gt;之前作为文章摘要，但为了保证在文章（post）中与正文区分开来，我异想天开（参考）将blockquote用上了，看起来效果还真是不错！ 而且，由于如果不写description，则自动取&lt;!-- more --&gt;之前的文字作为网页的description元数据，外观和功能兼得，完美替代啊，美滋滋～ （可能要更改相关样式才能达到比较好的效果，参考本文第4节） 5. &lt;!-- more --> 之后的是文章的主要内容，文章的主要内容一般都可以分成几个部分，每一部分都可以概括出一个小标题，所以先将三个##（二级标题）加上咯～ 既然blockquote能替代description，那还有必要用description吗？如果“文章的描述”是较短的描述性文字，建议主要还是用description，毕竟title（标题）、description（描述）和excerpt（摘要）都是为了将文章内容简要概括，让读者快速了解文章内容，所以更简要的description优先使用！如果“文章的描述”是较长的描述性文字、问句，或者自己想突出表现“文章的描述”，建议用blockquote，效果比较好♪(^∇^)～当然，也可以结合使用～ 使用Markdown用Hexo写文章是直接用Markdown写的，而不是像WordPress有一个类似Word一样的文字编辑器，所以第一次用会感觉有点难，但你熟练之后，就会觉得文字编辑器都是辣鸡。 Markdown简介Markdown的目标是实现「易读易写」。 不过最需要强调的便是它的可读性。一份使用Markdown格式撰写的文件应该可以直接以纯文字发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown语法受到一些既有text-to-HTML格式的影响，包括Setext、atx、Textile、reStructuredText、Grutatext和EtText，然而最大灵感来源其实是纯文字的电子邮件格式。 因此Markdown的语法全由标点符号所组成，并经过严谨慎选，是为了让它们看起来就像所要表达的意思。像是在文字两旁加上星号，看起来就像**强调**。Markdown的清单看起来，嗯，就是清单。假如你有使用过电子邮件，区块引言看起来就真的像是引用一段文字。5 Markdown教程这是写文章必须掌握的技能哦，一开始可能比较懵，因为大脑没有相关概念，无法将Markdown语法“翻译”成相应样式，不过多写几篇就好啦～ 1.Markdown 从入门到进阶 2.Hexo下的Markdown语法(GFM)写博客 3.Markdown教程 4.Markdown，你只需要掌握这几个 5.Cmd Markdown 简明语法手册 我个人的总结首先是基础但重要： 标题请从二级标题（##）开始！ Markdwon文档写完一行务必空一行！ 英语单词、数字、以及一些符号左右加上空格！ 然后如果有些用Markdwon的语法无法实现，或者用Markdwon的语法却达不到预期效果，这时就可以考虑用HTML和CSS。 1.分隔线和空行 1234567/* 分隔线 */&lt;hr /&gt;/* 注意事项：在XHTML中，&lt;hr&gt; 必须被正确地关闭，比如 &lt;hr /&gt; */[^6]/* 空行 */&lt;br /&gt;/* 注意事项同上 */ 2.引用 文章开头就是默认效果。 12345&lt;blockquote&gt;引用内容&lt;/blockquote&gt;/* 样式修改请参考上文的修改custom.styl *//* 如果前后间隙很小，可以像下面这样写 */&lt;p&gt;&lt;blockquote&gt;引用内容&lt;/blockquote&gt;&lt;/p&gt; 3.居中和右对齐 12345/* 居中 */&lt;center&gt;内容&lt;/center&gt;/* 右对齐 */&lt;div style="text-align:right"&gt;内容&lt;/div&gt; 4.字体大小和颜色 12&lt;font color="#xxxxxx" size="number"&gt;内容&lt;/font&gt;/* 详细请查看http://www.w3school.com.cn/tags/tag_font.asp */ 5.Todo list 1234&lt;ul&gt;&lt;li&gt;&lt;i class="fa fa-check-square"&gt;&lt;/i&gt; 已完成&lt;/li&gt;&lt;li&gt;&lt;i class="fa fa-square"&gt;&lt;/i&gt; 未完成&lt;/li&gt;&lt;/ul&gt; 效果： 已完成 未完成 如何使用emoji[原方法] 在这个表情横行的时代，使用emoji似乎已经是日常。之前一直搜索相关插件，安装了很多，但都失败了。后来发现直接Copy，Paste就能用😆，可以去这个网站Copy。 但是有个缺点，就是不同系统，不同浏览器，渲染的效果不同，有些甚至不能显示。 [2017.08.20更新] 上面方法Copy的是Unicode，因此显示时有上面这个缺点，但是我们也可以直接调用图片，保证显示效果一致。但是NexT主题的相关样式会干扰emoji图片的显示效果，所以要在custom.styl中加代码，修改样式。 另：无论主题配置文件中的fancybox的值是true还是false，对此都没影响。 1.首先编辑custom.styl，往里面加入： 文件位置：~/blog/themes/next/source/css/_custom/custom.styl123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263/* 里面的color值请改为你自己的！ */// 自定义emoji样式img#github-emoji &#123; margin: 0px; padding: 0px; display: inline !important; vertical-align: text-bottom; border: none; cursor: text; box-shadow: none;&#125;// 文章超链接样式（为emoji特设）.post-body a &#123; color: rgb(80, 115, 184); border-bottom: none; text-decoration: underline;&#125;.post-body a:hover &#123; color: rgb(161, 102, 171); border-bottom: none; text-decoration: underline;&#125;// 标签云页面超链接样式（为emoji特设）.tag-cloud a &#123; color: rgb(80, 115, 184); border-bottom: 1px solid rgb(80, 115, 184); text-decoration: none;&#125;.tag-cloud a:hover &#123; color: rgb(161, 102, 171); border-bottom: 1px solid rgb(161, 102, 171); text-decoration: none;&#125;// 自定义文章元数据中categories的样式（为emoji特设）a.categories &#123; color: rgb(80, 115, 184); border-bottom: none; text-decoration: underline;&#125;a.categories:hover &#123; color: rgb(161, 102, 171); border-bottom: none; text-decoration: underline;&#125;// tabs标签（为emoji特设）.post-body .tabs ul.nav-tabs li.tab a &#123; text-decoration: none;&#125;// 阅读更多按钮样式（为emoji特设）.post-button .btn &#123; text-decoration: none; border: 1.5px solid rgb(80, 115, 184);&#125;.post-button .btn:hover &#123; text-decoration: none; border: 1.5px solid rgb(161, 102, 171);&#125; 2.然后在文章中的写法： 1&lt;img id="github-emoji" src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f602.png" height="20" width="20" /&gt; 效果：，换emoji只需换emoji的图片名1f602.png即可。 有点麻烦的就是找到emoji的图片名，有下面两个步骤： 输入法直接输入想用的emoji，然后Google到其名字，或者打开Emoji Cheat Sheet找到emoji的名字。 打开Github Emojis API快捷键搜索（Ctrl + F），输入emoji的名字，即可找到emoji的图片名。 方法是我看一个Hexo插件的README自己摸索出来的，当然用途不止于emoji。手机里的各种表情包，传到自己的云存储，然后改下URL，看情况改下height和width的值即可啦，GIF也可以哦～ 当然，还有颜文字(ﾉ*･ω･)ﾉ～ 插入音乐和视频音乐的话，网易云音乐的外链很好用，不仅有可以单曲，还能有歌单，有兴趣的自己去网易云音乐找首歌尝试。但是有一些音乐因为版权原因放不了，还有就是不完全支持https，导致小绿锁不见了。要解决这些缺点，就需要安装插件。 音乐1.可以直接用HTML的标签，写法如下： 1&lt;audio src="https://什么什么什么.mp3" style="max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" loop="loop" preload="meta"&gt;Your browser does not support the audio tag.&lt;/audio&gt; 2.用插件，有显示歌词功能，也美观，建议使用这种方法。 首先在站点文件夹根目录安装插件： 所在目录：~/blog/1npm install hexo-tag-aplayer --save 然后文章中的写法： 1&#123;% aplayer "歌曲名" "歌手名" "https://什么什么什么.mp3" "https://封面图.jpg" "lrc:https://歌词.lrc" %&#125; 效果，在这博客的music标签里自己找一篇文章看看。 注意：如果lrc用的是这种URL形式，hexo g时请保持网络通畅，否则你可以试试。 查看网页源代码发现：单独一首歌，showlrc的默认值为2，由这里得知，值为2时会通过JS调用歌词文件，并直接将歌词写入页面的HTML代码中，所以请保持网络通畅。 另外可以支持歌单： 1234567891011121314151617181920212223&#123;% aplayerlist %&#125;&#123; "autoplay": false, "showlrc": 3, "mutex": true, "music": [ &#123; "title": "歌曲名", "author": "歌手名", "url": "https://什么什么什么.mp3", "pic": "https://封面图.jpg", "lrc": "https://歌词.lrc" &#125;, &#123; "title": "歌曲名", "author": "歌手名", "url": "https://什么什么什么.mp3", "pic": "https://封面图.jpg", "lrc": "https://歌词.lrc" &#125; ]&#125;&#123;% endaplayerlist %&#125; 效果可以见我的ABOUT页面，里面的详细参数见README和这插件的“母亲”Aplayer的官方文档。 关于lrc歌词，可以用工具下载网易云音乐的歌词，另发现暂时不支持offset参数。 当然，如果那歌词很操蛋，有错误（比如字母大小写和标点符号乱加）或者时间完全对不上，然后你也和我一样是个完美主义者，那接下来就是令人窒息的操作了，一句一句自己查看修改…… 视频1.可以直接用HTML的标签，写法如下： 1&lt;video poster="https://封面图.jpg" src="https://什么什么什么.mp4" style="max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" loop="loop" preload="meta"&gt;Your browser does not support the video tag.&lt;/video&gt; 2.用插件，功能更加强大，比如可以弹幕，非常建议使用。 首先在站点文件夹根目录安装插件： 所在目录：~/blog/1npm install hexo-tag-dplayer --save 然后文章中的写法： 1&#123;% dplayer "url=https://什么什么什么.mp4" "https://封面图.jpg" "api=https://api.prprpr.me/dplayer/" "id=" "loop=false" %&#125; 要使用弹幕，必须有api和id两项，并且若使用的是官方的api地址（即上面的），id的值不能与这个列表的值一样。id的值自己随便取，唯一要求就是前面这点。 如果唯一要求难倒了你，可以使用这个工具将一段与众不同的文字生成一段看起来毫无意义的哈希值，这样看起来是不是好多了。 效果，在这博客的video标签里自己找一篇文章看看。 当然，这个插件的功能还有很多，可以去README和这插件的“母亲”Dplayer的官方文档看看。 视频插件在NexT主题下有bug！网页全屏有问题，issue页面，5.1.2下可以通过在custom.styl中加代码解决（见本文4.2节内的相关代码），但是5.1.3失效，目前博主找到的唯一解决方法是在主题配置文件中关闭motion。 好玩的写作样式用一些特殊的样式，可以增加文章的可读性。不过也不是越多越好，没必要写一篇文章就把下面的样式全部用一遍，这样只会适得其反，从下面的样式中选几个自己觉得比较好的、经常会用的就行。而且写博客重点是文章的文字内容，而不是这些样式，样式只是为了让文章更美观，更适合阅读。这和我们用Markdown写文章是一样的道理，用Markdown而不是直接写HTML代码，就是为了将更多时间花在文字上～ 主题自带样式 FontAwesome图标效果： 支持MarkdownHexo支持GitHub Flavored Markdown的所有功能，甚至可以整合Octopress的大多数插件。 一件部署只需一条指令即可部署到Github Pages，或其他网站。 丰富的插件Hexo拥有强大的插件系统，安装插件可以让Hexo支持Jade，CoffeeScript。7 源码： 1234561. &lt;i class="fa fa-pencil"&gt;&lt;/i&gt; 支持Markdown&lt;i&gt;Hexo支持GitHub Flavored Markdown的所有功能，甚至可以整合Octopress的大多数插件。&lt;/i&gt;2. &lt;i class="fa fa-cloud-upload"&gt;&lt;/i&gt; 一件部署&lt;i&gt;只需一条指令即可部署到Github Pages，或其他网站。&lt;/i&gt;3. &lt;i class="fa fa-cog"&gt;&lt;/i&gt; 丰富的插件&lt;i&gt;Hexo拥有强大的插件系统，安装插件可以让Hexo支持Jade，CoffeeScript。&lt;/i&gt; 采用的是Font Awesome的图标，下面给出一些简单的使用例子，更多请查看官网的使用示例。 123- &lt;i class="fa fa-pencil"&gt;&lt;/i&gt; 铅笔- &lt;i class="fa fa-cloud-upload"&gt;&lt;/i&gt; 上传- &lt;i class="fa fa-download"&gt;&lt;/i&gt; 下载 铅笔 上传 下载 123456- &lt;i class="fa fa-download"&gt;&lt;/i&gt; 下载- &lt;i class="fa fa-download fa-lg"&gt;&lt;/i&gt; 下载变大33%- &lt;i class="fa fa-download fa-2x"&gt;&lt;/i&gt; 下载两倍大- &lt;i class="fa fa-download fa-3x"&gt;&lt;/i&gt; 下载三倍大- &lt;i class="fa fa-download fa-4x"&gt;&lt;/i&gt; 下载四倍大- &lt;i class="fa fa-download fa-5x"&gt;&lt;/i&gt; 下载五倍大 下载 下载变大33% 下载两倍大 下载三倍大 下载四倍大 下载五倍大 主题自带样式 代码块高亮先看效果： Java代码来自这12345678910111213141516/** * @author John Smith &lt;john.smith@example.com&gt;*/package l2f.gameserver.model;public abstract class L2Char extends L2Object &#123; public static final Short ERROR = 0x0001; public void moveTo(int x, int y, int z) &#123; _ai = null; log("Should not be called"); if (1 &gt; 5) &#123; // wtf!? return; &#125; &#125;&#125; 这里指的是```代码块，而不是行内代码块（`代码`），它的用法如下： ```[language] [title] [url] [link-text] 代码 ``` [language]是代码语言的名称，用来设置代码块颜色高亮，非必须； [title]是顶部左边的说明，非必须； [url]是顶部右边的超链接地址，非必须； [link text]如它的字面意思，超链接的名称，非必须。 亲测这4项应该是根据空格来分隔，而不是[]，故请不要加[]。除非如果你想写后面两个，但不想写前面两个，那么就必须加[]了，要这样写：[] [] [url] [link text]。 首先关于代码块颜色高亮，高亮的模式可以在主题配置文件中设置： 文件位置：~/blog/themes/next/_config.yml123456# Code Highlight theme# Available value:# normal | night | night eighties | night blue | night bright# https://github.com/chriskempson/tomorrow-themehighlight_theme: normal 要颜色正确高亮，代码语言的名称肯定要写对，各种支持语言的名称可以查看这篇文章。当然，如果你和我一样懒，可以在站点配置文件_config.yml中设置自动高亮： 文件位置：~/blog/_config.yml123456highlight: enable: true line_number: true# 代码自动高亮- auto_detect: false+ auto_detect: true 咦？发现了什么没有，红色-和绿色+的样式哪来的？哈哈哈，原来这也是一种语言，叫diff，所以你只需在[language]这写diff，然后在相应代码前面加上-和+就行了。不过默认的-是绿色，+是红色，与Github上相反，别扭就自己改回来咯： 文件位置：~/blog/themes/next/source/css/_custom/custom.styl1234567// 文章```代码块diff样式pre .addition &#123; background: #008000;&#125;pre .deletion &#123; background: #800000;&#125; 当然，要是你不满意代码块背景色，以及顶部的文字样式，可以也自己在custom.styl自定义： 文件位置：~/blog/themes/next/source/css/_custom/custom.styl12345678910111213141516// 文章```代码块样式.highlight .gutter pre &#123; color: #BDBDBD; background-color: #455A64;&#125;.highlight, .highlight .code pre, .highlight td &#123; background-color: #F0F4C3;&#125;// 文章```代码块顶部样式.highlight figcaption &#123; margin: 0.5em; color: #455A64;&#125;.highlight figcaption a &#123; color: rgb(80, 115, 184);&#125; 参考了Hexo官方文档的标签插件（Tag Plugins）页面，这个页面还有更多的Hexo标签插件（Tag Plugins）的用法，请自行查看。 关于代码块高亮的高级个性化，请查看大佬的文章——HEXO下的语法高亮拓展修改。 主题自带样式 文本居中引用效果： 人生乃是一面镜子，从镜子里认识自己，我要称之为头等大事，也只是我们追求的目的！ 源码： 1234&lt;p&gt;&lt;blockquote class="blockquote-center"&gt;人生乃是一面镜子，从镜子里认识自己，我要称之为头等大事，也只是我们追求的目的！&lt;/blockquote&gt;&lt;/p&gt; 更多NexT主题自带的标签样式，请点击：http://theme-next.iissnan.com/tag-plugins.html 主题自带样式 note标签在主题配置文件_config.yml里有一个关于这个的配置，但官方文档没有提供HTML的使用方式，个人认为这种方式更简单，也不会产生一些奇怪的显示bug…… default default 1&lt;div class="note default"&gt;default&lt;/div&gt; primary primary 1&lt;div class="note primary"&gt;primary&lt;/div&gt; success success 1&lt;div class="note success"&gt;success&lt;/div&gt; info info 1&lt;div class="note info"&gt;info&lt;/div&gt; warning warning 1&lt;div class="note warning"&gt;warning&lt;/div&gt; danger danger 1&lt;div class="note danger"&gt;danger&lt;/div&gt; danger no-icon danger no-icon 1&lt;div class="note danger no-icon"&gt;danger no-icon&lt;/div&gt; 首先可以在主题配置文件中有配置，需要配置下，贴上我的： 文件位置：~/blog/themes/next/_config.yml123456789# Note tag (bs-callout).note: # 风格 style: flat # 要不要图标 icons: true # 圆角矩形 border_radius: 3 light_bg_offset: 0 里面的三种风格长啥样？开启图标长啥样？可以查看这个页面，更多的介绍也在这个页面，请自行查看。 主题自带样式 label标签首先可以在主题配置文件中有配置，需要配置下，贴上我的： 文件位置：~/blog/themes/next/_config.yml12# Label tag.label: true 然后源码： 1&lt;div class="label info"&gt;info&lt;/div&gt; 这个的效果我就不展示了，因为我自定义了页面的背景色和文章文字的颜色，而默认的label的背景色都很淡，所以在这效果不明显，要查看效果，可以前往这个页面查看。 另外我发现两个奇怪的bug： 导致后文的标题无法正常渲染 如下图，我把custom.styl里的自定义样式全删了也一样…… 如果你也自定义了页面的背景色，导致这些label不明显，而且也有这样奇怪的bug出现，但你又想用这种样式，咋整？请查看下文的文字背景色块。 主题自带样式 tabs标签名字是不是很耳熟？对，就是浏览器的那个tab，显示效果嘛，看起来是不是和最近很火的那个iPhone X很像？有个刘海，噗哈哈哈哈哈～ 效果： 选项卡 1选项卡 2选项卡 3这是选项卡 1 呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈…… 这是选项卡 2 这是选项卡 3 哇，你找到我了！φ(≧ω≦*)♪～ 源码： 1234567891011&#123;% tabs 选项卡, 2 %&#125;&lt;!-- tab --&gt;**这是选项卡 1** 呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈呵呵哈哈哈哈哈哈哈哈……&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**这是选项卡 2**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**这是选项卡 3** 哇，你找到我了！φ(≧ω≦*)♪～&lt;!-- endtab --&gt;&#123;% endtabs %&#125; 首先可以在主题配置文件中有配置，需要配置下，贴上我的：文件位置：~/blog/themes/next/_config.yml1234567# Tabs tag.tabs: enable: true transition: tabs: true labels: true border_radius: 0 然后上面源码中, 2表示一开始在第二个选项卡，非必须，若数值为-1则隐藏选项卡内容。更多用法请查看这个页面。 自定义样式 文字背景色块首先由于是自定义的样式，故要自己将CSS代码加到custom.styl中，下文的自定义样式都是如此。为什么可以自定义呢？如果你是一个和我一样的小白，可以点击这里了解了解CSS中id和class的知识。 其实最常用的文字背景色块应该是行内代码块`代码`和mark标签（&lt;mark&gt;标签&lt;/mark&gt;），然后我提供以下11种，红黄蓝绿青橙紫7色加上W3Schools的页面HTML Color Groups里面的灰、白、棕、粉红4色。 red（#FF0000） 红色 1&lt;span id="inline-red"&gt;红色&lt;/span&gt; yellow（#FFFF00） 黄色 1&lt;span id="inline-yellow"&gt;黄色&lt;/span&gt; blue（#0000FF） 蓝色 1&lt;span id="inline-blue"&gt;蓝色&lt;/span&gt; green（#008000） 绿色 1&lt;span id="inline-green"&gt;绿色&lt;/span&gt; cyan（#00FFFF） 青色 1&lt;span id="inline-cyan"&gt;青色&lt;/span&gt; orange（#FFA500） 橙色 1&lt;span id="inline-orange"&gt;橙色&lt;/span&gt; purple（#800080） 紫色 1&lt;span id="inline-purple"&gt;紫色&lt;/span&gt; gray（#808080） 灰色 1&lt;span id="inline-gray"&gt;灰色&lt;/span&gt; white（#FFFFFF） 白色 1&lt;span id="inline-white"&gt;白色&lt;/span&gt; brown（#A52A2A） 棕色 1&lt;span id="inline-brown"&gt;棕色&lt;/span&gt; pink（#FFC0CB） 粉红色 1&lt;span id="inline-pink"&gt;粉红色&lt;/span&gt; 需加入custom.styl的代码： 文件位置：~/blog/themes/next/source/css/_custom/custom.styl123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100// 自定义文字背景色块span#inline-red &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #FF0000;&#125;span#inline-yellow &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #FFFF00;&#125;span#inline-blue &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #0000FF;&#125;span#inline-green &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #008000;&#125;span#inline-cyan &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #00FFFF;&#125;span#inline-orange &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #FFA500;&#125;span#inline-purple &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #800080;&#125;span#inline-gray &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #808080;&#125;span#inline-white &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #FFFFFF;&#125;span#inline-brown &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #A52A2A;&#125;span#inline-pink &#123; padding: 3px; margin: 2px; font-size: 90%; font-weight: bold; color: #fff; border-radius: 3px; background-color: #FFC0CB;&#125; 我的颜色值都是直接在那页面上取的，可能看起来比较丑，可以用Chrome浏览器F12直接定位相应元素，再将颜色调到自己喜欢的值，然后替换上面custom.styl代码中相应颜色的background-color的值即可，而文字颜色更改color的值就即可。 参考：http://yangbingdong.com/2017/build-blog-hexo-advanced/#好玩的样式 自定义样式 文字引用边框通过上面文字背景色块，颜色你应该可以自己改了，所以我就不每种颜色都举栗子了，只用红色作为例子。 红色左边框 1&lt;p id="border-left-red"&gt;红色左边框&lt;/p&gt; 红色右边框 1&lt;p id="border-right-red"&gt;红色右边框&lt;/p&gt; 红色上边框 1&lt;p id="border-top-red"&gt;红色上边框&lt;/p&gt; 红色下边框 1&lt;p id="border-bottom-red"&gt;红色下边框&lt;/p&gt; 内容 1&lt;p&gt;&lt;blockquote class="question"&gt;内容&lt;/blockquote&gt;&lt;/p&gt; 需加入custom.styl的代码： 文件位置：~/blog/themes/next/source/css/_custom/custom.styl1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950// 自定义文字引用边框p#border-left-red &#123; color: #FF0000; background-color: rgb(255, 255, 255); padding: 10px; border: 1px solid #ccc; border-left-width: 5px; border-radius: 3px; border-left-color: #FF0000; text-indent: 0em;&#125;p#border-right-red &#123; color: #FF0000; background-color: rgb(255, 255, 255); padding: 10px; border: 1px solid #ccc; border-right-width: 5px; border-radius: 3px; border-right-color: #FF0000; text-indent: 0em;&#125;p#border-top-red &#123; color: #FF0000; background-color: rgb(255, 255, 255); padding: 10px; border: 1px solid #ccc; border-top-width: 5px; border-radius: 3px; border-top-color: #FF0000; text-indent: 0em;&#125;p#border-bottom-red &#123; color: #FF0000; background-color: rgb(255, 255, 255); padding: 10px; border: 1px solid #ccc; border-bottom-width: 5px; border-radius: 3px; border-bottom-color: #FF0000; text-indent: 0em;&#125;// 自定义的引用样式blockquote.question &#123; color: rgba(0, 0, 0, 0.95); padding-left: 25px; border-left: 5px solid rgb(5, 154, 37); background: rgba(255, 255, 255, 0.75); border-top-right-radius: 3px; border-bottom-right-radius: 3px;&#125; 文字颜色改color的值 背景色改background-color的值 左右上下线条的颜色改border-left/right/top/bottom-color的值 左右上下线条的粗细改border-left/right/top/bottom-width的值 除了线条之外的边框颜色和粗细改border的值 加text-indent: 0em;是为了消除我在custom.styl中加的首行缩进（text-indent: 2em;）的影响，你没加可以删掉这行。如果感觉里面文字太靠左边不满意，可以加一行padding-left: 30px;，当然数值自己F12改到合适。 参考：http://yangbingdong.com/2017/build-blog-hexo-advanced/#好玩的样式 自定义样式 下载框（按钮）结合Font Awesome图标、文字背景色块、文字边框，再加上一些其它的元素，就是这个东东了。 效果： 点击下载百度 源码： 1&lt;a id="download" href="https://www.baidu.com"&gt;&lt;i class="fa fa-download fa-lg"&gt;&lt;/i&gt; 点击下载百度&lt;/a&gt; 需加入custom.styl的代码： 文件位置：~/blog/themes/next/source/css/_custom/custom.styl12345678910111213141516// 自定义的下载框a#download &#123; padding: 3px 10px; margin: 3px; color: #ffffff; background-color: #000000; border: 2px solid #ffffff; border-radius: 3px; transition: all 0.5s ease; font-weight: bold; text-decoration: none;&#125;a#download:hover &#123; background: #ffffff; color: #000000;&#125; :hover就是光标移动到这个元素上面的样式，然后文字颜色、背景色、边框颜色自己自定义。 参考：http://yangbingdong.com/2017/build-blog-hexo-advanced/#图形边框效果 其实NexT主题默认有个按钮的样式——阅读更多按钮，所以其实可以直接调用的，关于按钮的更多使用可以前往这个页面查看。 我调用时出现个bug，光标的形状不改变，可以在custom.styl里加入： 1234// 默认按钮bug.btn &#123; cursor: pointer;&#125; 当然，要是你那没有这个bug，可以不加。 自定义样式 数字块1.左边是效果。 源码： 1&lt;span id="inline-toc"&gt;1.&lt;/span&gt; 需加入custom.styl的代码： 文件位置：~/blog/themes/next/source/css/_custom/custom.styl12345678910// 自定义的数字块span#inline-toc &#123; display: inline-block; border-radius: 80% 100% 90% 20%; background-color: #ffffff; color: #000000; padding: 0.05em 0.4em; margin: 2px 5px 2px 0px; text-indent: 0em;&#125; 颜色自己自定义，加text-indent: 0em;是为了消除我在custom.styl中加的首行缩进（text-indent: 2em;）的影响，你没加可以删除这行。 参考：http://qianling.pw/style/#TOC数字块 结尾 求大佬和结尾终于结束了，哈哈哈哈哈～折腾一番，有了自己的博客，另外知道了一点HTML，CSS和JavaScript的知识，收藏夹里多了很多大佬的博客。 移动端顶部菜单NexT主题移动端的顶部菜单个人感觉没啥特色，但自己的能力又还没到自己造轮子的地步，所以求大佬。个人比较喜欢这两个Hexo主题的移动端顶部菜单： hexo-theme-tranquilpeak，demo。 hexo-theme-yilia，demo。 替换fancybox[2017.11.18更新] 原因是版本太低，我似乎听到了下面的fancybox在说着：这锅我不背！ 并且已有大佬提交Pr，但是目前还未被Merge，博主跟进中，实在不行手动更新。 博主暂时的解决方法是在主题配置文件中，加上新版本的CDN地址： 文件位置：~/blog/themes/next/_config.yml12345# Internal version: 2.1.5 # See: http://fancyapps.com/fancybox/ # 自定义fancybox（暂时） fancybox: https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.2.1/jquery.fancybox.min.js fancybox_css: https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.2.1/jquery.fancybox.min.css 当然这样粗鲁的做法还是有bugs的，不过暂时先这样，一起期待被Merge吧～ [原内容] 个人感觉fancybox用着不太爽，上面两个主题的感觉就很棒： hexo-theme-yilia，demo。 hexo-theme-tranquilpeak，demo。 特别是yilia的移动端手势操作，很赞，求大佬移植到NexT！还有一个Github很棒的项目Fluidbox。 最后的结束小语其实写这篇文章时，犯了一个很大的错误，把定制（customization）写成了优化（optimization），本文的内容都是个性化的定制，而非优化…… 然后毕竟只是小白，本文如有错误，欢迎评论指出～也欢迎你把这篇文章加入收藏夹，毕竟NexT主题一直在更新，会有一些新的功能和配置，这篇文章自然也会一直保持更新～ 不知道这篇文章有木有照亮你呢？如果你觉得这篇文章很赞，欢迎分享本文给更多像我一样的小白看到！为修改这篇文章博主光通宵就来了两次，但如果还是有不足，也求给我个 好评哦亲 φ(≧ω≦*)♪～ 最后如果转载，麻烦留个本文的链接，因为如果读者或我自己发现文章有错误，我会在这里更正，留个本文的链接，防止我暂时的疏漏耽误了他人宝贵的时间。 1.参考：https://github.com/ahonn/hexo-theme-even/issues/69 ↩2.来源：http://lovekernel.com/2017/hexo博客构建笔记/ ↩3.参考：http://lovekernel.com/2017/hexo博客构建笔记/ ↩4.参考：https://leaferx.online/2017/06/16/use-gulp-to-minimize/ ↩5.来源：http://markdown.tw/ ↩6.参考：http://www.w3school.com.cn/tags/tag_hr.asp ↩7.来源：http://yangbingdong.com/2017/build-blog-hexo-advanced/ ↩]]></content>
      <categories>
        <category>technology</category>
        <category>computer</category>
        <category>computer-aided-art</category>
      </categories>
      <tags>
        <tag>tips</tag>
        <tag>沉迷于删删改改</tag>
        <tag>图片</tag>
        <tag>share</tag>
        <tag>coldplay</tag>
        <tag>诗</tag>
        <tag>bb-for-bb</tag>
        <tag>technology</tag>
        <tag>computer</tag>
        <tag>linux</tag>
        <tag>bb-for-fun</tag>
        <tag>学习</tag>
        <tag>computer-aided-art</tag>
        <tag>下载</tag>
        <tag>尼采</tag>
        <tag>internet</tag>
        <tag>知识平台</tag>
        <tag>补充</tag>
        <tag>勘误</tag>
        <tag>wordpress</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[通过比特币稳赚￥500？]]></title>
    <url>%2Fphilosophy%2Fhow%2F2017%2F06%2F07%2Fearn-money-through-bitcoin.html</url>
    <content type="text"><![CDATA[去年12-9，10号，￥200买入了฿0.0355。现在，我将它卖出，得到￥700，稳赚了￥500。 论妙的起源最先了解到比特币1，是有一段时间它在新闻上频频出现。当时很好奇为什么它能值那么多钱，印象深刻，但也没怎么深入研究。 半年前我买了比特币，是因为一直瞎折腾，接触了单片机，Linux，树莓派2。在网站上偶然看到树莓派有个应用：可以拿来当比特币小矿机。这就让我一下子回忆起比特币这个东东，并且找了一些文章来研究，知道了区块链，货币的去中心化。 association 读过《理想国》，一直构想一个理想国，政府能否去中心化？ 了解后，纯属好奇，并感觉它很有潜力，于是决定弄点体验体验，于是忍痛掏钱买了点。然后就一直搁着没碰，直到最近比特币又火了。 途径妙在哪 伟大的艾伦·图灵，在70多年前，就已经构想过了人工智能，而他的一些科学成果，构成了现代计算机技术的基础。你会发现，原来现在的一个热词——人工智能，竟然已提出了那么久，直接可以追溯到计算机的起源。 计算机技术的发展，最终会创造人类未来的超级工具——人工智能，为什么人工智能是人类未来的超级工具？ 记得思修课（我讨厌）听到，为啥人与动物不同，老师很强调“人会使用工具”，很想反驳：有些猴子也会啊？这不是唯一，也不是最重要，什么才是呢？ 跑题了……Anyway，使用工具的确是我们将自己定义为“人类”的底气之一。没有工具？你想想自己在自然中裸奔的样子…… 我觉得工具可以由低到高分三级： 第一级：单纯是自然资源的简单加工（刀，斧子） 第二级：精细利用自然资源加上简单组合（机械，自动化） 第三级：精细利用自然资源加上复杂组合（计算机，智能化） 人类的工具嘛，就是为了偷懒呗，偷懒到极致，就是自己想都不用想，它都能帮自己干事情。人工智能，就能替你思考，所以是人类工具的极致（超级工具）。 第一级让我们得以在残酷的自然中存活 第二级让我们的得以跨入工业时代 第三级是现在与未来 握草，前面的是啥？bb一大堆计算机和工具啥的，和赚的途径很巧妙有什么关系？！ 嫑急，是什么让我最终购买比特币？因为我接触了单片机，Linux，树莓派，然后树莓派上又再次接触到了比特币，所以才特意去研究，并买点体验体验，然后赚了￥500。 有没有想过它们的交集是什么，是计算机技术，而现在的计算机技术是这个时代人类最重要的工具，也是人类未来的超级工具——人工智能的基础。 什么最赚钱？人类的新工具和未来啊！ 想想汽车大亨和互联网大佬，想想Elon Musk3的Tesla4和SpaceX5。这就是赚￥500的途径妙处所在，窥探了新工具和未来。 好奇心的重要性请看前面，整个故事的开头，是什么让我对比特币印象深刻…… 本文已结束赚的途径妙处已相告，本文已结束。但不知是否好奇，知道了妙在哪？可是怎么感觉到了这妙？ 怎么感觉到了妙！？能感觉到妙的原因在于触摸了一种珍贵的喜悦，附上亚里士多德的哲学： 1234567891011亚里士多德的哲学├── 1.理论科学（theoretical-science）│ ├── 第一哲学（形而上学）│ ├── 数学和物理学│ └── 作为理论科学导论和方法论的逻辑学├── 2.实践科学（practical-science）│ ├── 指导个人实践的伦理学│ └── 指导公共实践的政治学└── 3.创制科学（productive-science） ├── 文学艺术 └── 制造工艺 1.比特币（Bitcoin）的概念最初由中本聪在2009年提出，根据中本聪的思路设计发布的开源软件以及建构其上的P2P网络。比特币是一种P2P形式的数字货币。点对点的传输意味着一个去中心化的支付系统。 ↩2.Raspberry Pi(中文名为“树莓派”，简写为RPi，或者RasPi / RPI)是为学习计算机编程教育而设计，只有信用卡大小的微型电脑，其系统基于Linux。别看其外表“娇小”，内“心”却很强大，视频、音频等功能通通皆有，可谓是“麻雀虽小，五脏俱全”。 ↩3.伊隆·马斯克（Elon Musk，1971年6月28日－），出生于南非的企业家，拥有加拿大和美国双国籍。马斯克因身为SpaceX创办人，以及特斯拉汽车和PayPal（原X.com）的联合创办人而闻名。 ↩4.特斯拉(Tesla)，是一家美国电动车及能源公司，产销电动车、太阳能板、及储能设备。 ↩5.美国太空探索技术公司（SpaceX）是一家由PayPal早期投资人埃隆·马斯克（Elon Musk）2002年6月建立的美国太空运输公司。它开发了可部分重复使用的猎鹰1号和猎鹰9号运载火箭。SpaceX同时开发Dragon系列的航天器以通过猎鹰9号发射到轨道。 ↩]]></content>
      <categories>
        <category>philosophy</category>
        <category>how</category>
      </categories>
      <tags>
        <tag>philosophy</tag>
        <tag>association</tag>
        <tag>after-physics(形而上学)</tag>
        <tag>tips</tag>
        <tag>真理</tag>
        <tag>沉迷于删删改改</tag>
        <tag>未来</tag>
        <tag>linux</tag>
        <tag>bb-for-fun</tag>
        <tag>practical-science(实践科学)</tag>
        <tag>how</tag>
        <tag>工具</tag>
        <tag>analysis(分析)</tag>
        <tag>树莓派</tag>
        <tag>why</tag>
        <tag>bitcoin</tag>
        <tag>去中心化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Coldplay - Fix You高清截图]]></title>
    <url>%2Fbeautiful%2Fshare%2F2017%2F05%2F31%2Fcoldplay-fix-you-pictures.html</url>
    <content type="text"><![CDATA[图片来自Coldplay的《Live 2012》，是Coldplay在2012年世界巡演「Mylo Xyloto Tour」中来自Paris的现场录像的截图，当看到主唱Chris Martin含泪呐喊时，我和镜头中那台下的小女孩一样，头皮发麻…… 音乐[ar:Coldplay] [ti:Fix You] [al:X&Y] [by:https://reuixiy.github.io] [length:4:53] [00:00.00]Coldplay - Fix You [00:13.32] [00:13.33]When you try your best but you don't succeed [00:20.01]When you get what you want but not what you need [00:25.93]When you feel so tired but you can't sleep [00:33.07]Stuck in reverse [00:40.17]And the tears come streaming down your face [00:48.00]When you lose something you can't replace [00:55.22]When you love someone but it goes to waste [01:01.98]Could it be worse? [01:09.00]Lights will guide you home [01:19.11]And ignite your bones [01:25.51]And I will try to fix you [01:44.39]And high up above or down below [01:49.86]When you're too in love to let it go [01:57.05]But if you never try you'll never know [02:04.11]Just what you're worth [02:13.44]Lights will guide you home [02:21.70]And ignite your bones [02:29.00]And I will try to fix you [03:29.29]I see a stream down your face [03:35.87]when you lose something you cannot replace [03:42.72]I see a stream down your face [03:49.48]And I [03:54.58]I see a stream down your face [04:03.57]I promise you I will learn from all my mistakes [04:09.90]I see a stream down your face [04:16.58]And I [04:21.78]Lights will guide you home [04:31.62]And ignite your bones [04:37.82]And I will try to fix you var ap = new APlayer({ element: document.getElementById("aplayer1"), narrow: false, autoplay: false, showlrc: 2, music: { title: "Fix You", author: "Coldplay", url: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music/Coldplay%20-%20Fix%20You.mp3", pic: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music-cover/coldplay-fix-you.png", } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 视频Coldplay - Fix You]]></content>
      <categories>
        <category>beautiful</category>
        <category>share</category>
      </categories>
      <tags>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>share</tag>
        <tag>coldplay</tag>
        <tag>music</tag>
        <tag>头皮发麻</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[抬头仰望那令人敬畏的星空]]></title>
    <url>%2Fbeautiful%2Fshare%2F2017%2F05%2F30%2Fstarry.html</url>
    <content type="text"><![CDATA[无论长多大，每当幻想星空时，心中的敬畏之情依然能将我从现实中唤醒]]></content>
      <categories>
        <category>beautiful</category>
        <category>share</category>
      </categories>
      <tags>
        <tag>想象</tag>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>share</tag>
        <tag>星空</tag>
        <tag>epic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[快拍下那刻，手机！]]></title>
    <url>%2Fbeautiful%2Fnotnow%2F2017%2F05%2F30%2Fphotograph.html</url>
    <content type="text"><![CDATA[▲火车的晚霞 2017-04-01 18:53:06 ▲home 2017-01-11 17:49:23 ▲雪中的脚印 2016-11-22 16:20:55 ▲空调戴帽子 2016-11-22 15:58:25 ▲雪中一红叶 2016-11-22 11:30:25 ▲宁静独中来 2016-10-27 12:40:48 ▲天气真好，吹着舒适的南风，久违的美2016-10-16 16:11:01 ▲朝霞 2015-12-18 07:23:58]]></content>
      <categories>
        <category>beautiful</category>
        <category>notnow</category>
      </categories>
      <tags>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>美景</tag>
        <tag>notnow</tag>
        <tag>摄影</tag>
        <tag>发呆</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[给我起个名字吧 - 8]]></title>
    <url>%2Fbeautiful%2Fbb-for-fun%2F2017%2F05%2F20%2Funtitled-8.html</url>
    <content type="text"><![CDATA[今天是5/20，我要扭转出新的维度，将两条平行永不相交的直线连成丘比特之环(๑•̀ㅂ•́)و✧～ 5/20？我？她？纵使我她如那欧几里得两条平行永不相交的直线我也会扭转出新维度将它们连成丘比特之环文字浮入空气中渗入了身体于是一个人离开了这世界什么残留了冰冷前额的温度暗夜中渴望一束光的关怀在白天却更渴望黑洞的吞噬因为好奇心，想看看黑暗中有什么 2017-05-20 04:24:55]]></content>
      <categories>
        <category>beautiful</category>
        <category>bb-for-fun</category>
      </categories>
      <tags>
        <tag>association</tag>
        <tag>after-physics(形而上学)</tag>
        <tag>想象</tag>
        <tag>沉迷于删删改改</tag>
        <tag>beautiful</tag>
        <tag>好奇心</tag>
        <tag>epic</tag>
        <tag>love</tag>
        <tag>光</tag>
        <tag>诗</tag>
        <tag>目标</tag>
        <tag>bb-for-fun</tag>
        <tag>维</tag>
        <tag>前额一冷</tag>
        <tag>黑暗</tag>
        <tag>看书</tag>
        <tag>kindle</tag>
        <tag>quotes</tag>
        <tag>untitled</tag>
        <tag>Einstein</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[品味达·芬奇]]></title>
    <url>%2Fbeautiful%2Fshare%2F2017%2F05%2F15%2Fleonardo-da-vinci.html</url>
    <content type="text"><![CDATA[有时候自己仿佛一个信徒，迷信着一些存在于自己想象中的东东～]]></content>
      <categories>
        <category>beautiful</category>
        <category>share</category>
      </categories>
      <tags>
        <tag>想象</tag>
        <tag>真理</tag>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>share</tag>
        <tag>达·芬奇</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Coldplay - Lost+ ft. Jay-Z]]></title>
    <url>%2Fbeautiful%2Fshare%2F2017%2F04%2F28%2Fcoldplay-lost%2B.html</url>
    <content type="text"><![CDATA[太喜欢Coldplay的这首歌和这个MV了，喜欢到第一次尝试制作中英字幕ヾ(≧O≦)〃～但发现最困难的还是翻译，这才是脑力活……Anyway，很兴奋，开心～ 视频(function(){var player = new DPlayer({"container":document.getElementById("dplayer2"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/Coldplay%20-%20Lost%2B%20ft.%20Jay-Z.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 歌词Coldplay - Lost+ ft. Jay-Z字幕制作：Worm-35（网易云音乐账号）Okay!Okay!Just because I’m losing我只不过是迷茫着Doesn’t mean I’m lost不意味着我失败了Doesn’t mean I’ll stop不意味着我会停下脚步Doesn’t mean I’m across不意味着我会错过Just because I’m hurting我只不过是疼痛着Doesn’t mean I’m hurt不意味着我受伤了Doesn’t mean I didn’t get what I deserved不意味着我没有得到自己应得的No better and no worse这样不算更好，也没更坏I just got lost!我只是迷茫着Every river that I tried to cross每条我尝试了要去跨过的河流都被锁住了Every door I ever tried was locked每扇我曾尝试了想要去打开的门都被锁住了Oh and I’m just waiting til the shine wears offOh, 我只不过想等着外面的强光褪去You might be a big fish你可能是条大鱼In a little pond在小小的池塘里Doesn’t mean you’ve won但这不意味着你是赢家‘Cause along will come因未来可能会有A bigger one另外一条更大的鱼出现And you’ll be lost!然后你将感到迷茫Every river that you tried to cross每条你尝试了要去跨过的河流都消失不见了Every gun you ever held went off每把你曾紧握的枪都消失不见了Oh and I’m just waiting til the firing’s stoppedOh, 我只不过在等待直到热火散尽的瞬间Oh and I’m just waiting til the shine wears offOh, 我只不过想等着外面的强光褪去[Jay-Z rap][Jay-Z rap]Aha, I got you, uhAha, 我懂了, uhWith the same sword they knight you那把他们封给你的剑They gon’ goodnight you with他们也会用它给你说晚安Shit, that’s only half if they like youShit, 如果他们喜欢你但也可能只有一半That ain’t even a half what they might do事实上那甚至不到他们可能做的一半Don’t believe me? Ask Michael不相信我？问问迈克尔·杰克逊吧See Martin, see Malcolm看看马丁·路德·金，看看马尔克姆·利托（美国黑人民权运动领导，都被刺杀）See Biggie, see Pac看看Biggie，看看Pac（两位美国说唱之神，但都被夺去生命）See success and its outcome看看成功和成功的后果See Jesus, see Judas看看耶稣，看看犹大（出卖耶稣让耶稣被钉十字架，最后自杀）See Caesar, see Brutus看看凯撒，看看布鲁图斯（凯撒待他如儿子，暗杀凯撒，最后自杀）See success is like suicide看看成名好像就已预定自杀Suicide, it’s a suicide自杀，是的，是自杀If you succeed prepare to be crucified如果你红了要有被钉死在十字架上的准备Media meddles媒体的骚扰Niggaz sue you, you settle小人的起诉，这些你都得面对Every step you take向成功迈出的每一小步They remind you, you ghetto他们就会提醒你，你永远是个穷鬼So it’s tough being Bobby Brown所以成为鲍比·布朗（美国流行乐歌星）不容易To be Bobby then you have to be Bobby now要成为Bobby你就必去承受Bobby现在承受的（吸毒）And the question is, is to have had and lost问题就在于，曾经拥有却失去Better than not having at all?要比一无所有要好吗？Because…因为…Oh and I’m just waiting til the shine wears offOh, 我只不过想等着外面的强光褪去Oh and I’m just waiting til the shine wears offOh, 我只不过想等着外面的强光褪去Oh Oh Oh Oh OhOh Oh Oh Oh OhJust because I’m losing我只不过是迷茫着Doesn’t mean I’m lost!不意味着我失败了 打个小广告字幕制作软件是Arctime，很棒的一个软件，操作超级简单。另外喜欢英语歌的同学可以看看我的网易云音乐歌单，初中到现在的歌单……]]></content>
      <categories>
        <category>beautiful</category>
        <category>share</category>
      </categories>
      <tags>
        <tag>沉迷于删删改改</tag>
        <tag>beautiful</tag>
        <tag>share</tag>
        <tag>video</tag>
        <tag>epic</tag>
        <tag>coldplay</tag>
        <tag>music</tag>
        <tag>光</tag>
        <tag>开心</tag>
        <tag>system-software</tag>
        <tag>诗</tag>
        <tag>目标</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Coldplay - Fix You]]></title>
    <url>%2Fbeautiful%2Fshare%2F2017%2F04%2F15%2Fcoldplay-fix-you.html</url>
    <content type="text"><![CDATA[视频来自Coldplay的《Live 2012》，是Coldplay在2012年世界巡演「Mylo Xyloto Tour」中来自Paris的现场录像，当看到主唱Chris Martin含泪呐喊时，我和镜头中那台下的小女孩一样，头皮发麻…… 视频(function(){var player = new DPlayer({"container":document.getElementById("dplayer1"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/2.2.3.2-Coldplay%20-%20Fix%20You%20%28Live%202012%20from%20Paris%29.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() evoL ni eveileB 音乐[ar:Coldplay] [ti:Fix You] [al:X&Y] [by:https://reuixiy.github.io] [length:4:53] [00:00.00]Coldplay - Fix You [00:13.32] [00:13.33]When you try your best but you don't succeed [00:20.01]When you get what you want but not what you need [00:25.93]When you feel so tired but you can't sleep [00:33.07]Stuck in reverse [00:40.17]And the tears come streaming down your face [00:48.00]When you lose something you can't replace [00:55.22]When you love someone but it goes to waste [01:01.98]Could it be worse? [01:09.00]Lights will guide you home [01:19.11]And ignite your bones [01:25.51]And I will try to fix you [01:44.39]And high up above or down below [01:49.86]When you're too in love to let it go [01:57.05]But if you never try you'll never know [02:04.11]Just what you're worth [02:13.44]Lights will guide you home [02:21.70]And ignite your bones [02:29.00]And I will try to fix you [03:29.29]I see a stream down your face [03:35.87]when you lose something you cannot replace [03:42.72]I see a stream down your face [03:49.48]And I [03:54.58]I see a stream down your face [04:03.57]I promise you I will learn from all my mistakes [04:09.90]I see a stream down your face [04:16.58]And I [04:21.78]Lights will guide you home [04:31.62]And ignite your bones [04:37.82]And I will try to fix you var ap = new APlayer({ element: document.getElementById("aplayer0"), narrow: false, autoplay: false, showlrc: 2, music: { title: "Fix You", author: "Coldplay", url: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music/Coldplay%20-%20Fix%20You.mp3", pic: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music-cover/coldplay-fix-you.png", } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);]]></content>
      <categories>
        <category>beautiful</category>
        <category>share</category>
      </categories>
      <tags>
        <tag>beautiful</tag>
        <tag>share</tag>
        <tag>video</tag>
        <tag>coldplay</tag>
        <tag>music</tag>
        <tag>love</tag>
        <tag>头皮发麻</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大脑-联想-人工智能]]></title>
    <url>%2Fphilosophy%2Fhow%2F2017%2F04%2F04%2Fassociation-brain-ai.html</url>
    <content type="text"><![CDATA[随机在数学中也能表达，那么如果人工智依靠数学加上随机变化，再获得一种选择关系，在时间的怀抱中，人工智能是否也能进化？变成聪明的人工智能。 而计算机在某些方面远超人脑，这是否意味着进化的时间尺度也会有所不同，人工智能的进化时间是否会远少于人脑的进化时间？ 源慕课 大脑的奥秘：神经科学导论 3.3节 https://mooc1-2.chaoxing.com/course/95211020.html]]></content>
      <categories>
        <category>philosophy</category>
        <category>how</category>
      </categories>
      <tags>
        <tag>philosophy</tag>
        <tag>association</tag>
        <tag>after-physics(形而上学)</tag>
        <tag>synthesis(综合)</tag>
        <tag>questions</tag>
        <tag>沉迷于删删改改</tag>
        <tag>科幻</tag>
        <tag>未来</tag>
        <tag>computer</tag>
        <tag>how</tag>
        <tag>人工智能</tag>
        <tag>大脑</tag>
        <tag>极限</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[0或其它]]></title>
    <url>%2Fphilosophy%2Fwhat%2F2017%2F03%2F12%2F0-or-others.html</url>
    <content type="text"><![CDATA[数学是造物主的语言，数学能让我们知道世界的本质。那么请问：数学的本质是？ 我们又依靠何种工具知道数学的本质，亦或，造物主创造数学时又用了何种语言？ tips | association开个小差：探讨本质途径，若是由树状图的下到上，那么树状图是/\还是\/？亦或，本质是0还是其它？ 源慕课 数学的奥秘：本质与思维 1.2节 https://mooc1-2.chaoxing.com/course/95210912.html]]></content>
      <categories>
        <category>philosophy</category>
        <category>what</category>
      </categories>
      <tags>
        <tag>philosophy</tag>
        <tag>what</tag>
        <tag>association</tag>
        <tag>after-physics(形而上学)</tag>
        <tag>synthesis(综合)</tag>
        <tag>questions</tag>
        <tag>想象</tag>
        <tag>空间</tag>
        <tag>tips</tag>
        <tag>真理</tag>
        <tag>沉迷于删删改改</tag>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[维是什么？]]></title>
    <url>%2Fphilosophy%2Fwhat%2F2017%2F03%2F12%2Fdimension.html</url>
    <content type="text"><![CDATA[源慕课 数学的奥秘：本质与思维 1.1节 https://mooc1-2.chaoxing.com/course/95210912.html]]></content>
      <categories>
        <category>philosophy</category>
        <category>what</category>
      </categories>
      <tags>
        <tag>philosophy</tag>
        <tag>what</tag>
        <tag>association</tag>
        <tag>after-physics(形而上学)</tag>
        <tag>synthesis(综合)</tag>
        <tag>questions</tag>
        <tag>想象</tag>
        <tag>tips</tag>
        <tag>沉迷于删删改改</tag>
        <tag>维</tag>
        <tag>对立</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Danny MacAskill’s Wee Day Out]]></title>
    <url>%2Fbeautiful%2Fshare%2F2017%2F03%2F11%2Fdanny-macaskills-wee-day-out.html</url>
    <content type="text"><![CDATA[(function(){var player = new DPlayer({"container":document.getElementById("dplayer4"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/Danny%20MacAskill%E2%80%99s%20Wee%20Day%20Out.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()]]></content>
      <categories>
        <category>beautiful</category>
        <category>share</category>
      </categories>
      <tags>
        <tag>beautiful</tag>
        <tag>share</tag>
        <tag>video</tag>
        <tag>开心</tag>
        <tag>美景</tag>
        <tag>自行车</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[政策能解决贫富分化？]]></title>
    <url>%2Fphilosophy%2Fwhy%2F2017%2F03%2F10%2Fpolicy-polarization-rich-poor.html</url>
    <content type="text"><![CDATA[analysis贫富分化严重因此给富人增税，给农民低保。 这是错误的，因为这里达到平等的标准是金钱，而这是不正确的。达到平等的标准是依托于人性的，而非金钱。 若国家以金钱为标准来达到所谓的平等，结果： 挫伤精英层 腐化平民层 压抑中间层 tips | association物有自然，事有合离…巇始有眹…或抵而塞之，或抵而覆之。摘改自《鬼谷子》抵巇第四 意思是说，事物有离合，则会有“巇”（间隙），那么： 堵住间隙，保持原来 打破间隙，创造全新 critique1234567查拉图斯特拉：市民！我们现在发现真理了吗？市民：没有查拉图斯特拉：还没发现真理！真理还是未知呢！？市民：是查拉图斯特拉：人生来拥有自由！？市民：是查拉图斯特拉：那每个人都有讨论未知的权利啊！为什么不能大声讨论马克思的对错呢！？ 当今某理论如中世纪的教条高高悬挂于东方的上空，如培根《新工具》中的剧场的假象，限制自身，发展困难。当前背景，突破困难。]]></content>
      <categories>
        <category>philosophy</category>
        <category>why</category>
      </categories>
      <tags>
        <tag>philosophy</tag>
        <tag>association</tag>
        <tag>tips</tag>
        <tag>真理</tag>
        <tag>沉迷于删删改改</tag>
        <tag>critique(批判)</tag>
        <tag>bb-for-fun</tag>
        <tag>practical-science(实践科学)</tag>
        <tag>前额一冷</tag>
        <tag>对立</tag>
        <tag>analysis(分析)</tag>
        <tag>假象</tag>
        <tag>查拉图斯特拉</tag>
        <tag>教条</tag>
        <tag>why</tag>
        <tag>贫富分化</tag>
        <tag>平等</tag>
        <tag>《鬼谷子》</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[断章]]></title>
    <url>%2Fbeautiful%2Fshare%2F2017%2F02%2F28%2Ffragment.html</url>
    <content type="text"><![CDATA[FragmentWhen you watch the scenery from the bridge,The sightseer watches you from the balcony.The bright moon adorns your window,While you adorn another’s dream. 断章 – 卞之琳你站在桥上看风景，看风景的人在楼上看你。明月装饰了你的窗子，你装饰了别人的梦。 The Chainsmokers &amp; Coldplay – Something Just Like This (Lyric)(function(){var player = new DPlayer({"container":document.getElementById("dplayer10"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/The%20Chainsmokers%20%26%20Coldplay%20-%20Something%20Just%20Like%20This%20%28Lyric%29.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()]]></content>
      <categories>
        <category>beautiful</category>
        <category>share</category>
      </categories>
      <tags>
        <tag>想象</tag>
        <tag>空间</tag>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>share</tag>
        <tag>video</tag>
        <tag>coldplay</tag>
        <tag>music</tag>
        <tag>love</tag>
        <tag>诗</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[过去和将来]]></title>
    <url>%2Fphilosophy%2Fwhy%2F2017%2F02%2F07%2Fnotnow.html</url>
    <content type="text"><![CDATA[analysis过去不能改变，未来不可预知，能改变的只是现在。 这是错误的，理由： 时间无限分割 不能感受到现在 只能感受到过去 因此改变现在无意义 要为未来而生活 tips | association有时候看电影不如看文字，想象力最丰富的是自己的大脑。 critique有时候抱怨现在不如拥抱未来，将时间无限分割，就是那真正的现在，但自己压根无法此刻改变它——真正的现在。故抱怨现在也就只是： 抱怨过去，很多老师言抱怨过去是毫无意义的，没有后悔药，无意义。 抱怨未来，未来无法预知就抱怨，如同《三傻大闹宝莱坞》的那个信神烧香的那位，生活对他来说就只有未来的恐惧，无意义。 所以不要抱怨，因为自己此刻能抱怨的只有过去和未来，但都没意义。抱怨现在？时间无限分割，此刻自己无法对现在做任何事。 不要抱怨，要拥抱。抱怨无法让你快乐，拥抱才能让自己快乐。并且，时间无限分割，此刻的自己拥抱的只有未来。 （不适合不把快乐作为自己活着的意义所在之）]]></content>
      <categories>
        <category>philosophy</category>
        <category>why</category>
      </categories>
      <tags>
        <tag>philosophy</tag>
        <tag>what</tag>
        <tag>association</tag>
        <tag>after-physics(形而上学)</tag>
        <tag>想象</tag>
        <tag>tips</tag>
        <tag>沉迷于删删改改</tag>
        <tag>图片</tag>
        <tag>critique(批判)</tag>
        <tag>未来</tag>
        <tag>开心</tag>
        <tag>目标</tag>
        <tag>bb-for-fun</tag>
        <tag>practical-science(实践科学)</tag>
        <tag>notnow</tag>
        <tag>analysis(分析)</tag>
        <tag>大脑</tag>
        <tag>why</tag>
        <tag>时间</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的小Web服务器 - 树莓派 搭建个人博客遇到的问题]]></title>
    <url>%2Ftechnology%2Fembedded%2Fraspberry-pi%2F2017%2F02%2F02%2Fraspberry-pi-wordpress-blog-questions.html</url>
    <content type="text"><![CDATA[bb - for - bb宝宝只想用树莓派搭建个人博客玩玩啊，特么为啥如此麻烦？遇到的问题，百度，Google，最后还是解决了，。 现将问题收集如下，希望对看到的人有用。我用树莓派搭建的网站的架构：Linux(Raspbian)+Nginx+MySQL+PHP+WordPress。 未能找到WordPress内容目录找到WordPress的根目录，找到wp-config.php文件，在文件最后添加如下代码： 12345/** Override default file permissions */if(is_admin()) &#123;add_filter('filesystem_method', create_function('$a', 'return "direct";' ));define( 'FS_CHMOD_DIR', 0751 );&#125; WordPress需要访问您网页服务器的权限，请输入您的FTP登录凭据以继续在wp-config.php文件中添加： 123define("FS_METHOD","direct");define("FS_CHMOD_DIR", 0777);define("FS_CHMOD_FILE", 0777); 安装主题失败，无法创建目录1$ sudo chmod -R 777 /var/www/html/ 在WordPress中使用裁剪图片功能时，出现：“在裁剪您的图像时发生了错误。”12$ sudo apt-get update$ sudo apt-get install php5-gd 删除自豪的使用WordPress1编辑wp-content/themes/twentyseventeen/template-parts/footer/site-info.php 上传文件失败，提示一个http错误https://www.luozhengrong.com/servers/nginx/234.html WordPress如何去除google字体？https://www.zhihu.com/question/24762608?sort=created WordPress建站中15个常见的错误（启用缓存插件）https://www.wpdaxue.com/wp-15-common-mistakes.html 秘诀：善用Google有些东西还真是百度半天一脸懵逼，Google一下瞬间解决，为啥？ Google能搜到比较新的个人博客的页面 Google不卖药 技术嘛，很多东东都有人玩过了，玩过了的大神很多都会写自己的教程，放在自己的博客上。能自己写博客，质量要好点，还有些比较新的东东，大神的博客不会让你失望。 可是Google被墙了啊，这里推荐一下老D的hosts，不过估计能看到这篇文章的人，都已具备这样的能力。 为你点首歌[ar:Owl City] [ti:The Salwater Room] [al:Hot Air Balloon] [by:https://reuixiy.github.io] [length:4:55] [00:00.00]Owl City - The Salwater Room [00:33.58] [00:33.59]I opened my eyes last night [00:39.73]and saw you in the low light [00:43.06]Walking down by the bay, on the shore, [00:47.51]staring up at the planes that aren't there anymore [00:51.64]I was feeling the night grow old [00:56.98]and you were looking so cold [01:00.03]Like an introvert, I drew my over shirt [01:04.53]Around my arms and began to shiver violently before [01:08.99]You happened to look and see [01:14.39]the tunnels all around me [01:17.15]Running into the dark underground [01:21.87]All the subways around create a great sound [01:25.51]To my motion fatigue: farewell [01:31.43]With your ear to a seashell [01:34.18]You can hear the waves in underwater caves [01:38.51]As if you actually were inside a saltwater room [01:52.55]Time together is just never quite enough [01:57.75]When you and I are alone, I've never felt so at home [02:02.34]What will it take to make or break this hint of love [02:06.80]We need time, only time [02:10.50]When we're apart whatever are you thinking of [02:15.21]If this is what I call home, why does it feel so alone [02:19.34]So tell me darling, do you wish we'd fall in love [02:24.03]All the time, all the time [02:28.54]Can you believe that the crew has gone [02:34.02]and would't let me sign o [02:36.56]All my islands have sunk in the deep, [02:41.04]so I can hardly relax or even oversleep [02:44.99]I feel as if I were home some nights [02:50.44]when we count all the ship lights [02:53.66]I guess we'll never know why sparrows love the snow [02:58.09]We'll turn off all of the lights and set this ballroom aglow [03:12.54]Time together is just never quite enough [03:16.63]When you and I are alone, I've never felt so at home [03:21.22]What will it take to make or break this hint of love [03:25.42]We need time, only time [03:29.88]When we're apart whatever are you thinking of [03:34.75]If this is what I call home, why does it feel so alone [03:38.69]So tell me darling, do you wish we'd fall in love [03:43.09]All the time, all the time [04:03.53]Time together is just never quite enough [04:09.37]When we're apart whatever are you thinking of [04:12.68]What will it take to make or break this hint of love [04:17.24]So tell me darling, do you wish we'd fall in love [04:23.52]All the time, all the time var ap = new APlayer({ element: document.getElementById("aplayer8"), narrow: false, autoplay: false, showlrc: 2, music: { title: "The Saltwater Room", author: "Owl City", url: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music/Owl%20City%20-%20The%20Saltwater%20Room.mp3", pic: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music-cover/owl-city-hot-air-balloon.jpg", } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);]]></content>
      <categories>
        <category>technology</category>
        <category>embedded</category>
        <category>raspberry-pi</category>
      </categories>
      <tags>
        <tag>questions</tag>
        <tag>tips</tag>
        <tag>music</tag>
        <tag>bb-for-bb</tag>
        <tag>technology</tag>
        <tag>linux</tag>
        <tag>embedded</tag>
        <tag>raspberry-pi</tag>
        <tag>树莓派</tag>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[给我起个名字吧 - 7]]></title>
    <url>%2Fbeautiful%2Fbb-for-fun%2F2017%2F01%2F28%2Funtitled-7.html</url>
    <content type="text"><![CDATA[正是夕阳西下时，攀上楼顶，一直盯着那天空盯着浩瀚天空面迎舒适南风她也吹拂着天空云朵天空移步的云朵将我呢由眼前带到脑后哇！忽现一架飞机，逆着移步的云朵如逆着时间将我的美丽童年带来她，真美～舒适南风难忘今生]]></content>
      <categories>
        <category>beautiful</category>
        <category>bb-for-fun</category>
      </categories>
      <tags>
        <tag>空间</tag>
        <tag>沉迷于删删改改</tag>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>love</tag>
        <tag>诗</tag>
        <tag>童话</tag>
        <tag>bb-for-fun</tag>
        <tag>notnow</tag>
        <tag>摄影</tag>
        <tag>发呆</tag>
        <tag>untitled</tag>
        <tag>时间</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[给我起个名字吧 - 6]]></title>
    <url>%2Fbeautiful%2Fbb-for-fun%2F2017%2F01%2F17%2Funtitled-6.html</url>
    <content type="text"><![CDATA[品味一种纯糖果，各式口感竟皆有单曲循环却病躺，随机播放即变换困于倦于这现实，拥抱梦想何不试星辰大海应忽现，近处视界皆将变 [ar:Coldplay] [ti:Always In My Head] [al:Ghost Stories] [by:https://reuixiy.github.io] [length:3:36] [00:00.00]Coldplay - Always In My Head [01:04.42] [01:04.43]I think of you [01:11.93]I haven't slept [01:19.71]I think I do [01:21.97]But, I don't forget [01:30.59]My body moves [01:34.14]Goes where I will [01:37.70]But though I try my heart stays still [01:45.61]It never moves [01:48.68]Just won't be led [01:51.53]And so my mouth waters, to be fed [01:58.79]And you're always in my head [02:06.53]You're always in my head [02:13.61]You're always in my head [02:21.01]You're always in my head [02:43.23]You're always in my head [02:50.91]Always in my... [02:54.72]Always in my... [03:00.15]This, I guess, is to tell you you're chosen out from the rest... var ap = new APlayer({ element: document.getElementById("aplayer12"), narrow: false, autoplay: false, showlrc: 2, music: { title: "Always In My Head", author: "Coldplay", url: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music/Coldplay%20-%20Always%20In%20My%20Head.mp3", pic: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music-cover/coldplay-ghost-stories.jpg", } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);]]></content>
      <categories>
        <category>beautiful</category>
        <category>bb-for-fun</category>
      </categories>
      <tags>
        <tag>想象</tag>
        <tag>空间</tag>
        <tag>沉迷于删删改改</tag>
        <tag>beautiful</tag>
        <tag>星空</tag>
        <tag>未来</tag>
        <tag>epic</tag>
        <tag>coldplay</tag>
        <tag>music</tag>
        <tag>love</tag>
        <tag>诗</tag>
        <tag>目标</tag>
        <tag>bb-for-fun</tag>
        <tag>前额一冷</tag>
        <tag>untitled</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[给我起个名字吧 - 5]]></title>
    <url>%2Fbeautiful%2Fbb-for-fun%2F2017%2F01%2F12%2Funtitled-5.html</url>
    <content type="text"><![CDATA[（删除遗失）……]]></content>
      <categories>
        <category>beautiful</category>
        <category>bb-for-fun</category>
      </categories>
      <tags>
        <tag>沉迷于删删改改</tag>
        <tag>beautiful</tag>
        <tag>critique(批判)</tag>
        <tag>bb-for-fun</tag>
        <tag>学习</tag>
        <tag>悲伤</tag>
        <tag>untitled</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[给我起个名字吧 - 4]]></title>
    <url>%2Fbeautiful%2Fbb-for-fun%2F2016%2F12%2F31%2Funtitled-4.html</url>
    <content type="text"><![CDATA[诗瞧，是个婴儿，刚刚来到这个世界。无尽黑暗中感受到这世界的那光，挣开眼皮，眼睛大大，对这世界的渴望有多大。黑夜降临在白云之上。咦～原来这世界并非一直有那光，眼皮闭合。咦～好像有光，但只是一点，眼皮挣开。咦～不是一点，而是很多很多点。不相信，闭，开，闭，开。真的！兴奋不已，手脚共舞。这些点点光照亮了一个面孔，姑且这样称呼吧，第一次眼皮挣开时的所见。这面孔带着微笑，笑容也带着婴儿。小手向着一脑中最亮的一亮点，想要它。大手把小手向着另一亮点，小手要挣开，大手却紧闭。紧闭的大手是这个世界给婴儿紧紧的拥抱，欢迎来到这个世界。但婴儿却哭了，闭上了双眼，然后挣开了。毕竟这个世界至少有光，有婴儿想要的它——那一亮点。虽然小手被大手紧握，但眼睛依然可以瞥向那一亮点，那一亮点。这个世界于是开始带着婴儿带着婴儿爬行，带着婴儿说话，终于，婴儿学会了走路。婴儿要走向天空，拿到它——那一亮点。可是，婴儿发现，走路，只能走向大手的那亮点说话，只有这路上的人能懂，就连爬行啊，也只能爬向大手的那亮点。那一亮点啊，只能眼睛盯着。盯着？不看路？因为婴儿发现眼睛没必要看路——路已铺好。其实自己就在一辆一辆行驶在直线上的单向列车上。起始站是大手握紧小手时，终点站是到大手的亮点时。能动能说话，最重要的是能享受娱乐，这消耗掉大部分无聊。对那一亮点也只是娱乐完后瞄一眼罢了。毕竟一生的起始站和终点站已定，纵情享乐吧！咦~自己不就是在这样一辆固定地点+不固定时间+物质变换的单向列车上？何况这个世界教导我们——这是达到一个光点最快的途径。两点之间，直线段最短。一起一终，这没毛病。一种螺旋线似的向远处拉镜头。我看全了这个世界——一条条直线段斜立在空中，几乎没有竖直的直线段。直线段的两个端点也不是个人的一前一后时间点的不同事件，而是——混乱，各种知识光点组成的真理。这样对这个世界而言，因为每个人的时间有限而直线段中的每个人，花了大部分时间在娱乐上。结果是，这个世界达到某个知识光点的时间加长。而到达真理的一些小点=非真理。咦～太危险，我要告诉婴儿。婴儿听了后，不急不忙道：知识光点能否及时达到与我无关，好好享乐吧。知识光点不能及时达到带来的后果——这个世界——人类世界能否存活，那是遥远的子孙后代的事。反正对我而言，我不就是在这样一辆固定地点+不固定时间+物质变换的单向列车上？好好享乐吧。至于你所谓的真理这是什么鬼？与我有什么关系！好好享乐吧！那一亮点？好好享乐吧！想它作甚。目标的达成，不是两点连线。（第一次通宵） 补充(2017.07.24)写这个的时候，自己脑中是有一个想象的世界，而且我努力把它想的任性一点，尽一切可能把它变得很怪，然后尽可能用适当的文字描述。 想不到今天看阿西莫夫的《九个明天系列》，其中的《最后的问题》这篇，我竟然感觉和这诗描述的很像，都是任性的想象。这篇中，阿西莫夫是依“熵”而展开的极限想象，认为世界终有一天会毁灭，也许大多数人认为这太遥远，与自己无关，但终有那么一天。 不管怎么说，因某一依据而创造脱离现实的任性想象世界还是很有趣，哈哈哈哈哈～]]></content>
      <categories>
        <category>beautiful</category>
        <category>bb-for-fun</category>
      </categories>
      <tags>
        <tag>after-physics(形而上学)</tag>
        <tag>想象</tag>
        <tag>真理</tag>
        <tag>沉迷于删删改改</tag>
        <tag>beautiful</tag>
        <tag>好奇心</tag>
        <tag>critique(批判)</tag>
        <tag>科幻</tag>
        <tag>未来</tag>
        <tag>光</tag>
        <tag>诗</tag>
        <tag>目标</tag>
        <tag>bb-for-fun</tag>
        <tag>维</tag>
        <tag>practical-science(实践科学)</tag>
        <tag>前额一冷</tag>
        <tag>知识</tag>
        <tag>学习</tag>
        <tag>shape</tag>
        <tag>对立</tag>
        <tag>看书</tag>
        <tag>quotes</tag>
        <tag>阿西莫夫</tag>
        <tag>极限</tag>
        <tag>补充</tag>
        <tag>untitled</tag>
        <tag>时间</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浅谈学哲学 - 那珍贵的喜悦]]></title>
    <url>%2Fphilosophy%2Fhow%2F2016%2F12%2F29%2Fon-philosophy-of-learning.html</url>
    <content type="text"><![CDATA[question想细细读读哲学，不知道买哪样的书好。 tips因人而异。我读了一些，图书馆借的，自己买的纸质的，电子盗版的，各种各样，有名著，也有一些普通读物，杂七杂八。 但是首先，既然想细细读读哲学，肯定是有某种好奇心吧，记住这种好奇心，以及这种好奇心带来的兴趣，带来的等等（好奇心的子集）。 哲学史我一开始看的时候，就特别想了解它的源头。所以感觉首先要对哲学史（已知世界，非局部）有了解，这样脑中能有一些观点（“砖块”），所以可以读一些哲学史的书（批判性的读）。 这期间对自己好奇的（包含子集）肯定会记忆深刻，所以不用过于焦虑，担心自己记不住看过的东东（记住的是自己好奇的，想细细读读哲学是因为某种好奇，这结果没毛病）。 名著然后可以读一些自己感兴趣的名著，以及一些经典名著，比如《老子》，亚里士多德的《形而上学》，等等。 association | shape期间，可能由于好奇心，加上想象，于是拿这些“砖块”做一些东东——创新（一些些东东能创造多大的东东呢？）。 甚至想把“砖块”拆解成原子（原子还能拆解么？），或者想研究“砖块”的外表形状（虽然摸不着，但它难道没有神秘的美和力量？）。 bb - 1这过程啊，顺从那好奇心，发挥着那想象，酒神狄俄尼索斯的狂欢，日神阿波罗的至高喜悦，此乐何极！ bb - 2本来已经睡着了，但楞是被打王者的室友吵醒了，心情烦躁。打开QQ看看，看到这消息，想回一下，躺在床上，拿着手机，戴着耳机，听着Coldplay的In My Place。码着码着，就码了一个半小时的字，心情也趋于平静。 2016-12-29 02:43:05 Coldplay - In My Place[ar:Coldplay] [ti:In My Place] [al:A Rush Of Blood To The Head] [by:https://reuixiy.github.io] [length:3:48] [00:00.00]Coldplay - In My Place [00:33.23] [00:33.24]In my place, in my place [00:38.14]Were lines that I couldn't change [00:41.24]I was lost, oh yeah [00:47.53]I was lost, I was lost [00:50.98]Crossed lines I shouldn't have crossed [00:54.47]I was lost, oh yeah [00:59.55]Yeah, how long must you wait for it? [01:07.58]Yeah, how long must you pay for it? [01:14.16]Yeah, how long must you wait for it? [01:22.50]For it [01:40.09]I was scared, I was scared [01:44.05]Tired and under-prepared [01:47.03]But I'll wait for it [01:53.20]And if you go, if you go [01:57.13]Leave me down here on my own [02:00.20]Then I'll wait for you, yeah [02:05.50]Yeah, how long must you wait for it? [02:13.53]Yeah, how long must you pay for it? [02:20.11]Yeah, how long must you wait for it? [02:28.23]For it [02:58.12]Singing please, please, please [03:03.08]Come back and sing to me [03:06.36]To me, me [03:09.40]Come on and sing it out, now, now [03:16.21]Come on and sing it out to me, me [03:23.05]Come back and sing it [03:26.08]In my place, in my place [03:29.76]Were lines that I couldn't change [03:32.81]I was lost, oh yeah [03:37.42]Oh yeah var ap = new APlayer({ element: document.getElementById("aplayer9"), narrow: false, autoplay: false, showlrc: 2, music: { title: "In My Place", author: "Coldplay", url: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music/Coldplay%20-%20In%20My%20Place.mp3", pic: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music-cover/coldplay-in-my-place.jpg", } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);]]></content>
      <categories>
        <category>philosophy</category>
        <category>how</category>
      </categories>
      <tags>
        <tag>philosophy</tag>
        <tag>association</tag>
        <tag>synthesis(综合)</tag>
        <tag>questions</tag>
        <tag>想象</tag>
        <tag>空间</tag>
        <tag>tips</tag>
        <tag>沉迷于删删改改</tag>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>好奇心</tag>
        <tag>epic</tag>
        <tag>coldplay</tag>
        <tag>music</tag>
        <tag>开心</tag>
        <tag>诗</tag>
        <tag>目标</tag>
        <tag>bb-for-fun</tag>
        <tag>practical-science(实践科学)</tag>
        <tag>前额一冷</tag>
        <tag>how</tag>
        <tag>shape</tag>
        <tag>尼采</tag>
        <tag>看书</tag>
        <tag>极限</tag>
        <tag>罗素</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[给我起个名字吧 - 3]]></title>
    <url>%2Fbeautiful%2Fbb-for-fun%2F2016%2F12%2F07%2Funtitled-3.html</url>
    <content type="text"><![CDATA[你们正向着那天空越飞越高，我站在地上，看着你们在我眼中越来越小。很开心，插着腰，大笑！ 自讽。]]></content>
      <categories>
        <category>beautiful</category>
        <category>bb-for-fun</category>
      </categories>
      <tags>
        <tag>空间</tag>
        <tag>沉迷于删删改改</tag>
        <tag>beautiful</tag>
        <tag>critique(批判)</tag>
        <tag>bb-for-fun</tag>
        <tag>前额一冷</tag>
        <tag>对立</tag>
        <tag>尼采</tag>
        <tag>quotes</tag>
        <tag>悲伤</tag>
        <tag>untitled</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[bb-for-fun]]></title>
    <url>%2Fbeautiful%2Fbb-for-fun%2F2016%2F11%2F29%2Fbb-for-fun.html</url>
    <content type="text"><![CDATA[看得起乞丐吗？我看得起一种乞丐：物质追求定为乞丐，精神追求定为好奇心。为什么是好奇心？因为好奇心，想要看看黑暗里有什么。 大学，各种快乐漫天而来，忍不住沉浸其中。可是——有时真像个小孩子，面对漫天自己真心的喜爱，却——楞在游乐场中央。大学，课堂上，对我这些漫天而来的快乐，却——没有落脚点。更甚，给了我一个选择——这饭不吞完，就不让你玩；这饭若吞完，我完。大学，还渴望糖果——男女生之间的纯情糖果。为什么？小孩子为什么渴望糖果？有时，宛如神人。清楚的看到，我曾描绘的未来触手可及。有时，宛如醉酒。时间在飞逝，得到的却是——账单。我，黑洞的大脑却希望得到外界一束光的关怀。我，被照耀的大脑却渴望那无尽漆黑的吞噬。因为好奇心，想要看看黑暗里有什么。 2016-11-29 01:35]]></content>
      <categories>
        <category>beautiful</category>
        <category>bb-for-fun</category>
      </categories>
      <tags>
        <tag>沉迷于删删改改</tag>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>好奇心</tag>
        <tag>critique(批判)</tag>
        <tag>epic</tag>
        <tag>love</tag>
        <tag>光</tag>
        <tag>诗</tag>
        <tag>目标</tag>
        <tag>bb-for-fun</tag>
        <tag>前额一冷</tag>
        <tag>黑暗</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[给我起个名字吧 - 2]]></title>
    <url>%2Fbeautiful%2Fbb-for-fun%2F2016%2F11%2F19%2Funtitled-2.html</url>
    <content type="text"><![CDATA[暗，深，静稀疏星光带我，入极昼待到天亮，万物复苏满天的光辉与万物的生机啊你！你又为何要将我——将我，硬生生踢出——踢出，极昼！难道你！你不知道？那极昼啊——起源！终结！乐之所极！]]></content>
      <categories>
        <category>beautiful</category>
        <category>bb-for-fun</category>
      </categories>
      <tags>
        <tag>沉迷于删删改改</tag>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>星空</tag>
        <tag>epic</tag>
        <tag>光</tag>
        <tag>开心</tag>
        <tag>诗</tag>
        <tag>目标</tag>
        <tag>bb-for-fun</tag>
        <tag>黑暗</tag>
        <tag>untitled</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[给我起个名字吧 - 1]]></title>
    <url>%2Fbeautiful%2Fbb-for-fun%2F2016%2F10%2F31%2Funtitled-1.html</url>
    <content type="text"><![CDATA[发呆，书写将之保持甚至，深入音乐，美妙的催化剂]]></content>
      <categories>
        <category>beautiful</category>
        <category>bb-for-fun</category>
      </categories>
      <tags>
        <tag>沉迷于删删改改</tag>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>music</tag>
        <tag>bb-for-fun</tag>
        <tag>音乐可视化</tag>
        <tag>quotes</tag>
        <tag>发呆</tag>
        <tag>untitled</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[悲伤]]></title>
    <url>%2Fbeautiful%2Fbb-for-fun%2F2016%2F08%2F07%2Fsadness.html</url>
    <content type="text"><![CDATA[漂泊者 - 尼采一个漂泊者在夜色中前行。步伐坚定；蜿蜒的山谷和漫长的山路——他摸索着前进。夜色很美——他迈步向前，毫不停止，不知道他的路还要通往哪里。那时，一只鸟儿在夜色中歌唱：“鸟儿啊，你干吗要这样！你为何拦住我的腿和心，把这动人的伤心的声音灌进我耳中，使我不得不立停、不得不倾听——你为何用欢迎的歌声将我逗引？”好鸟儿停止歌唱而答问：“不，漂泊者，不！我何曾用歌声将你逗引——我是逗引高处的雌禽——跟你有什么关系？我孤孤单单，感不到夜色之美——跟你有什么关系？因为你应当独行，决不能、绝不能立停！你干吗还站在这里？我的清脆的歌声勾起你什么心事，你这漂泊的游子？”好鸟儿默默地沉思：“我的清脆的歌声勾起他什么心事？他干吗还站在这里？这个可怜、可怜的漂泊的游子！” bb - 1我遥望远方悲泣，看不到征帆回航。噫！谁悲失路之人！？ bb - 2闭眼！漂泊者，夜空的浩瀚星辰与你相关？闭眼！漂泊者，浩瀚星辰尽收脑底。夜空的浩瀚星辰与你何关？！漂泊者，闭眼！这音符之光，将你的浩瀚星辰点亮！波动！狂欢！噫！那夜空浩瀚的星辰与！你！无！关！]]></content>
      <categories>
        <category>beautiful</category>
        <category>bb-for-fun</category>
      </categories>
      <tags>
        <tag>想象</tag>
        <tag>沉迷于删删改改</tag>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>星空</tag>
        <tag>光</tag>
        <tag>诗</tag>
        <tag>目标</tag>
        <tag>bb-for-fun</tag>
        <tag>尼采</tag>
        <tag>悲伤</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[她走在美的光彩中 - 拜伦]]></title>
    <url>%2Fbeautiful%2Fshare%2F2016%2F07%2F19%2Fshe-walks-in-beauty.html</url>
    <content type="text"><![CDATA[She walks in beauty - ByronShe walks in beauty, like the nightOf cloudless climes and starry skies;And all that’s best of dark and brightMeet in her aspect and her eyes:Thus mellow’d to that tender lightWhich heaven to gaudy day denies.One shade the more, one ray the less,Had half impair’d the nameless grace… 她走在美的光彩中 - 拜伦她走在美的光彩中，如夜晚皎洁无云而且繁星漫天明与暗的最美妙的色泽在她的仪容和秋波里呈现耀目的白日只嫌光线过强它比那光亮柔和且幽暗增一分影，减一线光就会损害这难言的美……]]></content>
      <categories>
        <category>beautiful</category>
        <category>share</category>
      </categories>
      <tags>
        <tag>想象</tag>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>share</tag>
        <tag>星空</tag>
        <tag>love</tag>
        <tag>诗</tag>
        <tag>拜伦</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[性格决定命运？]]></title>
    <url>%2Fphilosophy%2Fhow%2F2016%2F07%2F05%2Fagainst-disposition.html</url>
    <content type="text"><![CDATA[critique其实我很讨厌这个说法，用个排比，用几个问句好像很屌的样子，却让人感到有点不爽！感脚奋斗都是没意义似的。为毛不强调一下自省？通过自省，这是可以改变的呀！ quotes你若要喜欢你自己的价值，就得给世界创造价值。——歌德 谁要游戏人生，他就一事无成；谁不能主宰自己，永远是个奴隶。——歌德]]></content>
      <categories>
        <category>philosophy</category>
        <category>how</category>
      </categories>
      <tags>
        <tag>philosophy</tag>
        <tag>critique(批判)</tag>
        <tag>未来</tag>
        <tag>epic</tag>
        <tag>目标</tag>
        <tag>bb-for-fun</tag>
        <tag>practical-science(实践科学)</tag>
        <tag>how</tag>
        <tag>自省</tag>
        <tag>quotes</tag>
        <tag>性格</tag>
        <tag>教条</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[尼采 - 太阳沉落了]]></title>
    <url>%2Fbeautiful%2Fshare%2F2015%2F12%2F15%2Fnietzsche-die-sonne-gesunken.html</url>
    <content type="text"><![CDATA[太阳在沉西。你不会长久焦渴了，燃烧的心！有一种凉爽，在空气里，我从陌生的嘴里呼吸到这种气息，超乎寻常的大凉爽即将来临。 正午的太阳在燃烧，烈日当空，向你致敬哦，你这阵阵袭来的迅疾的风，午后凉爽的精灵。 空气在流动，平和而纯净。向我投来斜睨的富有魅力之一瞥的不是这夜的眸子？ 坚强些吧，勇敢的心灵！为什么？不用问询。呵，我生命的黄昏呦！太阳总要沉西。 我的生命之日啊，在黄昏中沉落！你的眼睛闪烁出半被灼红的微光；你的泪水流淌着露珠一样的晶莹；你爱情的紫霞你最后迟到的至福悄然流过，在这白茫茫的大海里…… 四周只有波浪、波浪的嬉戏。往日沉重的一切早在蓝色的遗忘中沉去——我的小船正搁浅。多陌生呀——风暴与航行希望和心愿久已淹没，心灵与大海恬然静眠。 第七重孤寂我从未感到过更真切的美妙的静谧更温暖的阳光的辐射。——那不在闪烁，我绝顶上的冰？ 银白、轻捷，像一条鱼，我的小船向远方，悄然驶去。 尼采的照片 说明摘抄自高中图书馆借的《尼采大传》，时间我记不太清楚。这诗是两部分加起来的，在书中的不同位置。记得当时是英语课，还是偷偷在桌子里看，看到诗的后一部分，马上拿纸抄下。英语老师（平时很严格）在上课？脑子里这时哪里特么有这概念？！？！ 不久前我找到了《尼采大传》电子书版，同一出版社，同一译者，但是版次估计与我看那的不同，因为里面的诗与我抄的不同，有需要的，点击下载尼采大传.mobi(2.1 MB)。 勘误和补充(2017.09.25)整理文件时，找到一张图片（下图），不是同一出版社，也不是同一译者。]]></content>
      <categories>
        <category>beautiful</category>
        <category>share</category>
      </categories>
      <tags>
        <tag>想象</tag>
        <tag>图片</tag>
        <tag>beautiful</tag>
        <tag>share</tag>
        <tag>诗</tag>
        <tag>目标</tag>
        <tag>bb-for-bb</tag>
        <tag>前额一冷</tag>
        <tag>下载</tag>
        <tag>尼采</tag>
        <tag>看书</tag>
        <tag>图书馆</tag>
        <tag>补充</tag>
        <tag>勘误</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Funcategorized%2F2010%2F01%2F01%2Ftest.html</url>
    <content type="text"><![CDATA[for testing something new only playlist var options = {"narrow":false,"autoplay":false,"showlrc":3,"mutex":true,"music":[{"title":"Paradise","author":"Coldplay","url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/music/Coldplay%20-%20Paradise%20%281%29.mp3","pic":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/music-cover/coldplay-paradise.jpg","lrc":"https://reuixiy.github.io/uploads/lyrics/coldplay-paradise.lrc"},{"title":"Fix You","author":"Coldplay","url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/music/Coldplay%20-%20Fix%20You.mp3","pic":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/music-cover/coldplay-fix-you.png","lrc":"https://reuixiy.github.io/uploads/lyrics/coldplay-fix-you.lrc"}]}; options.element = document.getElementById("aplayer6"); var ap = new APlayer(options); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); music[ar:Oasis] [ti:Live Forever] [al:Live Forever] [by:https://reuixiy.github.io] [length:4:38] [00:00.00]Oasis - Live Forever [00:12.69] [02:28.88][00:12.70]Maybe I don't really want to know [02:32.25][00:17.28]How your garden grows [02:35.49][00:19.87]I just want to fly Lately did you ever feel the pain [02:42.93][00:28.06]In the morning rain [02:45.64][00:30.57]As it soaks it to the bone [02:49.35][00:34.49]Maybe I just want to fly [02:51.96][00:37.21]I wanna live I don't want to die [02:54.55][00:39.63]Maybe I just want to breath [02:57.08][00:42.30]Maybe I just don't believe [02:59.69][00:44.88]Maybe you're the same as me [03:02.25][00:47.48]We see things they'll never see [03:05.13][00:50.27]You and I are gonna live forever [00:57.74]Maybe I don't really want to know [01:02.56]How your garden grows [01:05.13]I just want to fly Lately did you ever feel the pain [01:13.23]In the morning rain [01:15.93]As it soaks it to the bone [01:19.41]Maybe I will never be [01:22.05]All the things that I want to be [01:24.87]But now is not the time to cry [01:27.41]Now's the time to find out why [01:29.99]I think you're the same as me [01:32.56]We see things they'll never see [01:35.28]You and I are gonna live forever [03:37.23][03:31.95][03:27.60][03:21.79][03:16.83][03:14.68]We're gonna live forever var ap = new APlayer({ element: document.getElementById("aplayer7"), narrow: false, autoplay: false, showlrc: 2, music: { title: "Live Forever", author: "Oasis", url: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music/Oasis%20-%20Live%20Forever.mp3", pic: "https://yixiuer.oss-cn-shanghai.aliyuncs.com/music-cover/oasis-live-forever.jpg", } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); video(function(){var player = new DPlayer({"container":document.getElementById("dplayer7"),"video":{"url":"https://yixiuer.oss-cn-shanghai.aliyuncs.com/Video/404bg.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() emoji什么叫笑哭…… 1什么叫笑哭&lt;img id="github-emoji" src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f602.png" height="20" width="20" /&gt;…… image有标题（title）的图片～ 1![photo_alt](photo_url "photo_title") https://github.com/iissnan/hexo-theme-next/pull/279 galleryFront-matter： 1234567photos:- photo_url_1- photo_url_2- photo_url_3- photo_url_4- photo_url_5- photo_url_6 文件位置：~/blog/themes/next/source/css/_custom/custom.styl12345.post-gallery .post-gallery-img img &#123; box-shadow: none; border-radius: unset; padding: 3px;&#125; 效果： group-picturesFront-matter： 1type: picture Usage： 123456&#123;% gp 4-3 %&#125;![photo_alt_1](photo_url_1)![photo_alt_2](photo_url_2)![photo_alt_3](photo_url_3)![photo_alt_4](photo_url_4)&#123;% endgp %&#125; 文件位置：~/blog/themes/next/source/css/_custom/custom.styl123.post .post-body .group-picture img &#123; box-shadow: none;&#125; 效果： https://github.com/iissnan/hexo-theme-next/blob/master/scripts/tags/group-pictures.js linkFront-matter： 1link: url 效果： quote？阅读主题的源代码发现的：~/blog/themes/next/layout/_macro/post.swig，有没有不确定，用法不确定…… Front-matter： 1type: quote 效果：]]></content>
  </entry>
</search>
